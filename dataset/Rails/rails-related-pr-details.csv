issueId,prId,prTitle,prDescription,prStatus,prFilePaths,prCreatorLoginId,prCreatedDate,prMergedDate
54681,54683,Don't deserialize mutable defaults,"Fix: https://github.com/rails/rails/issues/54681 Followup: https://github.com/rails/rails/pull/54585  We can't deserialize mutable types because otherwise mutations would leak  or we'd need to deep dup them. It's more efficient to keep them serialized in default.  However for immutable types like Integer  it's both faster and more correct to eagerly deserialize them. ",closed,activerecord/lib/active_record/attributes.rb; activerecord/lib/active_record/connection_adapters/column.rb; activerecord/test/cases/adapters/postgresql/geometric_test.rb; activerecord/test/cases/adapters/postgresql/json_test.rb; activerecord/test/cases/adapters/sqlite3/json_test.rb; activerecord/test/cases/adapters/sqlite3/sqlite3_adapter_test.rb; activerecord/test/cases/migration/change_schema_test.rb; activerecord/test/cases/migration/columns_test.rb; activerecord/test/cases/migration_test.rb,byroot,2025-03-03T20:50:24Z,2025-03-04T11:06:56Z
54636,54646,Fix CurrentAttributes not setting an attribute's default:,"### Motivation / Background  - Fix #54636  ### Detail  - ### Problem    When calling an attribute that has a default  `nil` would be returned instead.    ### Context    CurrentAttributes uses a cache to store each CurrentAttributes subclasses instance. When the class method `instance` gets called  we instantiate the class and populate the cache. The defaults of each attributes are set when the class is instantiated.    This basically means that once we instantiate the class  all attribute having a default that are later defined will be ignored.    ### Details    CurrentAttributes has a `method_added` hook which also call the `instance` class method. So depending on how your class is setup (e.g. you define a method and then define an attribute with a default)  you'd hit the bug.    This is even more sneaky when using a `delgate_to`:    ```ruby   class Current < CurrentAttributes     attribute :user_session     delegate :user  to: :user_session # Ends up triggering the `method_added` hook      attribute :foo  default: 0 # Default would be ignored.   end   ```    ### Solution    Remove the instance from the cache each time we define an attribute.    ### Alternative    We could modify the `method_added` hook instead but we'd still be prone to this issue anytime `respond_to_missing` or the `method_missing` hooks are called as they also trigger the bug.  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,activesupport/lib/active_support/current_attributes.rb; activesupport/test/current_attributes_test.rb,Edouard-chin,2025-02-28T00:55:40Z,2025-02-28T13:09:39Z
54595,54705,Don't rebuild the middleware stack when using `with_routing`,"### Motivation / Background  Fix #54595  ### Detail  #### Problem  When using the `with_routing` helper method in an integration test  we rebuild the middleware stack so that the entrypoint of our new stack is the new RouteSet object.  By rebuilding the middleware stack from scratch  we may end un-configuring a middleware from an application. We also break the contract of the Rails initialization process.  For instance  if you have a middleware that needs to be configured  after the Rails routes are loaded  this is what it would look like:  ```ruby # config/application.rb  warden_config = nil  config.middleware.use Warden::Manager do |config|   # The Warden middleware yields its config when the middleware is   # instantiated. We can't configure warden yet as the routes   # are not yet loaded.    warden_config = config end  initializer :configure_warden do   ActiveSupport.on_load(:after_routes_loaded) do     # The routes are now loaded  we can configure warden   end end ```  This snippet follows the order of the documented Rails initialization process where first the middleware stack is built and then the routes gets loaded.  --------------------  By rebuilding the middleware stack  we unconfigure what was done in the initializer.  ### Solution  Since rebuilding the middleware stack has some caveats  my idea is to modify the middleware stack original entry point and redefine `call` so that it calls our new RouteSet middleware. We have a reference to the original RouteSet middleware thanks to the `application.routes` method.   ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,actionpack/lib/action_dispatch/testing/assertions/routing.rb; actionpack/test/dispatch/routing_assertions_test.rb,Edouard-chin,2025-03-06T16:57:45Z,2025-03-07T13:38:58Z
54579,54581,Fix test when Rails may not be defined:,"Fix test when Rails may not be defined:  - Fix #54579 - I don't think it's worth moving that test to the railties suite  it's simple enough that we can stub a constant. - Worth to note: Reproducing the problem is dependent on the gem you have globally installed. But if you have never installed railties  and you run this test without activating the bundler spec (.e.g `ruby -I""lib:test test_file.rb`)  this would cause the problem.  >[!NOTE] > To backport please  ",closed,activerecord/test/cases/adapters/sqlite3/dbconsole_test.rb,Edouard-chin,2025-02-20T11:49:41Z,2025-02-21T09:03:31Z
54564,54569,Add shellcheck to CI to validate dev container entrypoint,"Fix: https://github.com/rails/rails/issues/54564 Fix: https://github.com/rails/rails/pull/54565  This would catch issues such as https://github.com/rails/rails/pull/54565 early. Shellcheck isn't just a linter  it is really good at catching shell script issues  I never write a script without it.",closed,.devcontainer/boot.sh; .github/workflows/devcontainer-shellcheck.yml; .github/workflows/devcontainer-smoke-test.yml,byroot,2025-02-19T09:10:31Z,2025-02-19T09:25:20Z
54563,54687,Stop generating bundler binstub:,"### Motivation / Background  - Fix #54563 - Prevent `rails new` from throwing a warning and `bin/rails g authentication` from crashing when Bundler cuts a new release.  ### Detail  In a future version of Bundler  running `bundle binstub bundler` will no longer generate a `bin/bundle` binstub. The reason for this change upstream is well explained in https://github.com/rubygems/rubygems/pull/8345.  #### Problem  When the change in Bundler is cut into a release  generating new rails application will throw a Bundler warning  and the AuthenticationGenerator which makes use of `bin/bundle` will stop working.  #### Solution  Stop generating a bundler binstub and modify the generator to use the same bundler command as the rest of the codebase.  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,guides/source/working_with_javascript_in_rails.md; railties/CHANGELOG.md; railties/lib/rails/generators/app_base.rb; railties/lib/rails/generators/bundle_helper.rb; railties/lib/rails/generators/rails/app/app_generator.rb; railties/lib/rails/generators/rails/authentication/authentication_generator.rb; railties/test/generators/app_generator_test.rb; railties/test/generators/authentication_generator_test.rb,Edouard-chin,2025-03-04T17:00:00Z,2025-03-05T05:03:55Z
54560,54561,Fix `update_all` producing a broken query when using more than one join on the target:,"- Fix #54560 - `update_all` would produce a broken query when using more than one JOIN on the target.  ```ruby Developer.join(:computer  :mentor).update_all(ready: true) ```  ### Before  ```sql UPDATE developers SET ready = true FROM computers JOIN mentors on mentors.id = developers.mentor_id WHERE developer.computer_id = computer.id; # We can't make a JOIN on the developer table  this should in the FROM clause. # We can't make a join on the target  that's what the FROM clause is used for. ```  ### After  ```sql UPDATE developers SET ready = true FROM computers  mentors WHERE developer.computer_id = computer.id AND developers.mentor_id = mentors.id; ```  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,activerecord/lib/arel/visitors/postgresql.rb; activerecord/lib/arel/visitors/sqlite.rb; activerecord/test/cases/relation/update_all_test.rb,Edouard-chin,2025-02-18T06:25:37Z,2025-02-20T08:31:14Z
54556,54585,Deserialize column defaults,"Fix: https://github.com/rails/rails/issues/54556  When getting an integer value from the database  all adapters will create return a real integer. But when we initialize an attribute from the column defaults  the attribute is given a string  that's inconsistent. ",closed,activerecord/lib/active_record/attributes.rb; activerecord/test/cases/adapters/postgresql/geometric_test.rb; activerecord/test/cases/adapters/postgresql/money_test.rb; activerecord/test/cases/defaults_test.rb,byroot,2025-02-21T11:08:40Z,2025-02-24T09:11:17Z
54529,54649,[ci skip] Document pluralize_table_names limitation with Rails generators,"### Motivation / Background  Fixes #54529  Some Rails installers (like Active Storage and Action Text) create tables with plural names regardless of the `pluralize_table_names` setting. This can cause confusion for users who have set `pluralize_table_names` to `false` expecting all table names to be singular. This PR adds documentation to clearly warn users about this limitation and the necessary manual steps they need to take.  ### Detail  This Pull Request adds a warning note in the `config.active_record.pluralize_table_names` section of the configuration guide (`guides/source/configuring.md`).  ### Additional information  Related discussions: - Active Storage plural tables: #52970 - Action Text plural tables: #54529  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why.  * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature.",closed,guides/source/configuring.md,yedhink,2025-02-28T06:24:02Z,2025-03-10T15:45:08Z
54518,54530,Only generate an UPDATE/FROM if the first join is an INNER JOIN,"Fix: https://github.com/rails/rails/issues/54518 Followup: https://github.com/rails/rails/pull/53950  SQLite3 and PostgreSQL dialects aren't flexible enough to allow more than a simple join.  ```sql UPDATE ""main_table"" SET ... FROM ""joined_table"" WHERE joined_table.foreign_key = main_table.primary_key ```  So if the first join is anything other than a regular INNER JOIN we have no choice but to degrade to the subquery scheme. ",closed,activerecord/lib/arel/visitors/postgresql.rb; activerecord/lib/arel/visitors/sqlite.rb; activerecord/test/cases/relation/update_all_test.rb,byroot,2025-02-14T09:12:37Z,2025-02-15T09:07:22Z
54501,54686,Generate mailer files in auth generator only if ActionMailer is used,"### Motivation / Background  This Pull Request has been created because if the authentication generator is run in an app created with `--skip-action-mailer`  the app will be silently broken. When deployed to an environment where `eager_load` is true  the app will fail to start as the generated `PasswordMailer` inherits from a nonexistent `ApplicationMailer`.  Fixes #54501   ### Detail  This Pull Request changes the authentication generator to skip all of the mailer-related files if `ActionMailer` is not defined. Also leave `PasswordsController#create` as blank to be implemented by the user.  ### Additional information  In my use case  a simple login was enough  and I created user(s) manually in a console. I do not need a password reset flow. An alternative approach would be to require an app to have `ActionMailer` to run the generator.  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,railties/CHANGELOG.md; railties/lib/rails/generators/rails/authentication/authentication_generator.rb; railties/lib/rails/generators/rails/authentication/templates/app/controllers/passwords_controller.rb.tt; railties/test/generators/authentication_generator_test.rb,ramimassoud,2025-03-04T15:17:49Z,2025-03-11T19:27:05Z
54487,54488,Avoid undefined String#squish in Rails::TestUnit,"Fix: https://github.com/rails/rails/issues/54487  We could also load the method  but it doesn't seem really necessary here. Might as well simpligy the code. ",closed,railties/lib/rails/test_unit/runner.rb,byroot,2025-02-10T21:31:36Z,2025-02-10T21:40:39Z
54471,54472,Pass keyword arguments to PostgreSQL Adapter Table methods,"<!-- Thanks for contributing to Rails!  Please do not make *Draft* pull requests  as they still send notifications to everyone watching the Rails repo.  Create a pull request when it is ready for review and feedback from the Rails team :).  If your pull request affects documentation or any non-code changes  guidelines for those changes are [available here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)  About this template  The following template aims to help contributors write a good description for their pull requests. We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added)  the motivation behind the changes  and complete the checklist below before opening a pull request.  Feel free to discard it if you need to (e.g. when you just fix a typo). -->  ### Motivation / Background  <!-- Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important? If you are fixing a specific issue  include ""Fixes #ISSUE"" (replace with the issue number  remove the quotes) and the issue will be linked to this PR. -->  Fixes #54471  ### Detail  `t.exclusion_constraint` and `t.unique_constraint` are extensions available only for the PostgreSQL adapter. These delegate the given arguments to `SchemaStatements#add_exclusion_constraint` etc.  but the current implementation receives all arguments as an array  so keyword arguments cannot be passed correctly. As a result  method calls that pass keyword arguments always result in an argument error.  This change fixes this issue by forwarding arguments using `...`.  Currently  `t.validate_constraint` and `t.validate_check_constraint` do not accept keyword arguments  but we changes them in preparation for the future.  ### Additional information  <!-- Provide additional information such as benchmarks  references to other repositories  or alternative solutions. -->  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,activerecord/lib/active_record/connection_adapters/postgresql/schema_definitions.rb; activerecord/test/cases/migration/change_table_test.rb,wata727,2025-02-08T14:38:29Z,2025-02-08T16:10:47Z
54433,54437,Allow to skip HashWithIndifferentAccess value conversion,"Fix: https://github.com/rails/rails/issues/54433  And use it to avoid casting hash values in ActiveModel::Dirty.  This is a tentative fix  I'm not particularly happy with it  but I can't think of any better solution. @matthewd what do you think?",closed,activemodel/lib/active_model/attribute_mutation_tracker.rb; activerecord/lib/active_record/store.rb; activerecord/test/cases/store_test.rb; activerecord/test/models/admin/user.rb; activesupport/lib/active_support/hash_with_indifferent_access.rb,byroot,2025-02-05T10:03:04Z,2025-02-09T08:22:36Z
54432,54440,Handle connection pool errors in Redis and Memcached stores,"Fix: https://github.com/rails/rails/issues/54432 ",closed,activesupport/lib/active_support/cache/mem_cache_store.rb; activesupport/lib/active_support/cache/redis_cache_store.rb,byroot,2025-02-05T18:52:54Z,2025-02-05T20:11:38Z
54432,54460,Handle ConnectionPool::TimeoutError in Redis and Memcached stores,"### Motivation / Background #54440 only handles `ConnectionPool::Error`  not `ConnectionPool::Timeout`. The `ConnectionPool::TimeoutError` does not inherit from `ConnectionPool::Error`.  ### Detail I updated the code to also rescue `ConnectionPool::Timeout` and added corresponding tests.  ### Additional information  - rails#54432 - rails#54440 ",closed,activesupport/lib/active_support/cache/mem_cache_store.rb; activesupport/lib/active_support/cache/redis_cache_store.rb; activesupport/test/cache/behaviors/connection_pool_behavior.rb; activesupport/test/cache/stores/redis_cache_store_test.rb,ryush00,2025-02-07T11:29:08Z,2025-02-07T13:00:41Z
54419,54420,Explicitly call I18n.exception_handler on missing translation,"Fix: https://github.com/rails/rails/issues/54419  Since `TranslationHelper#translate` always sets a `default`  missing translation is never considered like an error by `I18n` and the error handler is never called.  This makes I18n's exception handler pretty much unusable.  The solution is to explicitly call it ourselves  but the downside is we need to allocate that exception  which isn't free  but supposedly it's not expected to happen often.  Not sure if it is something we want to backport  though. Probably not.",closed,actionview/lib/action_view/helpers/translation_helper.rb; actionview/test/template/translation_helper_test.rb,byroot,2025-02-02T09:33:50Z,2025-02-03T08:54:06Z
54357,54371,Fix `rotate(on_on_rotation:)` and `#on_rotation`,"Ref: https://github.com/rails/rails/pull/44179 Fix: https://github.com/rails/rails/issues/54357  `MessageVerifier` and `MessageEncryptor` were intended to accept an `on_rotation` callback from the `#rotate` method or from the `#on_rotation` method.  This is particularly useful for codecs that aren't created by the user  but by the framework  like `ActiveRecord::Base.signed_id_verifier`  cc @AliSepehri  @jonathanhefner   We should backport this to 8.0 and 7.2 (potentially 7.1?)  because it was a documented feature  but never worked. ",closed,activesupport/lib/active_support/messages/rotator.rb; activesupport/test/messages/message_rotator_tests.rb,byroot,2025-01-27T11:01:43Z,2025-01-27T11:27:12Z
54343,54366,`PoolConfig` no longer keeps a reference to the connection class (attempt 3),"### Motivation / Background  Alt to https://github.com/rails/rails/pull/54350 and https://github.com/rails/rails/pull/54349  fixes https://github.com/rails/rails/issues/54343   ### Detail  This is variation on #54349 that extends `ConnectionHandler::StringConnectionName` to track `primary_class?`  and introduces `ActiveRecord::Base.preventing_writes?` that will accept a connection name and do the same thing that `current_preventing_writes` does on a record class.   ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [-] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,activerecord/CHANGELOG.md; activerecord/lib/active_record/connection_adapters/abstract/connection_handler.rb; activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb; activerecord/lib/active_record/connection_adapters/abstract_adapter.rb; activerecord/lib/active_record/connection_adapters/pool_config.rb; activerecord/lib/active_record/core.rb; activerecord/test/cases/connection_adapters/connection_swapping_nested_test.rb; activerecord/test/cases/multi_db_migrator_test.rb,flavorjones,2025-01-26T22:16:13Z,2025-01-27T17:23:01Z
54311,54314,Fix `serialize coder: JSON  type: Hash` to wrap the coder in `ColumnSerializer`,"Fix: https://github.com/rails/rails/issues/54311  cc @djmb @matthaigh27",closed,activerecord/lib/active_record/attribute_methods/serialization.rb; activerecord/test/cases/serialized_attribute_test.rb,byroot,2025-01-21T13:31:32Z,2025-01-21T14:28:53Z
54297,54306,Fix routes being cleared when using `reload_routes!`:,"## Fix routes being cleared when using `reload_routes!`:  ### Motivation / Background  Pretty sure it fixes #54297 and #53205  but both issues didn't provide enough information. Though it fixes a legitimate issue on a public API method.  ### Detail  When using `Rails.application.reload_routes!` (which is public API)  in certain conditions  it is possible that this will clear almost all routes in the routeset.  The line of code making this happen is this one. https://github.com/rails/rails/blob/38e9a72db45842d1d2f05fb2272df3a10225f981/actionpack/lib/action_dispatch/routing/route_set.rb#L460  That flag is supposed to be `true` for the entire duration of evaluating multiple route files. This was the case before https://github.com/rails/rails/pull/53522  which introduced the issue. It indirectly resets that flag to false because of a recursion. This is a summary of the code order execution when calling `Rails.application.reload_routes`:  1) The RouteSet sets the `disable_clear_and_finalize` flag to false  so that no routes gets cleared in between multiple call to `Rails.application.routes.draw`. [here](https://github.com/rails/rails/blob/38e9a72db45842d1d2f05fb2272df3a10225f981/railties/lib/rails/application/routes_reloader.rb#L57) 2) All route files get evaluated  and any call to `Rails.application.routes.draw` gets picked up. 3) We enter a recursion because the RouteSet in development is a LazyRouteSet which when calling `draw` reloads the route. [here](https://github.com/rails/rails/blob/38e9a72db45842d1d2f05fb2272df3a10225f981/railties/lib/rails/engine/lazy_route_set.rb#L72) and [here](https://github.com/rails/rails/blob/38e9a72db45842d1d2f05fb2272df3a10225f981/railties/lib/rails/application.rb#L163) 4) All route files get evaluated again  the `disable_clear_and_finalize` is reset to false  we exit the recursion and continue where we were. 5) The `disable_clear_and_finalize` is now false  any call to `Rails.application.draw` now resets all routes before it gets evaluated. Which basically means the very last one would have effect.  ------------------------  I can only think of two way where `reload_routes` may cause a issue:  - Inside a Rake task - Inside a middleware  This is because the application needs to be initialized and the routeset never evaluated in order to trigger the bug. https://github.com/railsware/js-routes/pull/320 and https://github.com/amatsuda/traceroute/issues/49 confirms it.  ## Solution  When calling `reload_routes!`  if the routes were never loaded  load them and set the `loaded` flag. Otherwise  also load them but with the difference that with the `loaded` flag set  we won't reset all routes.  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,actionpack/CHANGELOG.md; railties/lib/rails/application.rb; railties/lib/rails/application/routes_reloader.rb; railties/test/application/rake_test.rb,Edouard-chin,2025-01-21T05:00:50Z,2025-01-27T20:15:44Z
54267,54273,Prevent persisting invalid record:,"Prevent persisting invalid record:  - Fix #54267  ### Motivation / Background  - In #53951  the goal was to allow saving a record and its association even if the association had existing invalid records in the DB. We would not validate the association in that case.    The problem of not validating  is that it stops the validation chain and it's possible that other records in subsequent relations are being modified and are invalid. e.g. `Company -has_many-> Developers -has_many-> Computers`  if a computer is changed with invalid value and the company get saved  this would bypass the computer validation and persist it.    This commit fixes that by ensuring there are no validation errors from *changed* records in the whole association chain.  This Pull Request has been created because [REPLACE ME]  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,activerecord/lib/active_record/autosave_association.rb; activerecord/test/cases/autosave_association_test.rb; activerecord/test/cases/nested_attributes_test.rb; activerecord/test/models/treasure.rb,Edouard-chin,2025-01-17T00:51:46Z,2025-01-20T09:27:02Z
54263,54264,Ensure the logger gem is loaded in Rails 7.0,"### Motivation / Background  This Pull Request has been created because the `concurrent-ruby` gem's version 1.3.5 no longer loads the `logger` gem which breaks the internal logic of the `ActiveSupport::LoggerThreadSafeLevel` module.  This relates to the following commit in the `concurrent-ruby` gem included in version 1.3.5: https://github.com/ruby-concurrency/concurrent-ruby/commit/d7ce956dacd0b772273d39b8ed31a30cff7ecf38  ### Detail  This Pull Request changes the assumption that `concurrent-ruby` loads the `logger` gem.  ### Additional information  Fixes #54260  Fixes #54263  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [ ] Tests are added or updated if you fix a bug or add a feature. - Not sure how to test this as tests would need to be added for different versions of `concurrent-ruby` * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. - I believe this is minor? ",closed,activesupport/lib/active_support/logger_thread_safe_level.rb,ahukkanen,2025-01-16T09:23:01Z,2025-01-16T09:57:42Z
54260,54264,Ensure the logger gem is loaded in Rails 7.0,"### Motivation / Background  This Pull Request has been created because the `concurrent-ruby` gem's version 1.3.5 no longer loads the `logger` gem which breaks the internal logic of the `ActiveSupport::LoggerThreadSafeLevel` module.  This relates to the following commit in the `concurrent-ruby` gem included in version 1.3.5: https://github.com/ruby-concurrency/concurrent-ruby/commit/d7ce956dacd0b772273d39b8ed31a30cff7ecf38  ### Detail  This Pull Request changes the assumption that `concurrent-ruby` loads the `logger` gem.  ### Additional information  Fixes #54260  Fixes #54263  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [ ] Tests are added or updated if you fix a bug or add a feature. - Not sure how to test this as tests would need to be added for different versions of `concurrent-ruby` * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. - I believe this is minor? ",closed,activesupport/lib/active_support/logger_thread_safe_level.rb,ahukkanen,2025-01-16T09:23:01Z,2025-01-16T09:57:42Z
54241,54691,Fix channel generator import statement:,"### Motivation / Background  Fix #54241  ### Detail  #### Problem  The `import` statement generated is incorrect for Rails applications using importmap and a css processor.  #### Context  Rails applications using `importmap` and having a `package.json`  would get a `channel.js` file generated with a relative path  whereas the correct import statement needs to match the name of the importmap json keys.  This is because the generator assumes that if a `package.json` exists in the project  this means it uses a javascript bundling tool. This assumption is not correct as one can be using importmap while still having `package.json` for processing css. This is the case when you generate your application like this: `rails new blorgh --css postcss`  #### Solution  Add the right import statement by checking if the project uses importmap.  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,actioncable/lib/rails/generators/channel/channel_generator.rb; railties/test/generators/channel_generator_test.rb,Edouard-chin,2025-03-04T23:38:16Z,2025-03-05T05:40:37Z
54229,54236,Fix incorrect expiration time in ActiveSupport::Cache::Store#fetch,"### Motivation / Background Fixes #54229 ActiveSupport::Cache::Store#fetch  ### Detail ActiveSupport::Cache::Store#fetch write a the stale value during race_condition_ttl time window so the current process have time to process the block  and cache serve the stale value for other callers The stale value is written for expires_in =  2*race_condition_ttl  but the expires_in is leaked through options hash. When the process set the value at the end instead of using the expires_at/expires_in supplied in fetch  it uses 2*race_condition_ttl that was set previously The commit fix this behavior and ensure we use the correct expiration for the newly computed value  ### Checklist  Before submitting the PR make sure the following are checked:  * [X] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [X] Tests are added or updated if you fix a bug or add a feature. * [X] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,activesupport/lib/active_support/cache.rb; activesupport/test/cache/behaviors/cache_store_behavior.rb,mk-dhia,2025-01-14T07:11:41Z,2025-01-14T08:42:21Z
54162,54372,[ci skip] Clarify the doc for creating links:,"- We mention how `*_path` works with various examples and suddenly use a code snippet that don't use the `*_path` method.    Modified the doc to use `product_path(product.id)`  to make it explicit. While it's longer  it's clearer  especially since we are in the ""getting started guide""    I don't think mentioning how `link_to(product)` works is a good idea in this guide  the `link_to` accepts a crazy amount of different values with many heuristics to determine the url to generate. This is documented in the action view guide and in the API. Let's keep it simple in the Getting Started guide.    Fix #54162   ",closed,guides/source/getting_started.md,Edouard-chin,2025-01-27T11:50:54Z,2025-02-04T10:13:50Z
54140,54141,Fix: ensure PostgreSQL enum types can contain commas,"### Motivation / Background  PostgreSQL enums can have commas in their values  but this is not supported by the current implementation in ActiveRecord::ConnectionAdapters::PostgreSQL::SchemaDumper  This PR fixes this by updating `PostgreSQLAdapter.enum_types` to use PG `array_agg` instead of `string_agg`  effectively passing an array to the SchemaDumper and removing the need for splitting on commas.  ### Detail  Fixes #54140  ### Checklist  Before submitting the PR make sure the following are checked:  * [X] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [X] Tests are added or updated if you fix a bug or add a feature. * [X] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.",closed,activerecord/lib/active_record/connection_adapters/postgresql/schema_dumper.rb; activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb; activerecord/test/cases/adapters/postgresql/invertible_migration_test.rb; activerecord/test/cases/schema_dumper_test.rb,arthurhess,2025-01-07T17:33:53Z,2025-01-14T12:51:52Z
54134,54163,[Fix #54134] Add resource name to the `ArgumentError` that's raised when invalid `:only` or `:except` options are given to `#resource` or `#resources`,"### Motivation / Background  Fixes https://github.com/rails/rails/issues/54134  ### Detail  This makes it easier to locate the source of the problem  especially for routes drawn by gems.  Before:      :only and :except must include only [:index  :create  :new  :show  :update  :destroy  :edit]  but also included [:foo  :bar]  After:      Route `resources :products` - :only and :except must include only [:index  :create  :new  :show  :update  :destroy  :edit]  but also included [:foo  :bar]  ### Additional information  N/A  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,actionpack/CHANGELOG.md; actionpack/lib/action_dispatch/routing/mapper.rb; actionpack/test/controller/resources_test.rb,jagthedrummer,2025-01-08T16:10:01Z,2025-01-08T21:24:05Z
54132,54584,Add SafeBuffer to the list of messagepack serializable type:,"### Motivation / Background  Fix #54132  ### Detail  If an application sets its cookie serializer to message pack  it is not possible to add a SafeBuffer in its flash message.  ```ruby class PostController < ApplicationController   def index     flash.notice = t(:hello_html) # Raises an error   end end ```  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,actionpack/CHANGELOG.md; actionpack/test/controller/flash_test.rb; activesupport/lib/active_support/message_pack/extensions.rb; activesupport/test/message_pack/shared_serializer_tests.rb,Edouard-chin,2025-02-21T09:46:54Z,2025-02-22T09:31:45Z
54102,54114,Don't eagerly compile StringJoin nodes,"Fix: https://github.com/rails/rails/issues/54102  It really isn't necessary  but also the way it was done would cause bind variables to be lost  resulting in broken queries. ",closed,activerecord/lib/active_record/associations/join_dependency/join_association.rb; activerecord/test/cases/associations/join_model_test.rb; activerecord/test/models/post.rb,byroot,2025-01-04T10:50:02Z,2025-01-04T11:13:25Z
54076,54080,Fix `String#mb_chars` to never mutate the original String,"Fix: https://github.com/rails/rails/issues/54076  If we have to call `force_encoding`  we should dup the argument regardless of wheter it is frozen or not as not not mutate our arguments. ",closed,activesupport/lib/active_support/multibyte/chars.rb; activesupport/test/multibyte_test_helpers.rb,byroot,2024-12-30T09:05:30Z,2024-12-30T09:13:39Z
54056,54064,Support symbol proc on callback conditional,"### Motivation / Background   ActiveSupport::Callbacks supports both symbol method names and lambda functions  but it does not support SymbolProc  which can occasionally be used. Of course  a SymbolProc can be replaced with a simple symbol method name. However  due to meta-programming  errors may surface far from the callback definition and without a meaningful stack trace.    ![image](https://github.com/user-attachments/assets/5b3ed540-5bc5-408a-a68e-65745a6a9e39)  Even printing the stack trace from Rails itself does not help much in such cases. Here is the image after adding some debug statements inside Rails  I identified the output and discovered what `callback_name` refers to:   ![image](https://github.com/user-attachments/assets/9f629522-db84-4126-89bb-c1b038c5b68a)  My suggestion here is to either add support for SymbolProc or raise a clearer  this PR is to support SymbolProc    Fixes #54056    ### Detail   This PR modifies the `CallTemplate` inside ActiveSupport::Callbacks to handle cases where the method arity is less than 0. In such cases  the proc is assumed to be a SymbolProc  and it is treated as having a single argument.    ### Additional Information   This error is indirectly caused by auto-linting files in a `before_commit` hook since RuboCop enables the following cop by default:  https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/SymbolProc   ### Checklist   * [x] This Pull Request addresses a single change. Unrelated changes should be opened in separate PRs.   * [x] The commit message includes a detailed description of what was changed and why. If this PR fixes a related issue  it is referenced in the commit message (e.g.  `[Fix #issue-number]`).   * [x] Tests have been added or updated for bug fixes or new features.   * [x] CHANGELOG files have been updated for libraries with behavioral changes or new features. Documentation-only changes and minor bug fixes are excluded.",closed,activesupport/lib/active_support/callbacks.rb; activesupport/test/callbacks_test.rb,Roriz,2024-12-27T19:34:28Z,2024-12-30T13:28:36Z
54009,54014,Fix #54009 getting_started.md doc ,"<!-- Thanks for contributing to Rails!  Please do not make *Draft* pull requests  as they still send notifications to everyone watching the Rails repo.  Create a pull request when it is ready for review and feedback from the Rails team :).  If your pull request affects documentation or any non-code changes  guidelines for those changes are [available here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)  About this template  The following template aims to help contributors write a good description for their pull requests. We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added)  the motivation behind the changes  and complete the checklist below before opening a pull request.  Feel free to discard it if you need to (e.g. when you just fix a typo). -->  ### Motivation / Background  Fixes https://github.com/rails/rails/issues/54009  <!-- Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important? If you are fixing a specific issue  include ""Fixes #ISSUE"" (replace with the issue number  remove the quotes) and the issue will be linked to this PR. -->  This Pull Request has been created because there are some mistakes in getting_started.md doc  ### Detail  This Pull Request changes getting_started.md doc  ### Additional information  <!-- Provide additional information such as benchmarks  references to other repositories  or alternative solutions. -->  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,guides/source/getting_started.md,mohsen-alizadeh,2024-12-19T21:17:47Z,2025-01-07T16:34:05Z
53968,53971,Don't cache `module_parent_name` on anonymous modules,"Fix: https://github.com/rails/rails/issues/53968  An anonymous module can become named if assigned later  hence it's incorrect to cache `module_parent_name` if the module is anonymous. ",closed,activesupport/lib/active_support/core_ext/module/introspection.rb; activesupport/test/core_ext/module/introspection_test.rb,byroot,2024-12-16T09:36:27Z,2024-12-16T11:30:03Z
53938,53975,ErrorSubscriber: also marks the error causes as reported,"Fix: https://github.com/rails/rails/issues/53938  In some cases like `Template::Error`  the error may be unwrapped up the stack and end up being reported twice. ",closed,activesupport/lib/active_support/error_reporter.rb; activesupport/test/error_reporter_test.rb,byroot,2024-12-16T11:48:29Z,2024-12-16T13:06:27Z
53938,53979,Fix `ActionDispatch::Executor` to unwrap exceptions like other middlewares,"Fix: https://github.com/rails/rails/issues/53938  `ShowExceptions` and `DebugExceptions` know about some specific error classes that aren't meant to be displayed but simply wrap the real underlying error.  `ActionDispatch::Executor` should use the same logic. ",closed,actionpack/lib/action_dispatch/middleware/executor.rb,byroot,2024-12-17T10:51:30Z,2024-12-17T11:02:29Z
53934,53994,Fix count with group by qualified name on loaded relation,"Run `arel_columns` on the spawned relation because `arel_columns` is no longer a side-effect free helper method since #53064.  Fixes #53934. ",closed,activerecord/lib/active_record/relation/calculations.rb; activerecord/test/cases/calculations_test.rb,kamipo,2024-12-18T15:48:02Z,2024-12-18T16:36:28Z
53925,53941,Use Rack's SERVER_PROTOCOL instead of HTTP_VERSION header,"Fix: https://github.com/rails/rails/issues/53925 Ref: https://github.com/rack/rack/pull/1883  This will prevent issues with future version of rack and/or servers. ",closed,actionpack/lib/action_controller/metal/live.rb,byroot,2024-12-13T18:13:33Z,2024-12-13T18:26:02Z
53912,53966,Remove note about nested locale folders configuration,"This was added in #41872 and released in Rails 7.0  Fixes #53912. ",closed,guides/source/i18n.md,pixeltrix,2024-12-15T16:32:21Z,2024-12-15T19:13:49Z
53883,53891,Action Cable pg adapter: avoid using a pinned connection,"Fix: https://github.com/rails/rails/issues/53883  Action Cable must avoid using a pinned connection to subscribe to notifications as it can't be done in a thread safe way.  So it must ensure it has a dedicated connection for that. ",closed,actioncable/lib/action_cable/subscription_adapter/postgresql.rb; activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb,byroot,2024-12-10T11:50:32Z,2024-12-10T12:01:29Z
53858,53860,Address `ActiveRecord::InstrumentationTest#test_payload_connection_with_query_cache_enabled` failure,"### Motivation / Background  This commit addresses `ActiveRecord::InstrumentationTest#test_payload_connection_with_query_cache_enabled` failure with `postgresql` adapter because it executes `SHOW search_path` adds another notification that is executed via `sql_key`. This statements is not executed by other database adapters.  ### Detail  - Failures fixed by this commit  ```ruby $ ARCONN=postgresql bin/test test/cases/instrumentation_test.rb -n test_payload_connection_with_query_cache_enabled Using postgresql Run options: -n test_payload_connection_with_query_cache_enabled --seed 65179  F  Failure: ActiveRecord::InstrumentationTest#test_payload_connection_with_query_cache_enabled [test/cases/instrumentation_test.rb:142]: Expected 2 instead of 3 notifications for sql.active_record. Expected: 2   Actual: 3  bin/test test/cases/instrumentation_test.rb:138  Finished in 0.029114s  34.3482 runs/s  34.3482 assertions/s. 1 runs  1 assertions  1 failures  0 errors  0 skips $ ```  ### Additional information Fix #53858 Related to #53822  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [ ] Tests are added or updated if you fix a bug or add a feature. * [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,activerecord/test/cases/instrumentation_test.rb,yahonda,2024-12-06T05:43:49Z,2024-12-06T07:01:18Z
53813,53814,Skip minitest v5.25.3 to workaround CI failures,"### Motivation / Background  This commit skips minitest v5.25.3 to workaround CI failures as per reported https://github.com/rails/rails/issues/53813  Fix #53813  ### Detail It workarounds this error.  ```ruby $ bundle update minitest --conservative Fetching gem metadata from https://rubygems.org/......... Resolving dependencies... Resolving dependencies... Using minitest 5.25.3 (was 5.25.1) Bundle updated! $ bin/test /home/yahonda/.rbenv/versions/3.3.6/lib/ruby/gems/3.3.0/gems/minitest-5.25.3/lib/minitest/mock.rb:269:in `<module:Expectations>': undefined method `infect_an_assertion' for module Minitest::Expectations (NoMethodError)    infect_an_assertion :assert_mock  :must_verify  :unary   ^^^^^^^^^^^^^^^^^^^ 	from /home/yahonda/.rbenv/versions/3.3.6/lib/ruby/gems/3.3.0/gems/minitest-5.25.3/lib/minitest/mock.rb:261:in `<top (required)>' 	from /home/yahonda/.rbenv/versions/3.3.6/lib/ruby/3.3.0/bundled_gems.rb:69:in `require' 	from /home/yahonda/.rbenv/versions/3.3.6/lib/ruby/3.3.0/bundled_gems.rb:69:in `block (2 levels) in replace_require' 	from /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/testing/method_call_assertions.rb:3:in `<top (required)>' 	from /home/yahonda/.rbenv/versions/3.3.6/lib/ruby/3.3.0/bundled_gems.rb:69:in `require' 	from /home/yahonda/.rbenv/versions/3.3.6/lib/ruby/3.3.0/bundled_gems.rb:69:in `block (2 levels) in replace_require' 	from /home/yahonda/src/github.com/rails/rails/activesupport/test/abstract_unit.rb:16:in `<top (required)>' 	from /home/yahonda/src/github.com/rails/rails/activesupport/test/actionable_error_test.rb:3:in `require_relative' 	from /home/yahonda/src/github.com/rails/rails/activesupport/test/actionable_error_test.rb:3:in `<top (required)>' 	from /home/yahonda/.rbenv/versions/3.3.6/lib/ruby/3.3.0/bundled_gems.rb:69:in `require' 	from /home/yahonda/.rbenv/versions/3.3.6/lib/ruby/3.3.0/bundled_gems.rb:69:in `block (2 levels) in replace_require' 	from /home/yahonda/src/github.com/rails/rails/railties/lib/rails/test_unit/runner.rb:62:in `block in load_tests' 	from /home/yahonda/src/github.com/rails/rails/railties/lib/rails/test_unit/runner.rb:60:in `each' 	from /home/yahonda/src/github.com/rails/rails/railties/lib/rails/test_unit/runner.rb:60:in `load_tests' 	from /home/yahonda/src/github.com/rails/rails/railties/lib/rails/test_unit/runner.rb:52:in `run' 	from /home/yahonda/src/github.com/rails/rails/tools/test.rb:18:in `<top (required)>' 	from bin/test:5:in `require_relative' 	from bin/test:5:in `<main>' $ git diff diff --git a/Gemfile.lock b/Gemfile.lock index 263b7c4029..28cec71a21 100644 --- a/Gemfile.lock +++ b/Gemfile.lock @@ -367 7 +367 7 @@ GEM      mini_magick (4.13.2)      mini_mime (1.1.5)      mini_portile2 (2.8.7) -    minitest (5.25.1) +    minitest (5.25.3)      minitest-bisect (1.7.0)        minitest-server (~> 1.0)        path_expander (~> 1.1) $ ```  ### Additional information  Refer to https://github.com/minitest/minitest/issues/1022   ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [ ] Tests are added or updated if you fix a bug or add a feature. * [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,Gemfile; Gemfile.lock,yahonda,2024-12-04T01:12:50Z,2024-12-04T01:43:47Z
53758,54580,[Fix #53758] Raise `ActiveRecord::ReadOnlyError` when pessimistically locking with a readonly role,"<!-- Thanks for contributing to Rails!  Please do not make *Draft* pull requests  as they still send notifications to everyone watching the Rails repo.  Create a pull request when it is ready for review and feedback from the Rails team :).  If your pull request affects documentation or any non-code changes  guidelines for those changes are [available here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)  About this template  The following template aims to help contributors write a good description for their pull requests. We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added)  the motivation behind the changes  and complete the checklist below before opening a pull request.  Feel free to discard it if you need to (e.g. when you just fix a typo). -->  ### Motivation / Background  <!-- Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important? If you are fixing a specific issue  include ""Fixes #ISSUE"" (replace with the issue number  remove the quotes) and the issue will be linked to this PR. -->  An alternative approach to https://github.com/rails/rails/pull/53974 which fixes https://github.com/rails/rails/issues/53758.  ### Detail  Adds a condition in `ActiveRecord::Locking::Pessimistic#lock!` (also used by `#with_lock`) and `ActiveRecord::Relaton#exec_queries` to check if we're currently in the context of a readonly role (`prevent_writes: true`) and raise an error if so.  ### Additional information  <!-- Provide additional information such as benchmarks  references to other repositories  or alternative solutions. -->  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.",closed,activerecord/CHANGELOG.md; activerecord/lib/active_record/locking/pessimistic.rb; activerecord/lib/active_record/relation.rb; activerecord/test/cases/locking_test.rb,joshuay03,2025-02-20T11:30:26Z,2025-02-21T08:58:25Z
53754,54041,Ensure rdoc picks up Hash#deep_merge! [ci skip],"Fixes #53754  Same thing we do in other cases: https://github.com/rails/rails/blob/6dda150b5e4cd25c6af76b99fe9a5c5986691e05/activerecord/lib/active_record/core.rb#L528-L539  /cc @seanpdoyle ",closed,activesupport/lib/active_support/core_ext/hash/deep_merge.rb,zzak,2024-12-24T01:14:34Z,2025-01-07T16:30:04Z
53732,53735,NOT VALID constraints should not dump in `create_table`,"In PostgreSQL  FOREIGN KEY and CHECK constraints allows the NOT VALID option to ADD table constraint in ALTER TABLE statement.  https://www.postgresql.org/docs/current/sql-altertable.html#SQL-ALTERTABLE-DESC-ADD-TABLE-CONSTRAINT  Fortunately  foreign keys are not dumped as part of `create_table` so the ALTER TABLE specific options are restored correctly.  CHECK constraints are a feature supported by all adapters  but NOT VALID is a PostgreSQL-specific option  so only NOT VALID constraints are dumped as ALTER TABLE statements so as not to affect the behavior of other adapters.  Fixes #53732. ",closed,activerecord/lib/active_record/schema_dumper.rb; activerecord/test/cases/migration/check_constraint_test.rb,kamipo,2024-11-25T17:51:42Z,2024-11-26T05:03:55Z
53727,54614,Use `mariadb:lts` at Dev Container,"### Motivation / Background  This commit pins the MariaDB version to `lts` at the Dev Container because the `latest` tag raises unit test failures.  ### Detail Without this commit:  ```ruby $ ARCONN=mysql2 bin/test test/cases/relations_test.rb -n test_multiple_find_or_create_by_within_transactions Using mysql2 Run options: -n test_multiple_find_or_create_by_within_transactions --seed 35219  ... snip ... E  Error: CreateOrFindByWithinTransactions#test_multiple_find_or_create_by_within_transactions: ActiveRecord::StatementInvalid: Mysql2::Error: SAVEPOINT active_record_1 does not exist     /home/vscode/.rbenv/versions/3.4.1/lib/ruby/gems/3.4.0/gems/mysql2-0.5.6/lib/mysql2/client.rb:151:in 'Mysql2::Client#_query'     /home/vscode/.rbenv/versions/3.4.1/lib/ruby/gems/3.4.0/gems/mysql2-0.5.6/lib/mysql2/client.rb:151:in 'block in Mysql2::Client#query'     /home/vscode/.rbenv/versions/3.4.1/lib/ruby/gems/3.4.0/gems/mysql2-0.5.6/lib/mysql2/client.rb:150:in 'Thread.handle_interrupt'     /home/vscode/.rbenv/versions/3.4.1/lib/ruby/gems/3.4.0/gems/mysql2-0.5.6/lib/mysql2/client.rb:150:in 'Mysql2::Client#query'     lib/active_record/connection_adapters/mysql2/database_statements.rb:53:in 'ActiveRecord::ConnectionAdapters::Mysql2::DatabaseStatements#perform_query'     lib/active_record/connection_adapters/abstract/database_statements.rb:560:in 'block (3 levels) in ActiveRecord::ConnectionAdapters::DatabaseStatements#raw_execute'     /workspaces/rails/activesupport/lib/active_support/concurrency/share_lock.rb:186:in 'ActiveSupport::Concurrency::ShareLock#yield_shares'     /workspaces/rails/activesupport/lib/active_support/dependencies/interlock.rb:41:in 'ActiveSupport::Dependencies::Interlock#permit_concurrent_loads'     lib/active_record/connection_adapters/abstract/database_statements.rb:559:in 'block (2 levels) in ActiveRecord::ConnectionAdapters::DatabaseStatements#raw_execute'     lib/active_record/connection_adapters/abstract_adapter.rb:1019:in 'block in ActiveRecord::ConnectionAdapters::AbstractAdapter#with_raw_connection'     /workspaces/rails/activesupport/lib/active_support/concurrency/null_lock.rb:9:in 'ActiveSupport::Concurrency::NullLock#synchronize'     lib/active_record/connection_adapters/abstract_adapter.rb:988:in 'ActiveRecord::ConnectionAdapters::AbstractAdapter#with_raw_connection'     lib/active_record/connection_adapters/abstract/database_statements.rb:558:in 'block in ActiveRecord::ConnectionAdapters::DatabaseStatements#raw_execute'     /workspaces/rails/activesupport/lib/active_support/notifications/instrumenter.rb:58:in 'ActiveSupport::Notifications::Instrumenter#instrument'     lib/active_record/connection_adapters/abstract_adapter.rb:1139:in 'ActiveRecord::ConnectionAdapters::AbstractAdapter#log'     lib/active_record/connection_adapters/abstract/database_statements.rb:557:in 'ActiveRecord::ConnectionAdapters::DatabaseStatements#raw_execute'     lib/active_record/connection_adapters/abstract/database_statements.rb:601:in 'ActiveRecord::ConnectionAdapters::DatabaseStatements#internal_execute'     lib/active_record/connection_adapters/abstract/savepoints.rb:16:in 'ActiveRecord::ConnectionAdapters::Savepoints#exec_rollback_to_savepoint'     lib/active_record/connection_adapters/abstract/database_statements.rb:468:in 'ActiveRecord::ConnectionAdapters::DatabaseStatements#rollback_to_savepoint'     lib/active_record/connection_adapters/abstract/query_cache.rb:27:in 'ActiveRecord::ConnectionAdapters::AbstractAdapter#rollback_to_savepoint'     lib/active_record/connection_adapters/abstract/transaction.rb:433:in 'ActiveRecord::ConnectionAdapters::SavepointTransaction#rollback'     lib/active_record/connection_adapters/abstract/transaction.rb:614:in 'block in ActiveRecord::ConnectionAdapters::TransactionManager#rollback_transaction'     /workspaces/rails/activesupport/lib/active_support/concurrency/null_lock.rb:9:in 'ActiveSupport::Concurrency::NullLock#synchronize'     lib/active_record/connection_adapters/abstract/transaction.rb:611:in 'ActiveRecord::ConnectionAdapters::TransactionManager#rollback_transaction'     lib/active_record/connection_adapters/abstract/transaction.rb:628:in 'block in ActiveRecord::ConnectionAdapters::TransactionManager#within_new_transaction'     /workspaces/rails/activesupport/lib/active_support/concurrency/null_lock.rb:9:in 'ActiveSupport::Concurrency::NullLock#synchronize'     lib/active_record/connection_adapters/abstract/transaction.rb:623:in 'ActiveRecord::ConnectionAdapters::TransactionManager#within_new_transaction'     lib/active_record/connection_adapters/abstract/database_statements.rb:370:in 'ActiveRecord::ConnectionAdapters::DatabaseStatements#within_new_transaction'     lib/active_record/connection_adapters/abstract/database_statements.rb:362:in 'ActiveRecord::ConnectionAdapters::DatabaseStatements#transaction'     lib/active_record/transactions.rb:233:in 'block in ActiveRecord::Transactions::ClassMethods#transaction'     lib/active_record/connection_adapters/abstract/connection_pool.rb:412:in 'ActiveRecord::ConnectionAdapters::ConnectionPool#with_connection'     lib/active_record/connection_handling.rb:310:in 'ActiveRecord::ConnectionHandling#with_connection'     lib/active_record/transactions.rb:232:in 'ActiveRecord::Transactions::ClassMethods#transaction'     lib/active_record/relation/delegation.rb:105:in 'ActiveRecord::Delegation#transaction'     lib/active_record/relation.rb:275:in 'block in ActiveRecord::Relation#create_or_find_by'     lib/active_record/connection_adapters/abstract/connection_pool.rb:412:in 'ActiveRecord::ConnectionAdapters::ConnectionPool#with_connection'     lib/active_record/connection_handling.rb:310:in 'ActiveRecord::ConnectionHandling#with_connection'     lib/active_record/relation/delegation.rb:105:in 'ActiveRecord::Delegation#with_connection'     lib/active_record/relation.rb:274:in 'ActiveRecord::Relation#create_or_find_by'     lib/active_record/relation.rb:232:in 'ActiveRecord::Relation#find_or_create_by'     lib/active_record/querying.rb:24:in 'ActiveRecord::Querying#find_or_create_by'     test/cases/relations_test.rb:2488:in 'block in CreateOrFindByWithinTransactions#test_multiple_find_or_create_by_within_transactions'     test/cases/relations_test.rb:2517:in 'block (2 levels) in CreateOrFindByWithinTransactions#duel'     lib/active_record/connection_adapters/abstract/transaction.rb:626:in 'block in ActiveRecord::ConnectionAdapters::TransactionManager#within_new_transaction'     /workspaces/rails/activesupport/lib/active_support/concurrency/null_lock.rb:9:in 'ActiveSupport::Concurrency::NullLock#synchronize'     lib/active_record/connection_adapters/abstract/transaction.rb:623:in 'ActiveRecord::ConnectionAdapters::TransactionManager#within_new_transaction'     lib/active_record/connection_adapters/abstract/database_statements.rb:370:in 'ActiveRecord::ConnectionAdapters::DatabaseStatements#within_new_transaction'     lib/active_record/connection_adapters/abstract/database_statements.rb:362:in 'ActiveRecord::ConnectionAdapters::DatabaseStatements#transaction'     lib/active_record/transactions.rb:233:in 'block in ActiveRecord::Transactions::ClassMethods#transaction'     lib/active_record/connection_adapters/abstract/connection_pool.rb:418:in 'ActiveRecord::ConnectionAdapters::ConnectionPool#with_connection'     lib/active_record/connection_handling.rb:310:in 'ActiveRecord::ConnectionHandling#with_connection'     lib/active_record/transactions.rb:232:in 'ActiveRecord::Transactions::ClassMethods#transaction'     test/cases/relations_test.rb:2511:in 'block in CreateOrFindByWithinTransactions#duel'  bin/test test/cases/relations_test.rb:2487  Finished in 0.021513s  46.4840 runs/s  46.4840 assertions/s. 1 runs  1 assertions  0 failures  1 errors  0 skips $ ```  ### Additional information  Related to https://github.com/rails/buildkite-config/pull/130 https://github.com/rails/rails/issues/53727  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [ ] Tests are added or updated if you fix a bug or add a feature. * [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,.devcontainer/compose.yaml,yahonda,2025-02-25T06:19:24Z,2025-02-25T06:36:17Z
53710,54310,AS::MessageVerifier#verify always accept both safe and unsafe encoding,"Fix: https://github.com/rails/rails/issues/53710 Fix: https://github.com/rails/rails/pull/54290  The Rails 7.1 to 7.2 upgrade can be very complicated if you use Active Record's `find_signed` feature  as its MessageVerifier switched from regular Base64 encoding to URL-safe Base64 encoding  making all previously generated ids invalid.  To ease the transition  MessageVerifier's `url_safe` option now only control which encoding method is used to generate messages  for decoding them both are always valid.  cc @beauraF @AliSepehri  Also cc @matthewd for sanity checks.  ~~The idea here is to backport this change all the way back to 7.1  to ease the upgrade process. (I know it's out of policy  but that seem the sensible thing to do).~~  I don't see the need for an option that would disable the fallback behavior  but @matthewd if you feel strongly about it  I can add it. ",closed,activesupport/lib/active_support/message_verifier.rb; activesupport/test/message_verifier_test.rb,byroot,2025-01-21T11:15:21Z,2025-01-21T13:18:53Z
53682,53756,Correct documented order of `to_prepare` initialization event [ci skip],"[Fix #53682]  As described in the issue the documented order is incorrect. Since the order is that way since Rails 3.2 we just correct the documentation.",closed,guides/source/configuring.md,Flixt,2024-11-27T07:45:20Z,2024-11-27T08:30:02Z
53673,53692,Fix Mysql2Adapter support for prepared statements,"Fix: https://github.com/rails/rails/issues/53673  Performing a query with prepared statements using the Mysql2 adapter would result in `NoMethodError`. ",closed,activerecord/lib/active_record/connection_adapters/mysql2/database_statements.rb; activerecord/test/cases/adapters/mysql2/mysql2_adapter_test.rb,byroot,2024-11-21T09:06:11Z,2024-11-21T16:20:32Z
53667,53890,Fix lazy attribute method definitiont to be thread safe,"Fix: https://github.com/rails/rails/issues/53667 Followup: https://github.com/rails/rails/pull/50594  We can't safely check if attribute methods were generated or not as we may be in a race with another thread. As such we must always consider that maybe the mehtod was just generated. ",closed,activerecord/lib/active_record/attribute_methods.rb; activerecord/test/cases/attribute_methods_test.rb,byroot,2024-12-10T10:17:03Z,2024-12-10T11:11:55Z
53661,53705,Use `secret_key_base` from ENV or credentials when present locally,"### Motivation / Background  Since 0c76f17f2dbf0d7ad90c890e6f334743cacce41f  a `tmp/local_secret.txt` is always used for `Rails.config.secret_key_base` in the test and development environments. Previously  `ENV[""SECRET_KEY_BASE""]` or `Rails.application.credentials.secret_key_base` were used if present.  As the `secret_key_base` is used to generate signed IDs  it breaks Action Text attachments in development if they previously used the `secret_key_base` from ENV var or credentials. Accidentally deleting `tmp/local_secret.txt` will also break all local Action Text attachments.  The race condition in generating the local secret file  as reported in https://github.com/rails/rails/issues/53661  should be avoidable by setting `ENV[""SECRET_KEY_BASE""]` or `Rails.application.credentials.secret_key_base`  but this currently doesn't work.  Fixes #53661  Fixes #54277  ### Details  When `ENV[""SECRET_KEY_BASE""]` or `Rails.application.credentials.secret_key_base` is set for test or development  it should be used for the `Rails.config.secret_key_base`  instead of generating a `tmp/local_secret.txt`.  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,railties/CHANGELOG.md; railties/lib/rails/application.rb; railties/lib/rails/application/configuration.rb; railties/test/application/configuration_test.rb,p8,2024-11-22T09:25:16Z,2025-01-17T20:03:05Z
53606,53640,class_attribute: delegate to an internal namespaced method,"Fix: https://github.com/rails/rails/issues/53606  `class_attribute` never composed well with `prepend` or `alias_method_chain`. Up to 7.2  whenever the value was re-assigned  the reder method was redefined.  Now  since 8.0  we no longer redefine the reader  or at least in less cases  but then the writer is sometimes redefined too  which restrict even more how much decoration can be done.  A solution to this is to define class attributes under a namespaces and then define a two simple delegator methods to allow decoration.  Of course it's one extra method call  but that's still miles better than what it used to be  and probably acceptable.  cc @zvkemp ",closed,activesupport/lib/active_support/callbacks.rb; activesupport/lib/active_support/class_attribute.rb; activesupport/lib/active_support/core_ext/class/attribute.rb; activesupport/test/callbacks_test.rb; activesupport/test/core_ext/class/attribute_test.rb,byroot,2024-11-14T16:54:32Z,2024-11-15T10:35:15Z
53581,53585,[Fix #53581] Fix error when building devcontainer,"### Motivation / Background  Fixes #53581   ### Detail  When building the Rails devcontainer the `apt-get` step of the Dockerfile was failing with a permissions error. Specifically:  ``` > devcontainer build --workspace-folder . ... => ERROR [rails dev_container_auto_added_stage_label  2/19] RUN apt-get update && export DEBIAN_FRONTEND=noninteractive     && apt-get -y install --no-install-recommends         mariadb-client libmariadb-dev         postgr  0.1s 0.151 Reading package lists... 0.158 E: List directory /var/lib/apt/lists/partial is missing. - Acquire (13: Permission denied) ```  This PR fixes the permissions error by using `sudo` as appropriate.  The bug this PR fixes was introduced by #53554  but why this is so is not entirely clear.  ### Additional information  N/A  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [N/A] Tests are added or updated if you fix a bug or add a feature. * [N/A] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.",closed,.devcontainer/Dockerfile,jchilders,2024-11-10T19:59:43Z,2024-11-25T17:22:12Z
53564,53580,[Fix #53564] Ensure normalized attribute queries are consistent for `nil` and normalized `nil`,"<!-- Thanks for contributing to Rails!  Please do not make *Draft* pull requests  as they still send notifications to everyone watching the Rails repo.  Create a pull request when it is ready for review and feedback from the Rails team :).  If your pull request affects documentation or any non-code changes  guidelines for those changes are [available here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)  About this template  The following template aims to help contributors write a good description for their pull requests. We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added)  the motivation behind the changes  and complete the checklist below before opening a pull request.  Feel free to discard it if you need to (e.g. when you just fix a typo). -->  ### Motivation / Background  <!-- Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important? If you are fixing a specific issue  include ""Fixes #ISSUE"" (replace with the issue number  remove the quotes) and the issue will be linked to this PR. -->  Fixes https://github.com/rails/rails/issues/53564  ### Detail  Updates `Arel::Visitors::ToSql#visit_Arel_Nodes_Equality` to look ahead at the database value and check if it's `nil`  and if so  uses `IS NULL` instead of `=` in the resulting query. The value is memoised [here](https://github.com/rails/rails/blob/852d0cd4123463cf215f4b024801b256857295c4/activerecord/lib/active_record/relation/query_attribute.rb#L26-L29)  so I doubt this change has any major performance implications in the case where the condition is falsey and the `=` branch is executed.  **Edit:** Looks like `ActiveRecord::Relation::QueryAttribute#nil?` already does a similar check  so I went with [this approach](https://github.com/rails/rails/compare/0957be203f2d172ccdaa9a2a0023a56b551a4db4..a6e06e11fedc753bcc8018e4aed83f967c1f94a4) instead.  ### Additional information  <!-- Provide additional information such as benchmarks  references to other repositories  or alternative solutions. -->  NA  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.",closed,activerecord/lib/active_record/relation/query_attribute.rb; activerecord/test/cases/normalized_attribute_test.rb,joshuay03,2024-11-10T12:43:13Z,2024-11-15T10:51:45Z
53558,53647,Silence deprecate message during `app:udpate` command,"### Detail  When users run this command  they don't have a `new_framework_defaults` yet. So they may not know about new deprecations and messages would be just noise. I think it's better to silence those messages to avoid confusion.  Fixes #53558.  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,railties/lib/rails/commands/app/update_command.rb; railties/test/generators/app_generator_test.rb; railties/test/generators/generators_test_helper.rb,y-yagi,2024-11-15T05:52:01Z,2024-11-15T10:59:53Z
53509,53514,Fix `order` with using association name as an alias,"Related #53064.  We need to mark user-supplied table references as possibly association names.  Fixes #53509. ",closed,activerecord/lib/active_record/relation/query_methods.rb; activerecord/test/cases/relation/order_test.rb,kamipo,2024-11-01T05:26:01Z,2024-11-01T05:43:51Z
53500,53504,[ci skip] Fix the page scrolling to top when in mobile mode,"### Motivation / Background  Fixes #53500   ### Checklist  Before submitting the PR make sure the following are checked:  * [X] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [ ] Tests are added or updated if you fix a bug or add a feature. * [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,guides/assets/javascripts/guides.js,SleeplessByte,2024-10-30T22:37:24Z,2024-11-05T19:18:28Z
53482,53488,Fix incorrect database.yml with skip_solid,"Fixes #53482  This fix a bug that omits the `skip_solid` option when calling the devcontainer generator with from the app generator.   Generally benign  except when overriding certain files like the `database.yml` when the postgresql flag is also active.   Rails new with `--devcontainer --skip_solid -d postgresql` would ignore the skip_solid and insert solid databases info in the `database.yml` config.   ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,railties/lib/rails/generators/rails/app/app_generator.rb; railties/lib/rails/generators/rails/devcontainer/devcontainer_generator.rb; railties/test/generators/app_generator_test.rb,JoeDupuis,2024-10-29T20:46:16Z,2024-10-29T23:42:34Z
53468,53480,Unify query values deduplication for multi values,"In the multi values normalization #39333  I also wanted to deduplicate that (#38145  29874cc)  but the lack of deduplication for some multi values was leaking into the behavior (#39171)  so we had to deprecate that behavior first (#39358).  And then the newly added multi values caused an issue again due to the lack of deduplication (#53468).  To avoid such issues in the future  deduplicate all remaining multi values that are not currently deduplicated  and add a test to ensure that all multi values (including those that will be added in the future) are deduplicated. ",closed,activerecord/lib/active_record/relation/calculations.rb; activerecord/lib/active_record/relation/query_methods.rb; activerecord/test/cases/relation/merging_test.rb; activerecord/test/cases/relation_test.rb,kamipo,2024-10-29T09:44:30Z,2024-10-29T10:36:34Z
53467,53515,Ensure proper output of traces for dasherized Rails application name,"<!-- Thanks for contributing to Rails!  Please do not make *Draft* pull requests  as they still send notifications to everyone watching the Rails repo.  Create a pull request when it is ready for review and feedback from the Rails team :).  If your pull request affects documentation or any non-code changes  guidelines for those changes are [available here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)  About this template  The following template aims to help contributors write a good description for their pull requests. We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added)  the motivation behind the changes  and complete the checklist below before opening a pull request.  Feel free to discard it if you need to (e.g. when you just fix a typo). -->  ### Motivation / Background  <!-- Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important? If you are fixing a specific issue  include ""Fixes #ISSUE"" (replace with the issue number  remove the quotes) and the issue will be linked to this PR. -->  Ensure proper output of traces for dasherized Rails application names  ### Detail  Fix https://github.com/rails/rails/issues/53467  ### Additional information  Related to #50825 #52616  <!-- Provide additional information such as benchmarks  references to other repositories  or alternative solutions. -->  ### Checklist  Before submitting the PR make sure the following are checked:  * [X] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [X] Tests are added or updated if you fix a bug or add a feature. * [X] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,railties/lib/rails/backtrace_cleaner.rb; railties/test/backtrace_cleaner_test.rb,k-tsuchiya-jp,2024-11-01T07:20:44Z,2024-11-05T19:16:41Z
53464,53527,Fix invalid response when rescuing `ActionController::Redirecting::UnsafeRedirectError` in a controller,"Consider a controller that does this:  ```ruby     begin       redirect_to ""http://www.rubyonrails.org/""  allow_other_host: false     rescue ActionController::Redirecting::UnsafeRedirectError       render plain: ""caught error""     end ```  The `redirect_to` will raise and the `rescue` will execute. But currently  the response status will still be changed (to 302). So even if you render something  we will return to the browser a 302 response code  with no response location.  I don't think this is a valid response  and it's definitely surprising: if `redirect_to` raises  you don't expect it to still tell the browser to redirect.  This PR fixes this  by only setting the status once the location has been verified.  Note: I came across this issue while trying to work around https://github.com/rails/rails/issues/53464  but it's not dependent on that issue. ",closed,actionpack/lib/action_controller/metal/redirecting.rb; actionpack/test/controller/redirect_test.rb,ghiculescu,2024-11-04T01:00:32Z,2024-11-04T03:42:09Z
53452,53623,Prevent Active Storage Blob from autosaving Attachments:,"Fix: #50800  Fix: #53451  ### Motivation / Background  This commit is meant to fix a behaviour change introduced in #50800  which causes issues reported in #53451 and #53452.  ### Detail  There are a lot of codepaths and callbacks happening and the issue is subtle which makes things a bit tricky to explain  but in short  adding the `inverse_of` on the `ActiveStorage::Attachment <-> Blob` relation added behavioural difference on how the Attachement get saved.  ### Problem    By adding the `ActiveStorage::Attachment <-> Blob` inverse_of in #50800  a Blob is now aware of its associated Attachment and this creates a problem: **Order of association save callbacks**    ```ruby   class User < ApplicationRecord     has_one_attached :avatar      blob = create_active_storage_blob(""avatar.png"")     User.create!(avatar: blob)   end   ```    ----------------------    Before #50800  this was the order of how the records were persisted:       1. Blob is created   2. User is created   3. Blob is updated through the User<->Blob autosave association (Active storage [modifies some metadata](https://github.com/rails/rails/blob/ad9bc2a51d5980d1c0990db97e552015410778f0/activestorage/lib/active_storage/attached/changes/create_one.rb#L12) on the Blob when creating an attachment)   4. Attachment is created through the User<->Attachment autosave association      ----------------------    After #50800  this is the order:       1-3. Similar as above   4.   Attachment is created through the ~User~Blob<->Attachment autosave association    ___________________________________   The reasons this creates the issues in #53451 and #53452 are different so I'll explain them separately.      #### Problem in #53451    Because an Attachment now gets created through the Blob association in a [after_update](https://github.com/rails/rails/blob/ad9bc2a51d5980d1c0990db97e552015410778f0/activerecord/lib/active_record/autosave_association.rb#L198) callback that **runs prior** to the [`Blob#touch_attachments`](https://github.com/rails/rails/blob/ad9bc2a51d5980d1c0990db97e552015410778f0/activestorage/app/models/active_storage/blob.rb#L44) after_update callback  the Blob will now `touch` associated attachments which by repercusion ends up loading the record (e.g the User in the example above) and touching it.    By calling `user.touch_later`  this adds the user (that was loaded from the db  not the one in memory)  to the transaction which ultimately gets used and replace the one in memory to run the commit callbacks [here](https://github.com/rails/rails/blob/ad9bc2a51d5980d1c0990db97e552015410778f0/activerecord/lib/active_record/touch_later.rb#L23) and [here](https://github.com/rails/rails/blob/67c6ef2e5957152f00050224281ed4eabaaebd92/activerecord/lib/active_record/persistence.rb#L911) A simple example is the following:    ```ruby   class Car < ApplicationRecord     attr_accessor :engine_sound      after_save :touch_car     after_commit :rev_engine      def touch_car       Car.find(1).touch     end      def rev_engine       puts engine_sound # => nil     end   end    Car.new(id: 1  engine_sound: ""vroom"")   ```    #### Problem in #53452    Previously  the User could see the `Attachment#previously_new_record?` being true. This is again because the Attachment used to be created thanks to the autosave association on their relation.    Now that the Attachment is saved through the Blob autosave association  when the User<->Attachment autosave association is called  the attachment is already persisted so it's considered an updat and we end up in a different codepath which as a result ends up resetting the `@previously_new_record` flag. ([here](https://github.com/rails/rails/blob/67c6ef2e5957152f00050224281ed4eabaaebd92/activerecord/lib/active_record/associations/collection_association.rb#L377) and [here](https://github.com/rails/rails/blob/67c6ef2e5957152f00050224281ed4eabaaebd92/activerecord/lib/active_record/persistence.rb#L263))    ### Solution    I couldn't find a better way but to modify the Blob<->Attachment relation and sets the autosave to false.   This way  the Blob is not responsible to save the attachment  but the record (User) is.   I also don't think it made sense anyway to have the Blob be responsible to save the Attachment.    I tried to think of reasons that this would create issues where we instantiate a Blob and an Attachment  saves the Blob and leave the Attachment unsaved but I couldn't think of any. The reason is because an Attachment needs a record (e.g. User) to be valid and that same record will be saving the attachment.    > [!IMPORTANT]   > If for reasons an application changes the metadata of an **existing** Blob and saves it  its existing Attachment and dirty attributes would not be saved with this commit.   >   > Is this a common scenario? I don't know.  ### Additional information  We could revert #50800 and set the inverse_of explicitly to `nil` on the Blob<->Attachment instead of this commit.   ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.  Fix #53451  Fix #53452",closed,activestorage/CHANGELOG.md; activestorage/app/models/active_storage/blob.rb; activestorage/test/models/attachment_test.rb; activestorage/test/test_helper.rb,Edouard-chin,2024-11-13T14:54:50Z,2024-12-19T09:39:50Z
53451,53623,Prevent Active Storage Blob from autosaving Attachments:,"Fix: #50800  Fix: #53451  ### Motivation / Background  This commit is meant to fix a behaviour change introduced in #50800  which causes issues reported in #53451 and #53452.  ### Detail  There are a lot of codepaths and callbacks happening and the issue is subtle which makes things a bit tricky to explain  but in short  adding the `inverse_of` on the `ActiveStorage::Attachment <-> Blob` relation added behavioural difference on how the Attachement get saved.  ### Problem    By adding the `ActiveStorage::Attachment <-> Blob` inverse_of in #50800  a Blob is now aware of its associated Attachment and this creates a problem: **Order of association save callbacks**    ```ruby   class User < ApplicationRecord     has_one_attached :avatar      blob = create_active_storage_blob(""avatar.png"")     User.create!(avatar: blob)   end   ```    ----------------------    Before #50800  this was the order of how the records were persisted:       1. Blob is created   2. User is created   3. Blob is updated through the User<->Blob autosave association (Active storage [modifies some metadata](https://github.com/rails/rails/blob/ad9bc2a51d5980d1c0990db97e552015410778f0/activestorage/lib/active_storage/attached/changes/create_one.rb#L12) on the Blob when creating an attachment)   4. Attachment is created through the User<->Attachment autosave association      ----------------------    After #50800  this is the order:       1-3. Similar as above   4.   Attachment is created through the ~User~Blob<->Attachment autosave association    ___________________________________   The reasons this creates the issues in #53451 and #53452 are different so I'll explain them separately.      #### Problem in #53451    Because an Attachment now gets created through the Blob association in a [after_update](https://github.com/rails/rails/blob/ad9bc2a51d5980d1c0990db97e552015410778f0/activerecord/lib/active_record/autosave_association.rb#L198) callback that **runs prior** to the [`Blob#touch_attachments`](https://github.com/rails/rails/blob/ad9bc2a51d5980d1c0990db97e552015410778f0/activestorage/app/models/active_storage/blob.rb#L44) after_update callback  the Blob will now `touch` associated attachments which by repercusion ends up loading the record (e.g the User in the example above) and touching it.    By calling `user.touch_later`  this adds the user (that was loaded from the db  not the one in memory)  to the transaction which ultimately gets used and replace the one in memory to run the commit callbacks [here](https://github.com/rails/rails/blob/ad9bc2a51d5980d1c0990db97e552015410778f0/activerecord/lib/active_record/touch_later.rb#L23) and [here](https://github.com/rails/rails/blob/67c6ef2e5957152f00050224281ed4eabaaebd92/activerecord/lib/active_record/persistence.rb#L911) A simple example is the following:    ```ruby   class Car < ApplicationRecord     attr_accessor :engine_sound      after_save :touch_car     after_commit :rev_engine      def touch_car       Car.find(1).touch     end      def rev_engine       puts engine_sound # => nil     end   end    Car.new(id: 1  engine_sound: ""vroom"")   ```    #### Problem in #53452    Previously  the User could see the `Attachment#previously_new_record?` being true. This is again because the Attachment used to be created thanks to the autosave association on their relation.    Now that the Attachment is saved through the Blob autosave association  when the User<->Attachment autosave association is called  the attachment is already persisted so it's considered an updat and we end up in a different codepath which as a result ends up resetting the `@previously_new_record` flag. ([here](https://github.com/rails/rails/blob/67c6ef2e5957152f00050224281ed4eabaaebd92/activerecord/lib/active_record/associations/collection_association.rb#L377) and [here](https://github.com/rails/rails/blob/67c6ef2e5957152f00050224281ed4eabaaebd92/activerecord/lib/active_record/persistence.rb#L263))    ### Solution    I couldn't find a better way but to modify the Blob<->Attachment relation and sets the autosave to false.   This way  the Blob is not responsible to save the attachment  but the record (User) is.   I also don't think it made sense anyway to have the Blob be responsible to save the Attachment.    I tried to think of reasons that this would create issues where we instantiate a Blob and an Attachment  saves the Blob and leave the Attachment unsaved but I couldn't think of any. The reason is because an Attachment needs a record (e.g. User) to be valid and that same record will be saving the attachment.    > [!IMPORTANT]   > If for reasons an application changes the metadata of an **existing** Blob and saves it  its existing Attachment and dirty attributes would not be saved with this commit.   >   > Is this a common scenario? I don't know.  ### Additional information  We could revert #50800 and set the inverse_of explicitly to `nil` on the Blob<->Attachment instead of this commit.   ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.  Fix #53451  Fix #53452",closed,activestorage/CHANGELOG.md; activestorage/app/models/active_storage/blob.rb; activestorage/test/models/attachment_test.rb; activestorage/test/test_helper.rb,Edouard-chin,2024-11-13T14:54:50Z,2024-12-19T09:39:50Z
53441,53733,Fix rails new with --devcontainer --pretend,"### Motivation / Background  $ rails new foo --devcontainer --pretend currently fails as the `DevcontainerGenerator` doesn't receive the pretend-option. This currently results in a .devcontainer folder being created in CWD  followed by a templating error that halts the process.  Fix #53441  ### Detail  This PR passes the pretend-option to the `DevcontainerGenerator` so it won't generate anything (and then blow up)  and instead just show the files it would create: ``` ...       create  tmp/storage/.keep       create  .devcontainer       create  .devcontainer/devcontainer.json       create  .devcontainer/Dockerfile       create  .devcontainer/compose.yaml       create  config/database.yml ... ```  ### Checklist  Before submitting the PR make sure the following are checked:  * [X] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [X] Tests are added or updated if you fix a bug or add a feature. * ~~[ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.~~ ",closed,railties/lib/rails/generators/rails/app/app_generator.rb; railties/test/generators/app_generator_test.rb,eval,2024-11-25T16:47:26Z,2024-11-25T17:24:49Z
53435,53436,Deserialize auto populated columns on Active Record object creation,"### Motivation / Background  Fixes #53435  This Pull Request has been created because values returned from the databases need to be deserialized as they may use a different format  such as PostgreSQL bytea ""hex"" format.  ### Detail  This Pull Request replaces `#write_from_user` with `#write_from_database` when assigning the auto populated values returned by the database.  ### Additional information  I don't like the fact that we access `@attributes` directly  but `#reload` does it too and it's the simplest solution.  Alternatives considered: * Adding an ad-hoc `_write_attribute_from_database` method somewhere (`ActiveRecord::AttributeMethods::Write`?). * Deserializing the value using `attributes_builder.types[column].deserialize(value)`.    ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,activerecord/lib/active_record/persistence.rb; activerecord/test/cases/persistence_test.rb; activerecord/test/schema/postgresql_specific_schema.rb,baarde,2024-10-24T13:40:13Z,2024-10-30T06:50:03Z
53407,53408,Fix enum labels to accepts as keyword arguments,"Enum accepts labels as keyword arguments is originally intended in #41328  so I documented and covered by test that.  https://github.com/rails/rails/blob/0618d2d84a501aea93c898aec504ff9a0e09d6f2/activerecord/lib/active_record/enum.rb#L60-L65 https://github.com/rails/rails/blob/0618d2d84a501aea93c898aec504ff9a0e09d6f2/activerecord/test/cases/enum_test.rb#L702-L713  I'm not against dropping that support to simplify codebase  at least we should deprecation that before removing.  Fixes #53407. ",closed,activerecord/lib/active_record/enum.rb; activerecord/test/cases/enum_test.rb,kamipo,2024-10-22T04:02:37Z,2024-10-22T05:05:40Z
53399,53400,Translate `no connection to the server` to ConnectionNotEstablished,"### Motivation / Background  Fixes https://github.com/rails/rails/issues/53399  In PostgreSQL  if a network error occurs when submitting a query to the server  the `PG::UnableToSend: no connection to the server` error may occur.  - https://github.com/ged/ruby-pg/blob/v1.5.8/ext/pg_connection.c#L1945 - https://github.com/postgres/postgres/blob/REL_17_0/src/interfaces/libpq/fe-exec.c#L1689  The current low-level exception translator `translate_exception` primarily translates `PG::ConnectionBad` into a retryable exception  so exceptions like the one above will not be retried by `allow_retry: true`.  However  as we can see from the libpq  this query is guaranteed to return an error before being executed  so it should be safe to retry.  ### Detail  This PR changes `PostgreSQLAdapter#translate_exception` to translate `PG::UnableToSend: no connection to the server` to `ConnectionNotEstablished` as same as ""connection is closed"".  ### Additional information  This change is similar to https://github.com/rails/rails/pull/48093  but it targets ""no connection to the server"" instead of ""server closed the connection"". As @matthewd  says  the latter may not safe to retry  but the former should be.  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,activerecord/CHANGELOG.md; activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb; activerecord/test/cases/adapters/postgresql/postgresql_adapter_test.rb,wata727,2024-10-21T11:49:03Z,2024-10-24T07:49:18Z
53397,53453,Fix routes with `::` in the path,"When a route has `::` in the path  the scanner was not able to parse it correctly. This was because the scanner was not checking if the next byte was a `:` when the current byte was a `:`.  This will match the behavior of the old parser.  It feels like the `#peek_byte` on the string scanner should accept a position to peek at  but it doesn't. So we have to use `#getbyte` to get the byte at the next position.  Fixes #53397.",closed,actionpack/lib/action_dispatch/journey/scanner.rb; actionpack/test/dispatch/routing_test.rb; actionpack/test/journey/route/definition/scanner_test.rb,rafaelfranca,2024-10-25T22:59:53Z,2024-10-29T20:58:16Z
53394,53471,Maintain Rack 2 parameter parsing behaviour,"When running under Rack 3  we'll proceed with the new behaviour. That means we won't affect applications that already use Rack 3  but does also mean we can't help an application that is simultaneously bumping Rails and Rack together. 🤷🏻‍♂️  However  with this commit  we at least ensure we maintain compatibility for applications that are currently still on Rack 2 -- and we can help with the transition using deprecation warnings... though there's admittedly a decent chance such warnings will only show up in production.  Fixes #53394 ",closed,actionpack/lib/action_dispatch/http/param_builder.rb; actionpack/lib/action_dispatch/http/query_parser.rb; actionpack/lib/action_dispatch/railtie.rb; actionpack/test/dispatch/param_builder_test.rb; actionpack/test/dispatch/query_parser_test.rb,matthewd,2024-10-28T15:37:43Z,2024-10-29T20:11:54Z
53368,53377,Fix a order-dependant test failure in railties,"Reproduce with `bin/test --seed 27653`  Closes #53368",closed,railties/test/application/configuration/custom_test.rb,Earlopain,2024-10-19T09:57:40Z,2024-10-21T18:30:44Z
53348,53379,`db:prepare` no longer loads seed when non-primary db is created,"### Motivation / Background  Issue #53348 describes an issue where  after adding Solid Cache to an application  running db:prepare in production re-loaded the seeds  potentially leading to data loss.  Closes #53348  ### Detail  This PR introduces a new database config property `seeds` to control whether seeds are loaded during `db:prepare` which defaults to `true` for primary database configs and `false` otherwise.  Previously  the `db:prepare` task would load seeds whenever a new database is created  leading to potential loss of data if a database is added to an existing environment.  Also  update the Active Record Migrations guide to more accurately describe what the `db:prepare` task does  correcting some misinformation introduced in #49480 along the way.   ### Additional information  See previous rejected proposal at #53354   ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,activerecord/lib/active_record/database_configurations/database_config.rb; activerecord/lib/active_record/database_configurations/hash_config.rb; activerecord/lib/active_record/tasks/database_tasks.rb; activerecord/test/cases/database_configurations/hash_config_test.rb; guides/source/active_record_migrations.md,flavorjones,2024-10-19T14:09:01Z,2024-10-25T19:16:09Z
53338,53409,Fix edge case where ActionMailer::MailHelper#block_format caused a NoMethodError,"### Motivation / Background  Fixes #53338 for the `7-2-stable` branch.  ### Detail  This Pull Request changes a single edge case of `ActionMailer::MailHelper#block_format`. When a bullet point is not followed by additional content for whatever reason  the method would raise an exception.  ### Additional information  This regression was introduced just last week with the fix of CVE-2024-47889.  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [ x Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,actionmailer/lib/action_mailer/mail_helper.rb; actionmailer/test/mail_helper_test.rb,makmic,2024-10-22T07:53:13Z,2024-10-23T08:08:39Z
53317,53359,Fix time zone-aware custom attributes not to hit the circuit breaker for infinite recursion,"When `time_zone_aware_attributes = true` and a type is included in `time_zone_aware_types`  that type is wrapped by `TimeZoneConverter`.  https://github.com/rails/rails/blob/e71a6d410e57589fc9e4b13c918eed427c936152/activerecord/lib/active_record/attribute_methods/time_zone_conversion.rb#L77-L90  302e9235 was to work `TimeZoneConverter` on `tsrange` and `tstzrange` types  but that commit mistakenly yield the subtype processing even for types other than array/range  causing an infinite recursion.  To address that infinite recursion  5bb26008 introduced the circuit breaker `map_avoiding_infinite_recursion`  hitting the circuit breaker unintentionally is why wrapped `custom_type.cast(timestamp.to_i)` for a time zone-aware custom type in #53317 returns nil when `time_zone_aware_attributes = true`.  This makes that yield the subtype processing only for array/range types  and removes the circuit breaker `map_avoiding_infinite_recursion`  so that `type.cast(...)` on a time zone-aware type returns a consistent value whether or not `time_zone_aware_attributes = true` is set.  Fixes #53317. ",closed,activemodel/lib/active_model/type/value.rb; activerecord/lib/active_record/attribute_methods/time_zone_conversion.rb; activerecord/lib/active_record/connection_adapters/postgresql/oid/array.rb; activerecord/test/cases/attribute_methods_test.rb; activerecord/test/schema/schema.rb,kamipo,2024-10-18T05:30:24Z,2024-10-19T00:21:59Z
53269,53270,[Fix #53269] `:only` and `:except` validation incorrectly handles string values,"Follow-up for https://github.com/rails/rails/pull/51464 Fixes https://github.com/rails/rails/issues/53269  Casts the `:only` and `:except` arguments to symbols before validating them.  cc/ @byroot because you merged the previous PR.  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.",closed,actionpack/lib/action_dispatch/routing/mapper.rb; actionpack/test/controller/resources_test.rb,joshuay03,2024-10-11T13:52:14Z,2024-10-11T23:11:02Z
53266,53292,Allow `warning: redefining 'object_id' may cause serious problems` in the `TransactionCallbacksTest`,"### Motivation / Background  This commit allows the `warning: redefining 'object_id' may cause serious problems` in the `TransactionCallbacksTest` that have been added via #38990 .  I prefer not to allow `warning: redefining 'object_id' may cause serious problems` warning everywhere because generally overriding object_id should not be done.  ### Detail  This commit addresses  the following errors.  ```ruby $ ruby -v ruby 3.4.0dev (2024-10-13T13:00:20Z master cf8388f76c) +PRISM [x86_64-linux] $ cd activerecord $ RAILS_STRICT_WARNINGS=1 ARCONN=sqlite3 bin/test test/cases/transaction_callbacks_test.rb -n /test_saving_two_records_that_override_object_id/ /home/yahonda/.rbenv/versions/trunk/lib/ruby/gems/3.4.0+0/gems/minitest-5.25.1/lib/minitest/mock.rb:33: warning: redefining 'object_id' may cause serious problems Using sqlite3 Run options: -n /test_saving_two_records_that_override_object_id/ --seed 5191  # Running:  /home/yahonda/src/github.com/rails/rails/activerecord/test/cases/transaction_callbacks_test.rb:524: warning: redefining 'object_id' may cause serious problems E  Error: TransactionCallbacksTest#test_saving_two_records_that_override_object_id_should_run_after_rollback_callbacks_for_both: ActiveSupport::RaiseWarnings::WarningError: /home/yahonda/src/github.com/rails/rails/activerecord/test/cases/transaction_callbacks_test.rb:524: warning: redefining 'object_id' may cause serious problems      /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/testing/strict_warnings.rb:38:in 'ActiveSupport::RaiseWarnings#warn'     test/cases/transaction_callbacks_test.rb:524:in 'Module#define_method'     test/cases/transaction_callbacks_test.rb:524:in 'block in TransactionCallbacksTest#test_saving_two_records_that_override_object_id_should_run_after_rollback_callbacks_for_both'     test/cases/transaction_callbacks_test.rb:523:in 'Class#initialize'     test/cases/transaction_callbacks_test.rb:523:in 'Class#new'     test/cases/transaction_callbacks_test.rb:523:in 'TransactionCallbacksTest#test_saving_two_records_that_override_object_id_should_run_after_rollback_callbacks_for_both'   bin/test test/cases/transaction_callbacks_test.rb:522  /home/yahonda/src/github.com/rails/rails/activerecord/test/cases/transaction_callbacks_test.rb:506: warning: redefining 'object_id' may cause serious problems E  Error: TransactionCallbacksTest#test_saving_two_records_that_override_object_id_should_run_after_commit_callbacks_for_both: ActiveSupport::RaiseWarnings::WarningError: /home/yahonda/src/github.com/rails/rails/activerecord/test/cases/transaction_callbacks_test.rb:506: warning: redefining 'object_id' may cause serious problems      /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/testing/strict_warnings.rb:38:in 'ActiveSupport::RaiseWarnings#warn'     test/cases/transaction_callbacks_test.rb:506:in 'Module#define_method'     test/cases/transaction_callbacks_test.rb:506:in 'block in TransactionCallbacksTest#test_saving_two_records_that_override_object_id_should_run_after_commit_callbacks_for_both'     test/cases/transaction_callbacks_test.rb:505:in 'Class#initialize'     test/cases/transaction_callbacks_test.rb:505:in 'Class#new'     test/cases/transaction_callbacks_test.rb:505:in 'TransactionCallbacksTest#test_saving_two_records_that_override_object_id_should_run_after_commit_callbacks_for_both'   bin/test test/cases/transaction_callbacks_test.rb:504    Finished in 0.028782s  69.4880 runs/s  0.0000 assertions/s. 2 runs  0 assertions  0 failures  2 errors  0 skips $ ```  ### Additional information  Refer to https://github.com/ruby/ruby/pull/11834  Fix #53266  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [ ] Tests are added or updated if you fix a bug or add a feature. * [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.   ",closed,activesupport/lib/active_support/testing/strict_warnings.rb,yahonda,2024-10-14T02:22:15Z,2024-10-15T00:34:23Z
53260,53264,Fix `pluck` with qualified name on loaded relation,"Since #53064 `arel_columns` is no longer a side-effect free helper method  so it runs on the spawned relation.  Fixes #53260. ",closed,activerecord/lib/active_record/relation/calculations.rb; activerecord/lib/active_record/relation/query_methods.rb; activerecord/test/cases/calculations_test.rb,kamipo,2024-10-10T15:58:26Z,2024-10-10T16:18:04Z
53216,53240,Fix `db:migrate:reset` task,"Fixes #53216  `db:migrate:reset` is broken  because we started to load the schema before migrating. This prevents migrations from running. This patch empties the schema before migrating  ensuring that migrations run as expected.  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,activerecord/lib/active_record/railties/databases.rake; railties/test/application/rake/dbs_test.rb,JoeDupuis,2024-10-09T01:36:39Z,2024-10-15T23:42:21Z
53205,54306,Fix routes being cleared when using `reload_routes!`:,"## Fix routes being cleared when using `reload_routes!`:  ### Motivation / Background  Pretty sure it fixes #54297 and #53205  but both issues didn't provide enough information. Though it fixes a legitimate issue on a public API method.  ### Detail  When using `Rails.application.reload_routes!` (which is public API)  in certain conditions  it is possible that this will clear almost all routes in the routeset.  The line of code making this happen is this one. https://github.com/rails/rails/blob/38e9a72db45842d1d2f05fb2272df3a10225f981/actionpack/lib/action_dispatch/routing/route_set.rb#L460  That flag is supposed to be `true` for the entire duration of evaluating multiple route files. This was the case before https://github.com/rails/rails/pull/53522  which introduced the issue. It indirectly resets that flag to false because of a recursion. This is a summary of the code order execution when calling `Rails.application.reload_routes`:  1) The RouteSet sets the `disable_clear_and_finalize` flag to false  so that no routes gets cleared in between multiple call to `Rails.application.routes.draw`. [here](https://github.com/rails/rails/blob/38e9a72db45842d1d2f05fb2272df3a10225f981/railties/lib/rails/application/routes_reloader.rb#L57) 2) All route files get evaluated  and any call to `Rails.application.routes.draw` gets picked up. 3) We enter a recursion because the RouteSet in development is a LazyRouteSet which when calling `draw` reloads the route. [here](https://github.com/rails/rails/blob/38e9a72db45842d1d2f05fb2272df3a10225f981/railties/lib/rails/engine/lazy_route_set.rb#L72) and [here](https://github.com/rails/rails/blob/38e9a72db45842d1d2f05fb2272df3a10225f981/railties/lib/rails/application.rb#L163) 4) All route files get evaluated again  the `disable_clear_and_finalize` is reset to false  we exit the recursion and continue where we were. 5) The `disable_clear_and_finalize` is now false  any call to `Rails.application.draw` now resets all routes before it gets evaluated. Which basically means the very last one would have effect.  ------------------------  I can only think of two way where `reload_routes` may cause a issue:  - Inside a Rake task - Inside a middleware  This is because the application needs to be initialized and the routeset never evaluated in order to trigger the bug. https://github.com/railsware/js-routes/pull/320 and https://github.com/amatsuda/traceroute/issues/49 confirms it.  ## Solution  When calling `reload_routes!`  if the routes were never loaded  load them and set the `loaded` flag. Otherwise  also load them but with the difference that with the `loaded` flag set  we won't reset all routes.  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,actionpack/CHANGELOG.md; railties/lib/rails/application.rb; railties/lib/rails/application/routes_reloader.rb; railties/test/application/rake_test.rb,Edouard-chin,2025-01-21T05:00:50Z,2025-01-27T20:15:44Z
53147,53154,ConnectionPool#unpin_connection! handle lazily pinned connections,"Fix: https://github.com/rails/rails/issues/53147  In `setup_transactional_fixtures` we register a callback to lazily pin a connections in pools that are created after the fixtures setup.  But when this callback is used  the connection owner might be a different thread than the one that will call `teardown_transactional_fixtures`.  To handle that  we must steal the connection when doing the final unpinning. ",closed,activerecord/CHANGELOG.md; activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb,byroot,2024-10-02T15:22:31Z,2024-10-02T15:34:31Z
53117,53116,fix for rubocop failing after initial generation,"<!-- Thanks for contributing to Rails!  Please do not make *Draft* pull requests  as they still send notifications to everyone watching the Rails repo.  Create a pull request when it is ready for review and feedback from the Rails team :).  If your pull request affects documentation or any non-code changes  guidelines for those changes are [available here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)  About this template  The following template aims to help contributors write a good description for their pull requests. We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added)  the motivation behind the changes  and complete the checklist below before opening a pull request.  Feel free to discard it if you need to (e.g. when you just fix a typo). -->  ### Motivation / Background  <!-- Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important? If you are fixing a specific issue  include ""Fixes #ISSUE"" (replace with the issue number  remove the quotes) and the issue will be linked to this PR. -->  This Pull Request has been created because after generating a clean new rails 8 app  rubocop fails (see https://github.com/rails/rails/issues/53117) ### Detail  This Pull Request changes a small typo in `user.rb`  ### Additional information  <!-- Provide additional information such as benchmarks  references to other repositories  or alternative solutions. -->  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,railties/lib/rails/generators/rails/authentication/templates/app/models/user.rb,baldarn,2024-09-30T13:51:53Z,2024-09-30T14:12:13Z
53081,53134,ActiveRecord::Result#each to yield regular Hash,"Followup: https://github.com/rails/rails/pull/51744 Fix: https://github.com/rails/rails/issues/53081 Closes: https://github.com/rails/rails/pull/53088  While the yielded type wasn't specified and we could always return the more efficient format  there's too many code out there that depend on this behavior.  Ultimately  queries done with `exec_query` are rare  as long as Active Record itself use the more efficient path to instantiate records  most of the gain is obtained. ",closed,activerecord/lib/active_record/connection_adapters/sqlite3_adapter.rb; activerecord/lib/active_record/querying.rb; activerecord/lib/active_record/result.rb,byroot,2024-10-01T14:20:44Z,2024-10-01T15:17:26Z
53063,53064,Fix `pluck` with using join alias,"Correctly adds references values when alias qualified column name is passed.  Fixes #53063. ",closed,activerecord/lib/active_record/relation/query_methods.rb; activerecord/test/cases/calculations_test.rb,kamipo,2024-09-27T08:59:42Z,2024-09-28T09:13:11Z
53008,53125,Fix `ActiveSupport::HashWithIndifferentAccess#stringify_keys` to stringify all keys not just symbols.,"Fix: https://github.com/rails/rails/issues/53008  ```ruby { 1 => 2 }.with_indifferent_access.stringify_keys[1] # => 2 ```  After this change:  ```ruby { 1 => 2 }.with_indifferent_access.stringify_keys[""1""] # => 2 ```  This change can be seen as a bug fix  but since it behaved like this for a very long time  we're deciding  to not backport the fix.",closed,activesupport/CHANGELOG.md; activesupport/lib/active_support/hash_with_indifferent_access.rb; activesupport/test/hash_with_indifferent_access_test.rb,byroot,2024-09-30T21:06:14Z,2024-09-30T21:48:13Z
52986,52988,Fix #52986," <!-- Thanks for contributing to Rails!  Please do not make *Draft* pull requests  as they still send notifications to everyone watching the Rails repo.  Create a pull request when it is ready for review and feedback from the Rails team :).  If your pull request affects documentation or any non-code changes  guidelines for those changes are [available here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)  About this template  The following template aims to help contributors write a good description for their pull requests. We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added)  the motivation behind the changes  and complete the checklist below before opening a pull request.  Feel free to discard it if you need to (e.g. when you just fix a typo). -->  ### Motivation / Background  <!-- Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important? If you are fixing a specific issue  include ""Fixes #ISSUE"" (replace with the issue number  remove the quotes) and the issue will be linked to this PR. -->  This Pull Request has been created because a freshly generated Rails project contains a linter violation despite of its custom Rails omakase Rubocop rules.  ### Detail This Pull Request edits the offending line to be compliant with the Rubocop style a new Rails project ships with.  ### Additional information While the commented-out rule in a new Rails project’s .rubocop.yml suggests that exactly this rule is subject to some controversy  it seems odd to have `rails new` generate a project that already contains violations.  I see four options:  - Un-comment the custom rule from the generated .rubocop.yml that would not make this fail - Exclude config/environments/production.rb from rubocop linting (of this rule) - Disable the rule for the line in /config/environments/production.rb - Use spaces to conform to the rule  Out of the four  this PR suggests to conform to the rules the project ships with by standard.  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,actionmailbox/test/test_helper.rb; actiontext/test/test_helper.rb; railties/lib/rails/generators/rails/app/templates/config/environments/production.rb.tt; railties/lib/rails/generators/rails/plugin/templates/test/test_helper.rb.tt; railties/test/generators/shared_generator_tests.rb,FrancescoK,2024-09-20T11:25:01Z,2024-09-20T18:49:37Z
52982,52996,Add reload! as a IRB::HelperMethod so it can be combined with other calls in a single statement. Fixes rails/rails#52982,"It is useful to iterate and test in the console by reloading and executing something in a single line command. Something like:  reload!; Post.find(123).test_a_thing  This makes it easy to quickly switch to the console  hit up and enter to re-execute after a code change.  This restores functionality that used to work until a few months ago.",closed,railties/lib/rails/commands/console/irb_console.rb,pbhogan,2024-09-20T19:39:42Z,2024-10-01T15:19:39Z
52973,53118,Make the query cache executor transactional fixtures aware,"Fix: https://github.com/rails/rails/issues/52973  Checking for `transaction_open?` only cause the Puma thread to not release the connection if we're still inside a fixture transaction.  We need to check `joinable?` too. ",closed,activerecord/CHANGELOG.md; activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb; activerecord/lib/active_record/query_cache.rb; activerecord/lib/active_record/railtie.rb; activerecord/test/cases/connection_management_test.rb,casperisfine,2024-09-30T15:18:38Z,2024-09-30T20:27:50Z
52902,53310,Skip Action View error mapping tests on 3.4+,"Ref: https://github.com/rails/rails/issues/52902  We'll fix them for real  but in the meantime we acknowledge the failure so CI can remain green. ",closed,actionpack/test/support/rack_parsing_override.rb; actionview/lib/action_view/template.rb; actionview/test/template/render_test.rb,casperisfine,2024-10-15T10:47:57Z,2024-10-15T11:20:14Z
52902,53312,[7.2] Skip Action View error mapping tests on 3.4+,"Ref: #52902  We'll fix them for real  but in the meantime we acknowledge the failure so CI can remain green. ",closed,actionview/test/template/render_test.rb,casperisfine,2024-10-15T11:29:28Z,2024-10-15T11:44:01Z
52902,53313,[7.1] Skip Action View error mapping tests on 3.4+,"Ref: #52902  We'll fix them for real  but in the meantime we acknowledge the failure so CI can remain green. ",closed,actionview/test/template/render_test.rb; activesupport/test/deprecation_test.rb; activesupport/test/test_case_test.rb,casperisfine,2024-10-15T11:53:39Z,2024-10-15T14:11:08Z
52900,52927,Do not create `scan_js` workflow for API-only apps #52900,"### Motivation / Background  This Pull Request has been created because it fixes #52900.  ### Detail  This Pull Request will now only generate the `scan_js` CI workflow for the full-stack rails app using importmaps as javascript bundling.   Previously the `scan_js` workflow was generated for the API-only apps resulting in the `bin/importmap: No such file or directory` error when pushing the code to the GitHub repo.   ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [ ] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,railties/lib/rails/generators/rails/app/templates/github/ci.yml.tt,JuzerShakir,2024-09-14T07:21:53Z,2024-09-16T22:11:16Z
52900,52883,Kamal 2 compatible configuration,Kamal 2 is bringing auto-SSL and multi-app deploys to the party. Along with other updates like simpler builders  aliases  and secrets. Update Rails 8 defaults to match.,closed,Gemfile; Gemfile.lock; railties/lib/rails/generators/app_base.rb; railties/lib/rails/generators/rails/app/templates/Gemfile.tt; railties/lib/rails/generators/rails/app/templates/config/deploy.yml.tt; railties/lib/rails/generators/rails/app/templates/config/environments/production.rb.tt; railties/lib/rails/generators/rails/app/templates/env.erb.tt; railties/lib/rails/generators/rails/app/templates/kamal-secrets.tt; railties/test/generators/app_generator_test.rb,dhh,2024-09-11T15:17:15Z,2024-09-19T21:04:36Z
52852,53029,[ci skip] Add documentation for `nulls_not_distinct` option,"### Motivation / Background Fixes #52852   This Pull Request has been created because API documentation was missing for the `nulls_not_distinct` option from the `ActiveRecord::ConnectionAdapters::SchemaStatements.add_index` method.   ### Detail  Documentation for `nulls_not_distinct` was added to the file `abstract/schema_statements.rb` following the style of existing documentation. According to the original PR #48608  where `nulls_not_distinct` was implemented  this option only works for PostgreSQL versions of 15.0.0 or greater  so this detail was included in the note of the documentation.  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,activerecord/lib/active_record/connection_adapters/abstract/schema_statements.rb,jgsheppa,2024-09-24T14:45:26Z,2024-09-24T17:39:53Z
52829,53320,Load schema when running db:migrate on fresh dbs,"### Motivation / Background  Loading database schemas before `db:migrate` for a single database was fixed in #52830. However  this approach fails when multiple databases are defined. This fix addresses the issue by moving schema loading to occur before initiating database migrations.  ### Detail  `db:migrate` has different logic when single or multiple databases are defined (https://github.com/rails/rails/blob/main/activerecord/lib/active_record/railties/databases.rake#L92-L102). When multiple DBs are defined  `migration` method is invoked only for the DBs with pending migrations. The fix moves DBs schema load for new DBs before DBs migrations are invoked.  ### Additional information  <!-- Provide additional information such as benchmarks  references to other repositories  or alternative solutions. -->  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,activerecord/lib/active_record/railties/databases.rake; activerecord/lib/active_record/tasks/database_tasks.rb; railties/test/application/rake/dbs_test.rb,mkasztelnik,2024-10-15T22:17:43Z,2024-10-28T17:53:45Z
52829,53474,Load schema when running db:migrate on fresh dbs,"Backports #53320 to 8-0-stable.  References #52830.  /cc @mkasztelnik ",closed,activerecord/CHANGELOG.md; activerecord/lib/active_record/railties/databases.rake; activerecord/lib/active_record/tasks/database_tasks.rb; railties/test/application/rake/dbs_test.rb,jeremy,2024-10-28T17:16:05Z,2024-10-28T17:46:34Z
52776,52777,Make sure we are using the correct connection pool when dumping the schema,"This was broken by https://github.com/rails/rails/commit/175bf8259a83853836657c0fbf300dfa3842e535.  Before we were switching the connection pool to use the one for the correspondent db config  but since we moved the `dump_schema` call to outside of the `with_temporary_pool` block  we were using the default connection pool.  Fixes https://github.com/rails/rails/issues/52776.",closed,activerecord/lib/active_record/tasks/database_tasks.rb; railties/test/application/rake/multi_dbs_test.rb,rafaelfranca,2024-09-02T19:30:36Z,2024-09-02T20:19:34Z
52742,53107,Make Float distinguish between `float4` and `float8` in PostgreSQL,"<!-- Thanks for contributing to Rails!  Please do not make *Draft* pull requests  as they still send notifications to everyone watching the Rails repo.  Create a pull request when it is ready for review and feedback from the Rails team :).  If your pull request affects documentation or any non-code changes  guidelines for those changes are [available here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)  About this template  The following template aims to help contributors write a good description for their pull requests. We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added)  the motivation behind the changes  and complete the checklist below before opening a pull request.  Feel free to discard it if you need to (e.g. when you just fix a typo). -->  ### Motivation / Background  Fixes #52742  <!-- Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important? If you are fixing a specific issue  include ""Fixes #ISSUE"" (replace with the issue number  remove the quotes) and the issue will be linked to this PR. -->  This Pull Request has been created because when dumping a PostgreSQL schema that includes a `float4` column (defined as `float(24)`)  the column is represented as `float` in the generated schema dump. However  when loading this schema  the `float4` column is converted to `float8`.  ### Detail  This Pull Request fixes https://github.com/rails/rails/issues/52742  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,activerecord/CHANGELOG.md; activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb; activerecord/test/cases/schema_dumper_test.rb; activerecord/test/schema/schema.rb,tnagatomi,2024-09-30T06:14:12Z,2024-09-30T07:28:44Z
52724,52725,Promote use of Rails.application.credentials and better bucket names in Active Storage Overview documentation.,"<!-- Thanks for contributing to Rails!  Please do not make *Draft* pull requests  as they still send notifications to everyone watching the Rails repo.  Create a pull request when it is ready for review and feedback from the Rails team :).  If your pull request affects documentation or any non-code changes  guidelines for those changes are [available here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)  About this template  The following template aims to help contributors write a good description for their pull requests. We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added)  the motivation behind the changes  and complete the checklist below before opening a pull request.  Feel free to discard it if you need to (e.g. when you just fix a typo). -->  ### Motivation / Background  <!-- Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important? If you are fixing a specific issue  include ""Fixes #ISSUE"" (replace with the issue number  remove the quotes) and the issue will be linked to this PR. -->  This Pull Request has been created because #52724   ### Detail  This Pull Request changes   - active_storage_overview.md  ### Additional information  <!-- Provide additional information such as benchmarks  references to other repositories  or alternative solutions. -->  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [ ] Tests are added or updated if you fix a bug or add a feature. * [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,guides/source/active_storage_overview.md,sharvy,2024-08-27T21:55:51Z,2024-08-28T20:46:16Z
52708,52718,Removed credentials from action mailer config documentation.,"<!-- Thanks for contributing to Rails!  Please do not make *Draft* pull requests  as they still send notifications to everyone watching the Rails repo.  Create a pull request when it is ready for review and feedback from the Rails team :).  If your pull request affects documentation or any non-code changes  guidelines for those changes are [available here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)  About this template  The following template aims to help contributors write a good description for their pull requests. We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added)  the motivation behind the changes  and complete the checklist below before opening a pull request.  Feel free to discard it if you need to (e.g. when you just fix a typo). -->  ### Motivation / Background  <!-- Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important? If you are fixing a specific issue  include ""Fixes #ISSUE"" (replace with the issue number  remove the quotes) and the issue will be linked to this PR. -->  This Pull Request has been created because #52708   ### Detail  This Pull Request changes following file: 1. `guides/source/action_mailer_basics.md`  ### Additional information  <!-- Provide additional information such as benchmarks  references to other repositories  or alternative solutions. -->  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [ ] Tests are added or updated if you fix a bug or add a feature. * [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,guides/source/action_mailer_basics.md,VikasTiwari14,2024-08-27T13:42:36Z,2024-08-27T14:21:06Z
52704,52705,Fix Devcontainer generator with --dev option path error,"### Motivation / Background Fixes #52704   This Pull Request has been created because the devcontainer generator with the --dev option fails (`rails g devcontainer --dev`).  The app generator --dev works just fine.  ### Detail  This Pull request moves the `Rails::Generators::RAILS_DEV_PATH` definition to Rails::Generators module rather than adding it to Rails::Generators in AppGenerator definition. It also creates a DEV_RAILS_PATH constant in `railties/test/generators/generators_test_helper.rb`  so that it can be used consistently in tests.  ### Additional information  - I added a generator test file  it seems the generator is not tested for the `rails generate` usage  though it is well tested via app generator. I added tests for the dev option behavior only. I can work on full specs  but will keep it separate from this.  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,railties/lib/rails/generators.rb; railties/lib/rails/generators/rails/app/app_generator.rb; railties/test/generators/devcontainer_generator_test.rb,thejonroberts,2024-08-25T06:24:07Z,2024-08-27T20:28:52Z
52698,52699,[#52698] Fix `TimeZoneConverter#==` method so objects will be properly compared by their type  scale  limit & precision.,"<!-- Thanks for contributing to Rails!  Please do not make *Draft* pull requests  as they still send notifications to everyone watching the Rails repo.  Create a pull request when it is ready for review and feedback from the Rails team :).  If your pull request affects documentation or any non-code changes  guidelines for those changes are [available here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)  About this template  The following template aims to help contributors write a good description for their pull requests. We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added)  the motivation behind the changes  and complete the checklist below before opening a pull request.  Feel free to discard it if you need to (e.g. when you just fix a typo). -->  ### Motivation / Background  <!-- Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important? If you are fixing a specific issue  include ""Fixes #ISSUE"" (replace with the issue number  remove the quotes) and the issue will be linked to this PR. -->  This Pull Request has been created because the comparison for `Timestamp` on `TimeZoneConverter` was misbehaving.   ### Detail  This Pull Request changes `TimeZoneConverter#==` so it can correctly check the comparison with `other` objects.  Fixes #52698   ### Additional information  <!-- Provide additional information such as benchmarks  references to other repositories  or alternative solutions. -->  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,activerecord/CHANGELOG.md; activerecord/lib/active_record/attribute_methods/time_zone_conversion.rb; activerecord/test/cases/attribute_methods/time_zone_converter_test.rb,ruyrocha,2024-08-24T01:26:40Z,2024-08-27T16:17:36Z
52675,53375,Deprecate setting `config.active_job.enqueue_after_transaction_commit`,"Also change the configuration to be a boolean instead of a symbol.  The value of this setting isn't delegated to the queue adapter anymore  since the behavior that this setting controls is too dangerous to leave this change of behavior as something that users don't control.  Fixes #52675.",closed,activejob/lib/active_job/enqueue_after_transaction_commit.rb; activejob/lib/active_job/enqueuing.rb; activejob/lib/active_job/queue_adapters/abstract_adapter.rb; activejob/lib/active_job/queue_adapters/delayed_job_adapter.rb; activejob/lib/active_job/queue_adapters/inline_adapter.rb; activejob/lib/active_job/queue_adapters/queue_classic_adapter.rb; activejob/lib/active_job/queue_adapters/test_adapter.rb; activejob/lib/active_job/railtie.rb; activejob/test/cases/enqueue_after_transaction_commit_test.rb; activejob/test/cases/queue_adapter_test.rb; activejob/test/jobs/enqueue_error_job.rb; guides/source/configuring.md; railties/lib/rails/application/configuration.rb; railties/test/application/configuration_test.rb,rafaelfranca,2024-10-19T00:44:11Z,2024-10-19T01:24:54Z
52617,52622,Store query caches in IsolatedExecutionState to avoid memory bloat,"Fix: https://github.com/rails/rails/issues/52617 Closes: https://github.com/rails/rails/pull/52618  It isn't per say a leak because the connection reaper eventually prune these  and also it's not expected that new Threads are constantly making entries into that cache. But it's true that with Fiber it's probably a bit more common  and the default reaper frequency isn't adapted to clear this fast enough.  So instead of waiting for the reaper to trigger  which may take a long time  we keep the caches in `IsolatedExecutionState` so that when the owning thread or fiber is garbage collected its cache is too.  However since we need to be able to clear all threads caches  we keep a cache version on the pool  and bump it to invalidate all caches of a pool at once. ",closed,activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb; activerecord/lib/active_record/connection_adapters/abstract/query_cache.rb; activerecord/test/cases/query_cache_test.rb,byroot,2024-08-16T10:38:23Z,2024-08-16T10:50:55Z
52617,52632,Refactor query cache and connection lease registry for performance,"Fix: https://github.com/rails/rails/issues/52617 Followup: https://github.com/rails/rails/pull/52622  Previous fixes solved the memory issues  but our fallback implementation of WeakKeyMap actually have terrible performance  and I can't find a way to do it in a performent way.  So instead we replace it by a specialized weak map that only accept Thread or Fiber as keys  and simple purge dead threads on insertion.  This gives us reasonable performance on Ruby 3.1 and 3.2. ",closed,activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb; activerecord/lib/active_record/connection_adapters/abstract/query_cache.rb,byroot,2024-08-16T18:32:32Z,2024-08-16T19:13:00Z
52615,52616,rails console: Handle non standard application names,"Fix: https://github.com/rails/rails/issues/52615 Ref: https://github.com/rails/rails/pull/50796  The code assumed the application follow the standard `Name::Application` naming  but it's possible to rename it however you like. ",closed,railties/lib/rails/application.rb; railties/lib/rails/commands/console/irb_console.rb,byroot,2024-08-15T14:40:39Z,2024-08-15T14:49:16Z
52607,52703,Resolve model attribute types on schema load,"This PR contains two commits.  The 1st commit resolves model attribute types on schema load  fixing #52607  as explained below.  The 2nd commit re-applies #49769 which was previously reverted due to #52607.  When running tests in parallel  a new database is created for each test worker ([via `ActiveRecord::TestDatabases.create_and_load_schema`](https://github.com/rails/rails/blob/ec667e5f114df58087493096253541f1034815af/activerecord/lib/active_record/test_databases.rb)).  Each of these databases use different OID numbers for custom defined types such as enums.  If model schemas are loaded before forking — as done [in `railties/lib/rails/testing/maintain_test_schema.rb`](https://github.com/rails/rails/blob/ec667e5f114df58087493096253541f1034815af/railties/lib/rails/testing/maintain_test_schema.rb#L11-L15) when `eager_load` is true — Rails will hold on to the OID numbers from the original database.  Thus each test worker does not recognize the OID numbers when resolving model attribute types.  This commit sidesteps the problem by resolving model attribute types on schema load.  This does not address the conflicting OID numbers  but each test worker will inherit properly resolved attribute types.  Fixes #52607. Fixes #49717.  /cc @rafaelfranca since you were handling #52607.",closed,activerecord/lib/active_record/enum.rb; activerecord/lib/active_record/model_schema.rb; activerecord/test/cases/enum_test.rb; railties/test/application/test_test.rb,jonathanhefner,2024-08-24T19:19:53Z,2024-08-26T17:07:21Z
52601,52613,Fix ActiveRecord::Base.inspect to correctly indicate how to load schema,"Fix: https://github.com/rails/rails/issues/52601  Now that Active Record connections are fully lazy  just calling `.lease_connection` isn't actually enough to estalish a connection.  We might as well suggest to use a method with the actual intent.  Need to backport to 7.2.",closed,activerecord/lib/active_record/core.rb; activerecord/lib/active_record/encryption/encryptable_record.rb; activerecord/lib/active_record/model_schema.rb; activerecord/test/cases/invalid_connection_test.rb,byroot,2024-08-15T07:56:24Z,2024-08-15T08:27:58Z
52588,52589,Use sqlite3 package in default Dockerfile for apps using sqlite3,"Fixes #52588.  ### Motivation / Background  This Pull Request has been created because `bin/rails dbconsole` does not work inside a Docker container for sqlite3 apps.  ### Detail  This Pull Request changes the `Rails::Generators::Database::SQLite3#base_package` method (ultimately called by the `Dockerfile.tt` template) to use the `sqlite3` package instead of `libsqlite3-0`. `sqlite3` [depends on](https://packages.debian.org/bookworm/sqlite3) `libsqlite3-0`  so everything still works.  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,railties/lib/rails/generators/database.rb; railties/test/fixtures/Dockerfile.test; railties/test/generators/db_system_change_generator_test.rb,jeromedalbert,2024-08-13T01:35:06Z,2024-08-13T08:28:23Z
52570,52571,Remove PWA views and routes if its an API only project,"<!-- Thanks for contributing to Rails!  Please do not make *Draft* pull requests  as they still send notifications to everyone watching the Rails repo.  Create a pull request when it is ready for review and feedback from the Rails team :).  If your pull request affects documentation or any non-code changes  guidelines for those changes are [available here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)  About this template  The following template aims to help contributors write a good description for their pull requests. We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added)  the motivation behind the changes  and complete the checklist below before opening a pull request.  Feel free to discard it if you need to (e.g. when you just fix a typo). -->  ### Motivation / Background  <!-- Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important? If you are fixing a specific issue  include ""Fixes #ISSUE"" (replace with the issue number  remove the quotes) and the issue will be linked to this PR. -->  This Pull Request has been created because rails created PWA files for API only project which not very useful for API only project  fixes #52570.  ### Detail  This Pull Request changes remove PWA files and only generated routes for non API only project.   I didn't find any tests related to this change. If you could tell me where I need to change the test or add a new test  happy to fix the test.  ### Additional information  <!-- Provide additional information such as benchmarks  references to other repositories  or alternative solutions. -->  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [ ] Tests are added or updated if you fix a bug or add a feature. * [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,railties/lib/rails/generators/rails/app/app_generator.rb; railties/lib/rails/generators/rails/app/templates/config/routes.rb.tt; railties/test/generators/generators_test_helper.rb,chunlea,2024-08-11T23:41:12Z,2024-08-12T07:21:28Z
52568,52593,Docs cache quick fix [fix #52568],"### Motivation / Background  This fixes a caching issue exhibited by numerous users and reported in issues #52568 and #52575  ### Detail  This PR simply manually iterates the three CSS files and the generator to add `-v2` on each name. I am working on a MD5 digest solution in https://github.com/jathayde/rails/tree/guides-cache-key but need to get that fully buttoned up.   ### Additional information  This is a quick fix as suggested by the team internally   ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,guides/rails_guides/generator.rb; guides/source/layout.html.erb,jathayde,2024-08-13T13:05:09Z,2024-08-13T14:04:16Z
52430,52432,Rename check_box in checkbox,"But add aliases for backward compatibility.  Fix: https://github.com/rails/rails/issues/52430 ",closed,actionview/CHANGELOG.md; actionview/lib/action_view/helpers/form_helper.rb; actionview/lib/action_view/helpers/form_options_helper.rb; actionview/lib/action_view/helpers/form_tag_helper.rb; actionview/lib/action_view/helpers/tags/collection_check_boxes.rb; actionview/test/template/active_model_helper_test.rb; actionview/test/template/form_collections_helper_test.rb; actionview/test/template/form_helper/form_with_test.rb; actionview/test/template/form_helper_test.rb; actionview/test/template/form_tag_helper_test.rb; guides/source/2_3_release_notes.md; guides/source/7_1_release_notes.md; guides/source/active_support_core_extensions.md; guides/source/configuring.md; guides/source/form_helpers.md; railties/lib/rails/generators/generated_attribute.rb; railties/test/generators/generated_attribute_test.rb,byroot,2024-07-28T11:24:32Z,2024-07-28T11:40:25Z
52430,52467,Rename `text_area` to `textarea` and `rich_text_area` to `rich_textarea`," ### Motivation / Background  Follow-up to [#52432][] Related to [#52430][]  Helpers like `text_area_tag` construct [textarea][] elements. This commit renames all view helper and form builder methods to replace occurrences of `text_area` with `textarea`.  ### Detail  In the same style  this commit also renames the `rich_text`-prefixed helpers to utilize a `textarea` suffix instead of the existing `text_area` suffix.  To preserve backwards compatibility  this commit defines aliases for the existing `text_area` format.  [#52432]: https://github.com/rails/rails/pull/52432 [#52430]: https://github.com/rails/rails/issues/52430 [textarea]: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,actionmailbox/app/views/rails/conductor/action_mailbox/inbound_emails/new.html.erb; actionmailbox/app/views/rails/conductor/action_mailbox/inbound_emails/sources/new.html.erb; actiontext/CHANGELOG.md; actiontext/app/helpers/action_text/tag_helper.rb; actiontext/lib/action_text/system_test_helper.rb; actiontext/test/dummy/app/views/messages/_form.html.erb; actiontext/test/system/system_test_helper_test.rb; actiontext/test/template/form_helper_test.rb; actionview/CHANGELOG.md; actionview/lib/action_view/helpers/form_helper.rb; actionview/lib/action_view/helpers/form_tag_helper.rb; actionview/test/template/active_model_helper_test.rb; actionview/test/template/form_helper/form_with_test.rb; actionview/test/template/form_helper_test.rb; actionview/test/template/form_tag_helper_test.rb; activestorage/README.md; guides/source/action_text_overview.md; guides/source/active_support_core_extensions.md; guides/source/engines.md; guides/source/form_helpers.md; guides/source/getting_started.md; railties/CHANGELOG.md; railties/lib/rails/generators/generated_attribute.rb; railties/test/generators/generated_attribute_test.rb; railties/test/generators/scaffold_generator_test.rb; tasks/release.rb,seanpdoyle,2024-07-31T15:57:01Z,2024-07-31T17:16:23Z
52429,52437,Fix `delegate_missing_to allow_nil: true` when called with implict self,"Fix: https://github.com/rails/rails/issues/52429  The previous implementation assumed `NoMethodError` would be raised when calling `super`  but that's not always true.  If the receiver is an implicit self  the raised error will be `NameError`.  It's better not to rely on exceptions for this anyways. ",closed,activesupport/CHANGELOG.md; activesupport/lib/active_support/delegation.rb; activesupport/test/core_ext/module_test.rb,casperisfine,2024-07-29T07:56:17Z,2024-07-29T08:16:11Z
52429,52438,Fix `delegate_missing_to allow_nil: true` when called with implict self,"Fix: https://github.com/rails/rails/issues/52429  The previous implementation assumed `NoMethodError` would be raised when calling `super`  but that's not always true.  If the receiver is an implicit self  the raised error will be `NameError`.  It's better not to rely on exceptions for this anyways. ",closed,activesupport/lib/active_support/delegation.rb; activesupport/test/core_ext/module_test.rb,casperisfine,2024-07-29T07:58:14Z,2024-07-29T08:16:36Z
52429,52439,Fix `delegate_missing_to allow_nil: true` when called with implict self,"Fix: #52429  The previous implementation assumed `NoMethodError` would be raised when calling `super`  but that's not always true.  If the receiver is an implicit self  the raised error will be `NameError`.  It's better not to rely on exceptions for this anyways. ",closed,activesupport/CHANGELOG.md; activesupport/lib/active_support/core_ext/module/delegation.rb; activesupport/test/core_ext/module_test.rb,casperisfine,2024-07-29T08:04:43Z,2024-07-29T08:16:55Z
52400,52404,Fix specs for `QueryLogsTest#test_sql_commenter_format`.,"Fixes #52400  <!-- Thanks for contributing to Rails!  Please do not make *Draft* pull requests  as they still send notifications to everyone watching the Rails repo.  Create a pull request when it is ready for review and feedback from the Rails team :).  If your pull request affects documentation or any non-code changes  guidelines for those changes are [available here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)  About this template  The following template aims to help contributors write a good description for their pull requests. We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added)  the motivation behind the changes  and complete the checklist below before opening a pull request.  Feel free to discard it if you need to (e.g. when you just fix a typo). -->  ### Motivation / Background  <!-- Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important? If you are fixing a specific issue  include ""Fixes #ISSUE"" (replace with the issue number  remove the quotes) and the issue will be linked to this PR. -->  This Pull Request has been created because of failing isolated test for `QueryLogsTest#test_sql_commenter_format` on main branch.  ### Detail  This Pull Request changes [REPLACE ME]  ### Additional information  <!-- Provide additional information such as benchmarks  references to other repositories  or alternative solutions. -->  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,activerecord/test/cases/query_logs_test.rb,ruyrocha,2024-07-23T05:59:00Z,2024-07-24T04:10:26Z
52332,52333,[Fix #52332] Handle record changed case in `#save_has_one_association`'s inverse `belongs_to` association updated check,"<!-- Thanks for contributing to Rails!  Please do not make *Draft* pull requests  as they still send notifications to everyone watching the Rails repo.  Create a pull request when it is ready for review and feedback from the Rails team :).  If your pull request affects documentation or any non-code changes  guidelines for those changes are [available here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)  About this template  The following template aims to help contributors write a good description for their pull requests. We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added)  the motivation behind the changes  and complete the checklist below before opening a pull request.  Feel free to discard it if you need to (e.g. when you just fix a typo). -->  ### Motivation / Background  <!-- Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important? If you are fixing a specific issue  include ""Fixes #ISSUE"" (replace with the issue number  remove the quotes) and the issue will be linked to this PR. -->  Fixes https://github.com/rails/rails/issues/52332 Refs: - https://github.com/rails/rails/pull/49847 - https://github.com/rails/rails/pull/52305  ### Detail  Ensures that the guard clause added in https://github.com/rails/rails/pull/49847 for preventing a duplicate autosave accounts for when the record has actually changed.  ### Additional information  <!-- Provide additional information such as benchmarks  references to other repositories  or alternative solutions. -->  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,activerecord/lib/active_record/autosave_association.rb; activerecord/test/cases/autosave_association_test.rb,joshuay03,2024-07-15T03:22:35Z,2024-07-15T07:39:34Z
52312,52313,Update PostgreSQLAdapter#extensions to include schema name,"This allows the schema dumper's generated `enable_extension` statements to include the schema name  if different from `current_schema`.  ### Motivation / Background  Fixes #52312.  When extensions are created within a specific schema  the `enable_extension` statement generated by the schema dumper should include the schema name.  ### Detail  See #52312  ### Additional information  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,activerecord/CHANGELOG.md; activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb; activerecord/test/cases/adapters/postgresql/postgresql_adapter_test.rb,afn,2024-07-11T19:35:17Z,2024-08-15T00:29:36Z
52304,52305,[Fix #52304] Avoid computing `klass` if reflection is a `belongs_to` in `ActiveRecord::AutosaveAssociation#inverse_belongs_to_association_for`,"<!-- Thanks for contributing to Rails!  Please do not make *Draft* pull requests  as they still send notifications to everyone watching the Rails repo.  Create a pull request when it is ready for review and feedback from the Rails team :).  If your pull request affects documentation or any non-code changes  guidelines for those changes are [available here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)  About this template  The following template aims to help contributors write a good description for their pull requests. We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added)  the motivation behind the changes  and complete the checklist below before opening a pull request.  Feel free to discard it if you need to (e.g. when you just fix a typo). -->  ### Motivation / Background  <!-- Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important? If you are fixing a specific issue  include ""Fixes #ISSUE"" (replace with the issue number  remove the quotes) and the issue will be linked to this PR. -->  Fixes https://github.com/rails/rails/issues/52304 Ref: https://github.com/rails/rails/pull/49847  ### Detail  Adds a condition in `ActiveRecord::AutosaveAssociation#inverse_belongs_to_association_for` to return early if the current reflection is a `belongs_to`  as the inverse can't possibly be a `belongs_to` as well. This then ensures that polymorphic `belongs_to` reflections don't have their class computed which raises an error like the one in the linked issue (see https://github.com/rails/rails/pull/31895 for why this happens).  An alternative fix  specifically for the linked issue is to simply return if `reflection.polymorphic?`  but imo what I've currently got is better since it handles non-polymorphic cases as well  and will short circuit in all cases where the inverse logic is not applicable.  **Edit:** Some more context in https://github.com/rails/rails/pull/52305#issuecomment-2222227506  ### Additional information  <!-- Provide additional information such as benchmarks  references to other repositories  or alternative solutions. -->  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.",closed,activerecord/lib/active_record/autosave_association.rb; activerecord/test/cases/autosave_association_test.rb; activerecord/test/models/chef.rb; activerecord/test/models/drink_designer.rb,joshuay03,2024-07-11T05:59:51Z,2024-07-11T08:49:36Z
52233,52281,ActionText::Content - Strip `content` attribute if it is empty,"### Motivation / Background  Images and other attachments added to a rich text area aren't being displayed in the editor when you go back to edit the record again.  Fixes: https://github.com/rails/rails/issues/52233  ### Detail  This Pull Request makes it so that if the `action-text-attachment` element contains an empty `content` attribute  that attribute will be stripped out during the rendering of attachments.  ### Additional information  None  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,actiontext/CHANGELOG.md; actiontext/lib/action_text/content.rb; actiontext/test/unit/content_test.rb,jagthedrummer,2024-07-05T18:45:13Z,2024-08-21T18:26:53Z
52227,54133,fix: `ArgumentError`s raised during template rendering,"### Motivation / Background  Issue #52227 pointed out that any argument error in a template with strict locals would be swallowed and replaced by an exception with unrelated backtrace  which made debugging templates difficult.  Fixes #52227   ### Detail  Argument errors related to strict locals in templates now raise an `ActionView::StrictLocalsError`  and all other `ArgumentError` exceptions are reraised as-is.  Previously  any `ArgumentError` raised during template rendering was swallowed during strict local error handling  so that an `ArgumentError` unrelated to strict locals (e.g.  a helper method invoked with incorrect arguments) would be replaced by a similar `ArgumentError` with an unrelated backtrace  making it difficult to debug templates.  Now  any `ArgumentError` unrelated to strict locals is reraised  preserving the original backtrace for developers.  Also note that `ActionView::StrictLocalsError` is a subclass of `ArgumentError`  so any existing code that rescues `ArgumentError` will continue to work.   ### Additional information  It's not necessary to introduce a new exception type to solve this problem  but doing so encapsulates the ""strict locals"" error message construction nicely  making `ActionView::Base#_run` a bit more readable.   ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,actionview/CHANGELOG.md; actionview/lib/action_view/base.rb; actionview/lib/action_view/template/error.rb; actionview/test/template/template_test.rb,flavorjones,2025-01-06T19:41:38Z,2025-01-06T20:25:13Z
52144,52145,Fix `alias_attribute` to ignore methods defined in parent classes,"Fix: https://github.com/rails/rails/issues/52144  When defining regular attributes  inherited methods aren't overriden  however when defining aliased attributes  inherited methods aren't considered.  This behavior could be debatted  but that was the behavior prior to https://github.com/rails/rails/pull/52118  so I'm restoring it.  FYI: @chaadow ",closed,activemodel/lib/active_model/attribute_methods.rb; activerecord/lib/active_record/attribute_methods.rb; activerecord/test/cases/attribute_methods_test.rb,casperisfine,2024-06-18T07:47:04Z,2024-06-18T08:04:11Z
52111,52117,Fix a performance regression in attribute methods,"Fix: https://github.com/rails/rails/issues/52111 Fix: https://github.com/rails/rails/commit/5dbc7b424ef2a5d562f04ebc560ddcfe573fcdb6  The above commit caused the size of the `CodeGenerator` method cache to explode  because the dynamic namespace is way too granular.  But there is actually a much better fix for that  since `alias_attribute` is now generating exactly the same code as the attribute it's aliasing  we can generated it as the canonical method in the cache  and then just define it in the model as the aliased name.  This prevent the cache from growing a lot  and even reduce memory usage further as the original attribute and its alias now share the same method cache.  Using @SamSaffron 's script:  `7-1-stable`:  ``` 359 121680 bytes ```  This PR:  ``` 20 16344 bytes ```   ```ruby # Gemfile require ""bundler/inline"" require ""bundler""  rails_version = ENV.fetch(""RAILS""  ""7.0"") gemfile do   source ""https://rubygems.org""   gem ""rails""  path: ""/Users/byroot/src/github.com/Shopify/rails/""   gem ""sqlite3""  ""~> 1.4"" end  require ""active_record"" require ""sqlite3""  # Establish the connection to an in-memory SQLite3 database ActiveRecord::Base.establish_connection(   adapter: ""sqlite3""    database: "":memory:"" )  # Define a migration class CreateUsersTable < ActiveRecord::Migration[6.1]   def change     create_table :users do |t|       t.string :name       t.string :email       t.string :username       t.string :password_digest       t.date :date_of_birth       t.string :address       t.string :city       t.string :state       t.string :zip_code       t.string :country       t.string :phone_number       t.string :occupation       t.string :company       t.text :bio       t.boolean :newsletter_subscribed  default: false        t.timestamps     end   end end  # Execute the migration CreateUsersTable.new.change  # Define the User model class User < ActiveRecord::Base end  # Insert some records User.create(   name: ""John Doe""    email: ""john.doe@example.com""    username: ""johndoe""    password_digest: ""password1""    date_of_birth: ""1980-01-01""    address: ""123 Main St""    city: ""Anytown""    state: ""CA""    zip_code: ""12345""    country: ""USA""    phone_number: ""555-1234""    occupation: ""Software Developer""    company: ""Tech Corp""    bio: ""A developer with a passion for coding.""    newsletter_subscribed: true ) User.create(   name: ""Jane Smith""    email: ""jane.smith@example.com""    username: ""janesmith""    password_digest: ""password2""    date_of_birth: ""1990-02-02""    address: ""456 Elm St""    city: ""Othertown""    state: ""NY""    zip_code: ""67890""    country: ""USA""    phone_number: ""555-5678""    occupation: ""Product Manager""    company: ""Prod Co""    bio: ""Experienced Product Manager.""    newsletter_subscribed: false )  # Lookup the first user first_user = User.first puts ""First user: #{first_user.name}  #{first_user.email}  #{first_user.username}""  require 'objspace' def deep_memsize(obj)   size = ObjectSpace.memsize_of(obj)    case obj   when Hash     obj.each do |k  v|       size += deep_memsize(k)       size += deep_memsize(v)     end   when Array     obj.each do |i|       size += deep_memsize(i)     end   end   size end  puts ActiveSupport::CodeGenerator::MethodSet::METHOD_CACHES.size puts ""#{deep_memsize(ActiveSupport::CodeGenerator::MethodSet::METHOD_CACHES)} bytes"" ``` ",closed,activemodel/lib/active_model/attribute_methods.rb; activemodel/lib/active_model/attributes.rb; activerecord/CHANGELOG.md; activerecord/lib/active_record/attribute_methods.rb; activerecord/lib/active_record/attribute_methods/read.rb; activerecord/lib/active_record/attribute_methods/write.rb; activerecord/test/cases/attribute_methods_test.rb; activesupport/lib/active_support/code_generator.rb,casperisfine,2024-06-13T13:46:59Z,2024-06-13T14:37:00Z
52111,52118,Fix a performance regression in attribute methods,"Fix: #52111 Fix: 5dbc7b4 Edge version of: https://github.com/rails/rails/pull/52117  The above commit caused the size of the `CodeGenerator` method cache to explode  because the dynamic namespace is way too granular.  But there is actually a much better fix for that  since `alias_attribute` is now generating exactly the same code as the attribute it's aliasing  we can generated it as the canonical method in the cache  and then just define it in the model as the aliased name.  This prevent the cache from growing a lot  and even reduce memory usage further as the original attribute and its alias now share the same method cache.  ",closed,activemodel/lib/active_model/attribute_methods.rb; activemodel/lib/active_model/attributes.rb; activerecord/lib/active_record/attribute_methods.rb; activerecord/lib/active_record/attribute_methods/read.rb; activerecord/lib/active_record/attribute_methods/write.rb; activerecord/test/cases/attribute_methods_test.rb; activesupport/lib/active_support/code_generator.rb,casperisfine,2024-06-13T15:51:32Z,2024-06-13T15:59:50Z
52098,52100,Fix ActiveRecord configs variable shadowing,"### Motivation / Background  Fixes #52098   This Pull Request has been created because I encountered surprising behavior when upgrading a Rails 7 application to Rails 7.1.  In `config/initializers/new_frame_defaults_7_1.rb`  I had  ```ruby Rails.application.config.active_record.run_after_transaction_callbacks_in_order_defined = true ```  but I was surprised to find that when the application booted  ```ruby ActiveRecord.run_after_transaction_callbacks_in_order_defined => false ```  ### Detail  This Pull Request changes the name of a local variable in the ActiveRecord Railtie's `active_record.set_configs` initializer.  The name change avoids shadowing the `configs` and resetting the local variable that is initialized at the beginning of the initializer.  This way the `after_initialize` hook can run through _all_ of the config values set in `Rails.application.config.active_record` and configure `ActiveRecord` accordingly.  ### Additional information  I am not certain whether the variable shadowing and resetting was indeed intentional.  It may have been and this solution may introduce other problems 😬 .  I think this problem only occurs when ActiveRecord happens to be loaded before the `new_framework_defaults` initializer runs.  I would guess that many gems might load ActiveRecord and gem Railties run before files in `config/initializers`.  That is to say that I would guess that loading ActiveRecord in a gem could be fairly commonplace.  Solving such problems may not fall under the domain of Rails  but I figured I would give this PR a try 😃 .  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,activerecord/lib/active_record/railtie.rb; railties/test/application/configuration_test.rb,jdlubrano,2024-06-12T03:32:16Z,2024-06-12T19:44:35Z
52089,52099,Do not use SyntaxError#path,"Fixes #52089  From what I understand  `path` is only set in the context of `eval`. When explicitly raising `SyntaxError`  `path` is `nil`.  Regardless of how `SyntaxError` is raised  the ""path"" always exists in `SyntaxError#to_s`. Therefore  we should just use `#to_s`.  Here is an example of the difference between `path` (when it's present) and `to_s` (the first line is `path`):  ``` ""(eval at /Users/jko/Developer/rails/rails/actionpack/test/dispatch/debug_exceptions_test.rb:106)"" ""(eval at /Users/jko/Developer/rails/rails/actionpack/test/dispatch/debug_exceptions_test.rb:106):1: syntax error  unexpected end-of-input\nbroke_syntax =\n              ^\n"" ```  I see no reason to use [the convenience method](https://bugs.ruby-lang.org/issues/19138) `path` and it was [chosen because it's simpler](https://github.com/rails/rails/pull/48957#discussion_r1305358915).   Perhaps `path` not being populated outside `eval` is a Ruby bug?  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,activesupport/lib/active_support/syntax_error_proxy.rb,justinko,2024-06-12T02:41:59Z,2024-06-12T19:03:19Z
52046,52055,[7.1] Better handle errors in `#check_version`,"Fix: https://github.com/rails/rails/issues/52046  If `#check_version` raises  the connection would be leaked until the GC collects the object. ",closed,activerecord/CHANGELOG.md; activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb; activerecord/test/cases/connection_pool_test.rb,byroot,2024-06-08T08:56:17Z,2024-06-08T09:32:57Z
52038,52039,Pin `sprockets-rails` version to 3.4.2 or lower,"### Motivation / Background  This commit pins `sprockets-rails` version to 3.4.2 until https://github.com/rails/sprockets-rails/issues/524 is fixed to workaround CI failure reported at https://github.com/rails/rails/issues/52038  ### Detail None  ### Additional information None  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [ ] Tests are added or updated if you fix a bug or add a feature. * [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,Gemfile; Gemfile.lock,yahonda,2024-06-07T00:40:01Z,2024-06-07T01:02:29Z
52000,52054,Document TestFixtures#fixture,"Fixes #52000   ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,activerecord/lib/active_record/test_fixtures.rb; activerecord/test/cases/fixtures_test.rb,justinko,2024-06-08T02:38:32Z,2024-06-12T20:59:19Z
51961,51983,[7-1-stable] Lower case the `link` header,"Backports 26a572dca11ba08b6bb97d238e6782f179701318 to `7-1-stable` by hand because it didn't apply cleanly due to rdoc->markdown change  ---  Since https://github.com/rack/rack/commit/1fbcf54289b9fae2765c1167376e837fe38b543c the early hints will be checked against Rack::Link that requires all headers to be lower cased.  Fixes #51961.",closed,actionpack/lib/action_dispatch/http/request.rb; actionpack/test/dispatch/request_test.rb; actionview/lib/action_view/helpers/asset_tag_helper.rb; actionview/test/template/asset_tag_helper_test.rb; guides/source/6_1_release_notes.md; guides/source/configuring.md; railties/test/application/configuration_test.rb,zzak,2024-06-01T04:19:57Z,2024-06-01T08:25:11Z
51956,51959,Relax the prism test parser conditions,"### Motivation / Background  Closes #51956  ### Detail  Checking explicitly against `test` break extensions that provide their own methods to generate tests  like `minitest-spec-rails` or `minitest-rails`. The ripper parser had no such checks  so I just dropped those.  cc @kddnewton  ### Additional information  Needs backporting to 7.2. Maybe changelog?  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,railties/lib/rails/test_unit/test_parser.rb; railties/test/test_unit/test_parser_test.rb,Earlopain,2024-05-30T19:53:00Z,2024-05-30T21:57:56Z
51938,51948,Restore inferred association class with the same modularized name,"Fixes #51938  ### Motivation / Background  https://github.com/rails/rails/pull/51721 was a nice change  but it removed some existing behavior.   ### Detail  This change restores the ability for the inferred association class to be the same modularized name.  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,activerecord/lib/active_record/reflection.rb; activerecord/test/cases/reflection_test.rb; activerecord/test/models/user.rb,justinko,2024-05-30T09:55:02Z,2024-07-08T15:53:03Z
51914,51930,Improve ActionCable's TestCookieJar interface,"Fixes #51914  ### Motivation / Background  This change brings `ActionCable::Connection::TestCookieJar` in alignment with `ActionDispatch::Cookies::CookieJar` in regards to setting the cookie value.  Before:  ```ruby cookies[:foo] = { value: ""bar"" } puts cookies[:foo] # => { value: ""bar"" } ```  After:  ```ruby cookies[:foo] = { value: ""bar"" } puts cookies[:foo] # => ""bar"" ```  ### Additional information  Technically this is a breaking change but I don't know why the user would depend on an incorrect interface.  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,actioncable/lib/action_cable/connection/test_case.rb; actioncable/test/connection/test_case_test.rb,justinko,2024-05-28T05:58:15Z,2024-05-28T20:24:14Z
51908,51927,Clarify documentation of authenticate_or_request_with_http_token [fix #51908] [ci skip],"### Motivation / Background  Documentation of authenticate_or_request_with_http_token is incorrect and this may also have security implications.  **Based on the current documentation  if you return false (which is non-nil)  login procedure will be considered successful.**  **But that is not what happens!**  If you return false  the login procedure is considered UNSUCCESSFUL.  This pull request fixes the documentation.  ### Detail  This pull request clarifies what happens if you return `false` in the login procedure.  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,actionpack/lib/action_controller/metal/http_authentication.rb,collimarco,2024-05-27T12:32:16Z,2024-08-27T17:26:45Z
51882,51931,Allow ActiveStorage::Attachment creation with no record attachments,"FIxes #51882  Allow the creation of `ActiveStorage::Attachment` records without the `record` having any attachment associations.   This is such an unlikely scenario that I don't think a test case is warranted.   ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,activestorage/app/models/active_storage/attachment.rb; activestorage/test/models/attachment_test.rb,justinko,2024-05-28T07:26:27Z,2024-05-29T22:27:09Z
51811,51815,Eliminate `lease_connection` call in `cached_find_by`,"Followup: https://github.com/rails/rails/pull/51725 Fix: https://github.com/rails/rails/issues/51811 ",closed,activerecord/lib/active_record/core.rb,byroot,2024-05-14T06:13:09Z,2024-05-14T06:20:07Z
51807,51810,Only serialize associations that were loaded,"Fix: https://github.com/rails/rails/issues/51807  `association_cached?` only means the Association object was created  not that the records were loaded. ",closed,activerecord/lib/active_record/marshalling.rb; activerecord/lib/active_record/message_pack.rb; activerecord/test/cases/marshal_serialization_test.rb,casperisfine,2024-05-13T23:55:48Z,2024-05-14T00:37:39Z
51775,51776,Fix `.with_connection` to not set current scope,"Fix: https://github.com/rails/rails/issues/51775  This us us being bitten by https://github.com/rails/rails/pull/50396 once more. We should really make this delegation much stricter.  cc @ghiculescu   @ghiculescu sorry for not adding a test but I got some travel coming up  feel free to add one in a PR and I'll merge it.  Also I really need to finish https://github.com/rails/rails/pull/50396",closed,activerecord/lib/active_record/relation/delegation.rb,casperisfine,2024-05-10T08:04:07Z,2024-05-10T08:20:13Z
51775,51800,Refactor `ActiveRecord::SignedId` to not rely on relation delegation,"Ref: https://github.com/rails/rails/pull/50396 Ref: https://github.com/rails/rails/pull/51776  `ActiveRecord::Relation` automatically delegates missing methods to the model class wrapped in a `scoping { }` block.  This is to support scoping in user defined class methods. The problem however is that it's very error prone for the framework  because we can mistakenly call model methods from inside `Relation` and not realized we're applying a global scope.  In the best case scenario it's just a waste of performance  but it can also lead to bugs like https://github.com/rails/rails/issues/51775  I'm planning to restrict this automatic delegation to methods defined in childs of `ActiveRecord::Base` only: https://github.com/rails/rails/pull/50396 but for this to work we must first refactor any Rails code that relies on it. ",closed,activerecord/lib/active_record/relation.rb; activerecord/lib/active_record/signed_id.rb,casperisfine,2024-05-13T01:42:22Z,2024-05-13T02:27:35Z
51775,51801,Refactor `ActiveRecord::TokenFor` to not rely on relation delegation,"Ref: https://github.com/rails/rails/pull/50396 Ref: https://github.com/rails/rails/pull/51776  `ActiveRecord::Relation` automatically delegates missing methods to the model class wrapped in a `scoping { }` block.  This is to support scoping in user defined class methods. The problem however is that it's very error prone for the framework  because we can mistakenly call model methods from inside `Relation` and not realized we're applying a global scope.  In the best case scenario it's just a waste of performance  but it can also lead to bugs like https://github.com/rails/rails/issues/51775  I'm planning to restrict this automatic delegation to methods defined in childs of `ActiveRecord::Base` only: https://github.com/rails/rails/pull/50396 but for this to work we must first refactor any Rails code that rely on it. ",closed,activerecord/lib/active_record/relation.rb; activerecord/lib/active_record/token_for.rb,casperisfine,2024-05-13T02:08:59Z,2024-05-13T02:38:12Z
51775,51793,Use Thruster by default to Rails 8,"[Thruster](https://github.com/basecamp/thruster/) is an asset compression and caching proxy with X-Sendfile acceleration that speeds up simple production-ready deployments of Rails applications. It runs alongside the Puma and usually behind the Kamal 2 proxy  which offers HTTP/2 and SSL auto-certificates  to help your app run efficiently and safely on the open Internet.  Rails 8 is going to configure the use of Thruster in the Dockerfile by default.",closed,Gemfile; Gemfile.lock; railties/lib/rails/generators/app_base.rb; railties/lib/rails/generators/rails/app/app_generator.rb; railties/lib/rails/generators/rails/app/templates/Dockerfile.tt; railties/lib/rails/generators/rails/app/templates/Gemfile.tt; railties/lib/rails/generators/rails/app/templates/bin/thrust.tt; railties/lib/rails/generators/rails/app/templates/docker-entrypoint.tt; railties/lib/rails/generators/rails/plugin/plugin_generator.rb; railties/test/generators/app_generator_test.rb,dhh,2024-05-12T02:48:53Z,2024-08-06T15:39:01Z
51723,51724,Fix: guides styling issue on light mode [ci skip],"Fixes: https://github.com/rails/rails/issues/51723   ### Detail  This Pull Request fixes the styling issue on code blocks when the system is in light mode.  <img width=""882"" alt=""Screenshot 2024-05-03 at 3 34 29 PM"" src=""https://github.com/rails/rails/assets/22231095/d59b8fb3-3ae7-4441-ba07-ef0a31516db7""> <img width=""852"" alt=""Screenshot 2024-05-03 at 3 34 17 PM"" src=""https://github.com/rails/rails/assets/22231095/6a0a91cf-97d3-4469-a53d-ea3ec4b2cc70"">   ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.   cc/ @jathayde ",closed,guides/assets/stylesrc/_main.scss; guides/assets/stylesrc/highlight.scss,akhilgkrishnan,2024-05-03T10:07:52Z,2024-05-03T16:43:40Z
51722,51725,Eliminate missed `lease_connection` calls,"Followup: https://github.com/rails/rails/pull/51353 Fix: https://github.com/rails/rails/issues/51722  Not too sure what happened  but I somehow missed quite a number of `lease_connection` calls inside Active Record. ",closed,activerecord/lib/active_record/associations/alias_tracker.rb; activerecord/lib/active_record/attributes.rb; activerecord/lib/active_record/connection_adapters/abstract/query_cache.rb; activerecord/lib/active_record/core.rb; activerecord/lib/active_record/model_schema.rb; activerecord/lib/active_record/persistence.rb; activerecord/lib/active_record/querying.rb; activerecord/lib/active_record/reflection.rb; activerecord/lib/active_record/relation.rb; activerecord/lib/active_record/relation/calculations.rb; activerecord/lib/active_record/relation/query_methods.rb; activerecord/lib/active_record/sanitization.rb; activerecord/lib/active_record/timestamp.rb; activerecord/lib/active_record/transactions.rb; activerecord/test/cases/bind_parameter_test.rb; activerecord/test/cases/connection_handling_test.rb; activerecord/test/cases/query_cache_test.rb; activerecord/test/cases/sanitize_test.rb,casperisfine,2024-05-03T10:56:33Z,2024-05-03T11:49:15Z
51720,51721,[Fix #51720] Infer association klass as top level if model has same demodularized name,"<!-- Thanks for contributing to Rails!  Please do not make *Draft* pull requests  as they still send notifications to everyone watching the Rails repo.  Create a pull request when it is ready for review and feedback from the Rails team :).  If your pull request affects documentation or any non-code changes  guidelines for those changes are [available here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)  About this template  The following template aims to help contributors write a good description for their pull requests. We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added)  the motivation behind the changes  and complete the checklist below before opening a pull request.  Feel free to discard it if you need to (e.g. when you just fix a typo). -->  ### Motivation / Background  <!-- Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important? If you are fixing a specific issue  include ""Fixes #ISSUE"" (replace with the issue number  remove the quotes) and the issue will be linked to this PR. -->  Fixes https://github.com/rails/rails/issues/51720  ### Detail  Updates `AbstractReflection#klass` and its only subclass override `MacroReflection#klass` to infer the association class as a top level class if the name of the model without module name-spacing is the same. The current inferrence is due to [this logic](https://github.com/rails/rails/blob/793ff00442723b2ff9ed7b7fb39cae2f5608cc2b/activerecord/lib/active_record/inheritance.rb#L253-L264) resolving the name in the current module first  which doesn't make sense in this specific case as it will always resolve to the model itself.  ### Additional information  <!-- Provide additional information such as benchmarks  references to other repositories  or alternative solutions. -->  None.  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,activerecord/CHANGELOG.md; activerecord/lib/active_record/reflection.rb; activerecord/test/cases/reflection_test.rb; activerecord/test/models/user.rb,joshuay03,2024-05-03T03:29:09Z,2024-05-22T23:46:14Z
51699,51898,Raise a descriptive error when a Store column is misconfigured,"### Motivation / Background  If a developer has neglected to use a structured column type (hstore or json) or to declare a serializer with `ActiveRecord.store`:  ```ruby   class User < ActiveRecord::Base     store_accessor :settings  :notifications   end ```  then a `ConfigurationError` will now be raised with a descriptive error message when the accessor is read or written:  ```ruby   puts user.notifications   # ActiveRecord::ConfigurationError: the column 'settings' has not   # been configured as a store.  Please make sure the column is   # declared serializable via 'ActiveRecord.store' or  if your   # database supports it  use a structured column type like hstore or   # json. ```  Previously  in this situation  a `NoMethodError` was raised when the accessor was read or written:  ```ruby   puts user.notifications   # NoMethodError: undefined method `accessor' for an instance of ActiveRecord::Type::Text ```  Raising a descriptive exception should help developers understand more quickly what's wrong and how to fix it.  Closes #51699   ### Detail  In `ActiveRecord::Store#store_accessor_for`  where the previous `NoMethodError` came from  we check if the attribute responds to `#accessor` and if so  raise the more descriptive exception.   ### Additional information  See an alternative implementation at #51897 that does this check earlier  in `ActiveRecord.store_accessor`. I think this implementation is better  less invasive  and does not break the case where a developer calls `store_accessor` before `store`.   ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,activerecord/CHANGELOG.md; activerecord/lib/active_record/store.rb; activerecord/test/cases/store_test.rb,flavorjones,2024-05-23T20:04:19Z,2024-05-24T06:34:43Z
51672,51685,[Fix #51672] Update RDoc comments for  ActiveRecord::RecordNotSaved [ci skip]," ### Detail Update RDoc comments for `ActiveRecord::RecordNotSaved` to be consistent with `ActiveRecord::Persistence::ClassMethods#save!`  ### Checklist  Before submitting the PR make sure the following are checked:  * [ ] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [ ] Tests are added or updated if you fix a bug or add a feature. * [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,activerecord/lib/active_record/errors.rb,fffx,2024-04-29T18:02:23Z,2024-04-30T22:08:07Z
51658,51662,Skip `selenium-webdriver` version 4.20.0,"### Motivation / Background  This commit will not allow to install the selenium-webdriver` version 4.20.0 because `Selenium::WebDriver::DriverFinder.path` was dropped in `selenium-webdriver` 4.20.0 that was not intentional.  It will be restored once the newer version of `selenium-webdriver` that includes https://github.com/SeleniumHQ/selenium/pull/13877 .      Fix #51658  ### Detail None  ### Additional information Feel free to open a pull request to support the newer versions of selenium-webdriver that deprecates `Selenium::WebDriver::DriverFinder.path`.  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [ ] Tests are added or updated if you fix a bug or add a feature. * [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.   ",closed,Gemfile; Gemfile.lock,yahonda,2024-04-25T23:55:21Z,2024-04-26T01:24:30Z
51606,51746,Use the given `form` in `html_options` for the hidden field in `collection_check_boxes`,"<!-- Thanks for contributing to Rails!  Please do not make *Draft* pull requests  as they still send notifications to everyone watching the Rails repo.  Create a pull request when it is ready for review and feedback from the Rails team :).  If your pull request affects documentation or any non-code changes  guidelines for those changes are [available here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)  About this template  The following template aims to help contributors write a good description for their pull requests. We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added)  the motivation behind the changes  and complete the checklist below before opening a pull request.  Feel free to discard it if you need to (e.g. when you just fix a typo). -->  ### Motivation / Background  <!-- Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important? If you are fixing a specific issue  include ""Fixes #ISSUE"" (replace with the issue number  remove the quotes) and the issue will be linked to this PR. -->  Fixes #51606   ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,actionview/CHANGELOG.md; actionview/lib/action_view/helpers/tags/collection_helpers.rb; actionview/test/template/form_collections_helper_test.rb,3v0k4,2024-05-06T09:41:35Z,2025-01-08T16:03:13Z
51594,51616,Fix `Mime::Type.parse` for HTTP Accept with parameters,"<!-- Thanks for contributing to Rails!  Please do not make *Draft* pull requests  as they still send notifications to everyone watching the Rails repo.  Create a pull request when it is ready for review and feedback from the Rails team :).  If your pull request affects documentation or any non-code changes  guidelines for those changes are [available here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)  About this template  The following template aims to help contributors write a good description for their pull requests. We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added)  the motivation behind the changes  and complete the checklist below before opening a pull request.  Feel free to discard it if you need to (e.g. when you just fix a typo). -->  ### Motivation / Background  <!-- Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important? If you are fixing a specific issue  include ""Fixes #ISSUE"" (replace with the issue number  remove the quotes) and the issue will be linked to this PR. -->  Fixes  #51594  This Pull Request has been created because to fix valid Mime::Type parsing of media range parameters.  ### Detail  This Pull Request changes `Mime::Type.lookup` (indirectly `Mime::Type.parse`) to strip out custom media range parameters before falling back to default type creation. This _should_ fix at least some 406 responses that Rails 7.1 is returning for valid HTTP Accept headers.  An example of a failure currently:  `Accept: */*;encoding=UTF-8;q=0.9`  ### Additional information  <!-- Provide additional information such as benchmarks  references to other repositories  or alternative solutions. --> It looks like the break was initially introduced in 7.1 from #48397 .  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,actionpack/CHANGELOG.md; actionpack/lib/action_dispatch/http/mime_type.rb; actionpack/test/dispatch/mime_type_test.rb,notchairmk,2024-04-20T11:18:09Z,2024-04-23T20:51:07Z
51582,51633,Fix PostgreSQL `Cidr#change?` to compare with address prefix,"<!-- Thanks for contributing to Rails!  Please do not make *Draft* pull requests  as they still send notifications to everyone watching the Rails repo.  Create a pull request when it is ready for review and feedback from the Rails team :).  If your pull request affects documentation or any non-code changes  guidelines for those changes are [available here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)  About this template  The following template aims to help contributors write a good description for their pull requests. We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added)  the motivation behind the changes  and complete the checklist below before opening a pull request.  Feel free to discard it if you need to (e.g. when you just fix a typo). -->  ### Motivation / Background  <!-- Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important? If you are fixing a specific issue  include ""Fixes #ISSUE"" (replace with the issue number  remove the quotes) and the issue will be linked to this PR. -->  This Pull Request has been created because fixes #51582  ### Detail  This Pull Request changes to override`ActiveRecord::ConnectionAdapters::PostgreSQL::OID::Cidr#changed?`. It added to compare address prefix of IPAddr class.   ### Additional information  <!-- Provide additional information such as benchmarks  references to other repositories  or alternative solutions. -->  I’m proposing to fix `IPAddr#==` comparing address prefix for the cause of this problem. https://github.com/ruby/ipaddr/pull/69  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,activerecord/lib/active_record/connection_adapters/postgresql/oid/cidr.rb; activerecord/test/cases/adapters/postgresql/network_test.rb,taketo1113,2024-04-22T14:28:07Z,2024-04-24T02:47:14Z
51463,51464,[Fix #51463] Raise an error when invalid `:only` or `:except` options are given to `#resource` or `#resources`,"<!-- Thanks for contributing to Rails!  Please do not make *Draft* pull requests  as they still send notifications to everyone watching the Rails repo.  Create a pull request when it is ready for review and feedback from the Rails team :).  If your pull request affects documentation or any non-code changes  guidelines for those changes are [available here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)  About this template  The following template aims to help contributors write a good description for their pull requests. We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added)  the motivation behind the changes  and complete the checklist below before opening a pull request.  Feel free to discard it if you need to (e.g. when you just fix a typo). -->  ### Motivation / Background  <!-- Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important? If you are fixing a specific issue  include ""Fixes #ISSUE"" (replace with the issue number  remove the quotes) and the issue will be linked to this PR. -->  Fixes https://github.com/rails/rails/issues/51463.  ### Detail  Raises an `ArgumentError` when a `ActionDispatch::Routing::Mapper::Resources::Resource` is initalized with `:only` or `:except` options that aren't default (index  create  new  show  update  and destroy) actions .  ### Additional information  <!-- Provide additional information such as benchmarks  references to other repositories  or alternative solutions. -->  See my comment below as to why this seems like more changes than it needs to be.  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,actionpack/CHANGELOG.md; actionpack/lib/action_dispatch/routing/mapper.rb; actionpack/lib/action_dispatch/testing/assertions/routing.rb; actionpack/test/controller/resources_test.rb,joshuay03,2024-04-02T04:30:58Z,2024-10-04T14:26:22Z
51448,51483,Add a Date decoder to the pg adapter ,"Fix #51448  Add a Date decoder to the pg adapter to type cast dates at the connection level  This would type cast columns of type `date` to ruby `Date` when running a raw query through `ActiveRecord::Base.connection.select_all`.  Before:  ```ruby ActiveRecord::Base.connection.select_value(""select '2024-01-01'::date"").class  #=> String ```  After: ```ruby ActiveRecord::Base.connection.select_value(""select '2024-01-01'::date"").class  #=>  Date  ```   While I don't think we'd want to to set a type cast expectation at this level (not all adapters have dates)  this would brings the PG adapter to parity (for dates) with the Mysql2 adapter.   We already convert timestamp  it would makes sense to also convert dates.   I wasn't sure if I should add a test. I am thinking that a test sets an expectation about type casting at the adapter level.  This changes a public API  albeit a pretty low level one  but it seems like we don't test the other types either. I removed timestamps + float/numeric and all tests still pass.   I added a message in the changelog entry to make sure it doesn't burn anyone.   Unsure if we should merge this. Impact radius is large  but after digging into it and running the tests  it looks pretty benign.  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,activerecord/CHANGELOG.md; activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb; activerecord/test/cases/adapters/postgresql/date_test.rb,JoeDupuis,2024-04-04T00:27:33Z,2024-04-30T11:32:07Z
51386,51492,"Arel: make `Or` nodes ""Nary"" like `And`","Fix: https://github.com/rails/rails/issues/51386  This significantly reduce the depth of the tree for large `OR` conditions. I was initially a bit on the fence about that fix  but given that `And` is already implemented this way  I see no reasons not to do the same.  Amusingly  the reported repro script now makes SQLite fail:  ```ruby SQLite3::SQLException: Expression tree is too large (maximum depth 1000) ```  FYI: @markedmondson ",closed,activerecord/lib/active_record/relation/predicate_builder.rb; activerecord/lib/active_record/relation/query_methods.rb; activerecord/lib/active_record/relation/where_clause.rb; activerecord/lib/arel/nodes.rb; activerecord/lib/arel/nodes/binary.rb; activerecord/lib/arel/nodes/nary.rb; activerecord/lib/arel/nodes/node.rb; activerecord/lib/arel/predications.rb; activerecord/lib/arel/visitors/dot.rb; activerecord/lib/arel/visitors/to_sql.rb; activerecord/test/cases/arel/attributes/attribute_test.rb; activerecord/test/cases/arel/nodes/or_test.rb; activerecord/test/cases/arel/visitors/dot_test.rb; activerecord/test/cases/arel/visitors/to_sql_test.rb; activerecord/test/cases/relation/where_clause_test.rb,casperisfine,2024-04-04T13:03:38Z,2024-04-04T14:43:41Z
51347,54578,Fix leaky test:,"- Fix #51347 - The tests in this suite are leaky which results in other tests from other suite from sometimes failing.    The problem is due to modifying some database tables while a prepared statement on Postgreql already exists. This causes Postgres to report an error ""cached plan must not change result type"".    The order of reproduction is as follow:    - We have more than one connection in the pool (Let's say Conn1 and Conn2 for the sake of the example)   - A first test runs a query  Conn1 is used  we prepare a statement.   - The leaky test modify some table on Conn2.   - A third test runs a query in a transaction  Conn1 is used  the query was prepared. Postgresql reports the  ""cached plan must not change result type"".    This commis fixes that by clearing the statement cache on each   connection.   cc/ @yahonda ",closed,activerecord/test/cases/migration_test.rb,Edouard-chin,2025-02-20T08:15:14Z,2025-02-20T08:35:55Z
51298,51318,[7-1-stable] Fix a crash when an  Executor wrapped fork exit.,"Fix #51298  forking inside an Execution Wrapper crashes when running the completion callbacks.  Rails 7.0 was wrapping the `runner` command with an ExecutionWrapper.  Rails 7.2 changed the definition of `active_connection?`  the new definition doesn't contain the bug.   Therefore forking inside a script intended to be run with the `runner` command on 7.1 crashes. (see #51298)  This PR is targeting `7-1-stable`  Edit: The regression test (with the fork) blew up the tests. I removed it  I'll revisit.   ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,activerecord/lib/active_record/query_cache.rb; activerecord/test/cases/query_cache_test.rb,JoeDupuis,2024-03-13T02:22:58Z,2024-05-14T22:58:47Z
51284,51288,Expire caching when a download fail while proxying in ActiveStorage,"Fix #51284  Both Proxy controllers in Active Storage set the caching headers early before streaming.   In some instances (see #51284)  it is possible for the file download (from the storage service to Active Storage) to fail before we send the first byte to the client (response not yet committed).   In those instances  this change would invalidate the cache and return a better response status before closing the stream.  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,activestorage/app/controllers/concerns/active_storage/streaming.rb; activestorage/test/controllers/blobs/proxy_controller_test.rb; activestorage/test/controllers/representations/proxy_controller_test.rb,JoeDupuis,2024-03-10T03:28:10Z,2024-06-17T17:35:42Z
51246,51267,railties: configure sanitizer vendor in 7.1 defaults more robustly,"### Motivation / Background  rails-html-santizer is a dependency of Action View and a transitive dependency of Action Text (via Action Pack)  but may not be loaded until after railties sets configuration defaults  meaning that the sanitizer vendor may remain `Rails::HTML4` and not be set to `Rails::HTML5` as we intend in Rails 7.1.  This change `require`s rails-html-sanitizer immediately before it's needed  and avoids the possibly-incorrect assumption that Rails::HTML::Sanitizer is already defined.  Closes #51246  If merged  this should be backported to 7-1-stable.  ### Additional information  Because the buggy behavior is dependent on the order in which libraries are loaded  it's difficult to add to the test suite.  I tested manually using the repro from #51246:  ```ruby #! /usr/bin/env ruby  require ""bundler/inline""  gemfile do   source ""https://rubygems.org""   gem ""rails""  path: "".."" end  require ""action_controller/railtie"" require ""action_view/railtie"" require ""minitest/autorun""  class TestApp < Rails::Application   config.load_defaults 7.1   config.eager_load = true end  TestApp.initialize!  class BugTest < Minitest::Test   def test_sanitizer_vendor     assert_equal ActionView::Helpers::SanitizeHelper.sanitizer_vendor  Rails::HTML5::Sanitizer   end end ```    ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [ ] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,railties/CHANGELOG.md; railties/lib/rails/application/configuration.rb,flavorjones,2024-03-06T21:52:17Z,2024-03-08T16:43:08Z
51164,51165,[Fix #51164] `Model.query_constraints` with single non-primary-key column raises incorrect error,"<!-- Thanks for contributing to Rails!  Please do not make *Draft* pull requests  as they still send notifications to everyone watching the Rails repo.  Create a pull request when it is ready for review and feedback from the Rails team :).  If your pull request affects documentation or any non-code changes  guidelines for those changes are [available here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)  About this template  The following template aims to help contributors write a good description for their pull requests. We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added)  motivation behind the changes  and complete the checklist below before opening a pull request.  Feel free to discard it if you need to (e.g. when you just fix a typo). -->  ### Motivation / Background  <!-- Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important? If you are fixing a specific issue  include ""Fixes #ISSUE"" (replace with the issue number  remove the quotes) and the issue will be linked to this PR. -->  Fixes #51164.  ### Detail  This Pull Request changes `ActiveRecord::Reflection::AssociationReflection#derive_fk_query_constraints` to raise an existing more appropriate error if `Model.query_constraints` is given a single non-primary-key column argument.  ### Additional information  <!-- Provide additional information such as benchmarks  reference to other repositories or alternative solutions. -->  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,activerecord/CHANGELOG.md; activerecord/lib/active_record/reflection.rb; activerecord/test/cases/associations_test.rb,joshuay03,2024-02-22T14:04:49Z,2024-02-28T13:12:53Z
51129,51167,[Fix #51129] Fix issue with IDs reader on preloaded associations for composite primary keys,"<!-- Thanks for contributing to Rails!  Please do not make *Draft* pull requests  as they still send notifications to everyone watching the Rails repo.  Create a pull request when it is ready for review and feedback from the Rails team :).  If your pull request affects documentation or any non-code changes  guidelines for those changes are [available here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)  About this template  The following template aims to help contributors write a good description for their pull requests. We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added)  motivation behind the changes  and complete the checklist below before opening a pull request.  Feel free to discard it if you need to (e.g. when you just fix a typo). -->  ### Motivation / Background  <!-- Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important? If you are fixing a specific issue  include ""Fixes #ISSUE"" (replace with the issue number  remove the quotes) and the issue will be linked to this PR. -->  Fixes https://github.com/rails/rails/issues/51129.  ### Detail  When using composite primary keys in a model  the `primary_key` will be an array. This raises an issue when calling the `<association>_ids` method on a preloaded association. Internally  Rails uses the `pluck` method from Enumerable to retrieve the preloaded results. However  the `pluck` method does not accept an array as its argument. To accommodate that  we need to use the splat operator to split the array into multiple arguments dynamically.  ### Additional information  <!-- Provide additional information such as benchmarks  reference to other repositories or alternative solutions. -->  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,activerecord/CHANGELOG.md; activerecord/lib/active_record/associations/collection_association.rb; activerecord/test/cases/associations/has_many_associations_test.rb,Jay0921,2024-02-22T15:46:48Z,2024-06-05T14:55:09Z
51095,51096,[Fix #51095] Missing template error page showing incorrect view path example for nested controller path,"<!-- Thanks for contributing to Rails!  Please do not make *Draft* pull requests  as they still send notifications to everyone watching the Rails repo.  Create a pull request when it is ready for review and feedback from the Rails team :).  If your pull request affects documentation or any non-code changes  guidelines for those changes are [available here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)  About this template  The following template aims to help contributors write a good description for their pull requests. We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added)  motivation behind the changes  and complete the checklist below before opening a pull request.  Feel free to discard it if you need to (e.g. when you just fix a typo). -->  ### Motivation / Background  <!-- Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important? If you are fixing a specific issue  include ""Fixes #ISSUE"" (replace with the issue number  remove the quotes) and the issue will be linked to this PR. -->  Fixes #51095  ### Detail  Updates the error page displayed when a view template is missing to account for nested controller paths in the suggested correct path for the missing template.  ### Additional information  <!-- Provide additional information such as benchmarks  reference to other repositories or alternative solutions. -->  Testing steps: https://github.com/rails/rails/issues/51095#issuecomment-1945603654  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [ ] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,actionpack/CHANGELOG.md; actionpack/lib/action_dispatch/middleware/templates/rescues/missing_exact_template.html.erb,joshuay03,2024-02-15T08:37:46Z,2024-04-19T19:22:55Z
51075,51079,Update Method#duplicable? to be consistent with Ruby 3.4,"Fix: https://github.com/rails/rails/issues/51075  `Method` and `UnboundMethod` used to raise on `#dup`  but not `#clone`  this wasn't so much a feature  but a bug.  It was fixed in https://github.com/ruby/ruby/pull/9926.  cc @yahonda",closed,activesupport/lib/active_support/core_ext/object/duplicable.rb; activesupport/test/core_ext/object/duplicable_test.rb,casperisfine,2024-02-14T08:54:53Z,2024-02-14T09:33:57Z
51075,51984,[7-1-stable] Update Method#duplicable? to be consistent with Ruby 3.4,"Backports #51079 to `7-1-stable`  since it is [failing](https://buildkite.com/rails/rails/builds/107917#018fd1fd-7599-4f33-a5a5-51fd46050afd/1231-1241) even on Ruby 3.3.  ---  Fix: https://github.com/rails/rails/issues/51075  `Method` and `UnboundMethod` used to raise on `#dup`  but not `#clone`  this wasn't so much a feature  but a bug.  It was fixed in https://github.com/ruby/ruby/pull/9926.  /cc @byroot ",closed,activesupport/lib/active_support/core_ext/object/duplicable.rb; activesupport/test/core_ext/object/duplicable_test.rb,zzak,2024-06-01T04:26:34Z,2024-06-01T08:24:30Z
51002,51050,ActionDispatch::Executor: report errors handled by ShowExceptions,"Fix: https://github.com/rails/rails/issues/51002  In the default middleware stack  the `ShowExceptions` middleware is lower than `ActionDispatch::Execturor` and will handle most exceptions causing `Executor` not to witness any.  Instead we need to rely on `action_dispatch.exception` being added into the request env.  FYI @fractaledmind @rafaelfranca   To be backported to 7.1 and 7.0.",closed,actionpack/lib/action_dispatch/middleware/executor.rb; actionpack/lib/action_dispatch/middleware/show_exceptions.rb; actionpack/test/dispatch/executor_test.rb,casperisfine,2024-02-12T15:51:06Z,2024-02-12T16:51:02Z
50948,51066,Fix destroy of has_one with multiple belongs_to,"With a bi-directional has one through association  where the join model belongs to each parent with `dependent: :destroy`  destroying either parent should destroy the through record and the other parent.      class Left < ActiveRecord::Base       has_one :middle  dependent: :destroy       has_one :right  through: :middle     end      class Middle < ActiveRecord::Base       belongs_to :left  dependent: :destroy       belongs_to :right  dependent: :destroy     end      class Right < ActiveRecord::Base       has_one :middle  dependent: :destroy       has_one :left  through: :middle     end  However this only worked from one end.  When destroying the ""non-working"" end  the join model was correctly destroyed but the other end was not.  In the example above:  - `right.destroy` correctly destroys its `middle` and its `left`; - `left.destroy` destroys its `middle` but not its `right`.  The end which worked depended on the order of `belongs_to` statements in the join model.  This commit ensures that the no matter which end you destroy  the far end is destroyed (along with the join record).  Fixes #50948.   ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,activerecord/lib/active_record/callbacks.rb; activerecord/test/cases/associations/has_one_associations_test.rb; activerecord/test/cases/token_for_test.rb; activerecord/test/models/room.rb; activerecord/test/models/user.rb; activerecord/test/schema/schema.rb,airblade,2024-02-13T16:52:49Z,2024-10-06T15:05:21Z
50930,51023,Allow template to return any kind of objects,"Fix: https://github.com/rails/rails/issues/50930  While Action View is predominantly meant to render text  in some case it's used to render more complex object.  So we shouldn't assume `#_run` returns a buffer.  FYI: @kuwabarahiroshi  @julik",closed,actionview/lib/action_view/template.rb; actionview/test/template/template_test.rb,casperisfine,2024-02-09T13:55:24Z,2024-02-09T14:10:28Z
50899,50904,Commented out lines in .railsrc file should not be treated as arguments,"Commented out lines in .rc file should not be treated as arguments when using rails new generator command.  <!-- Thanks for contributing to Rails!  Please do not make *Draft* pull requests  as they still send notifications to everyone watching the Rails repo.  Create a pull request when it is ready for review and feedback from the Rails team :).  If your pull request affects documentation or any non-code changes  guidelines for those changes are [available here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)  About this template  The following template aims to help contributors write a good description for their pull requests. We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added)  motivation behind the changes  and complete the checklist below before opening a pull request.  Feel free to discard it if you need to (e.g. when you just fix a typo). -->  ### Motivation / Background  <!-- Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important? If you are fixing a specific issue  include ""Fixes #ISSUE"" (replace with the issue number  remove the quotes) and the issue will be linked to this PR. -->  This Pull Request has been created because railsrc file doesn't handles commented out lines (`#`)  Issue #50899   ### Detail  This Pull Request changes Railtie ARGVScrubber to ignore text after `#` symbols  ### Additional information  <!-- Provide additional information such as benchmarks  reference to other repositories or alternative solutions. -->  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,railties/CHANGELOG.md; railties/lib/rails/generators/rails/app/app_generator.rb; railties/test/generators/argv_scrubber_test.rb,williantenfen,2024-01-28T21:19:42Z,2024-01-29T18:17:30Z
50897,50901,[Fix #50897] Autosaving `has_one` sets foreign key attribute when unchanged,"<!-- Thanks for contributing to Rails!  Please do not make *Draft* pull requests  as they still send notifications to everyone watching the Rails repo.  Create a pull request when it is ready for review and feedback from the Rails team :).  If your pull request affects documentation or any non-code changes  guidelines for those changes are [available here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)  About this template  The following template aims to help contributors write a good description for their pull requests. We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added)  motivation behind the changes  and complete the checklist below before opening a pull request.  Feel free to discard it if you need to (e.g. when you just fix a typo). -->  ### Motivation / Background  <!-- Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important? If you are fixing a specific issue  include ""Fixes #ISSUE"" (replace with the issue number  remove the quotes) and the issue will be linked to this PR. -->  Fixes https://github.com/rails/rails/issues/50897  Similar to https://github.com/rails/rails/pull/46759  ### Detail  Updates `ActiveRecord::AutosaveAssociation#save_has_one_association` to only update the foreign key attribute on the child record if it has changed. This makes its behaviour consistent with `belongs_to` associations and ensures that `ActiveRecord::ReadOnlyAttributeError` isn't raised when no changes have been made to the attribute.  ### Additional information  <!-- Provide additional information such as benchmarks  reference to other repositories or alternative solutions. -->  None.  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,activerecord/CHANGELOG.md; activerecord/lib/active_record/autosave_association.rb; activerecord/test/cases/autosave_association_test.rb; activerecord/test/models/eye.rb,joshuay03,2024-01-28T09:30:20Z,2024-02-21T20:21:24Z
50871,50882,Prevent rdoc task from excluding the main page,"### Motivation / Background There was a bug where the main page becomes unable to be found and this change ensures that it does not happen.  Closes https://github.com/rails/rails/issues/50871.  ### Checklist Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [ ] Tests are added or updated if you fix a bug or add a feature. * [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,railties/lib/rails/api/task.rb,sato11,2024-01-26T06:10:07Z,2024-01-26T18:31:53Z
50853,50854,Fix rotation detection for HDR videos,"<!-- Thanks for contributing to Rails!  Please do not make *Draft* pull requests  as they still send notifications to everyone watching the Rails repo.  Create a pull request when it is ready for review and feedback from the Rails team :).  If your pull request affects documentation or any non-code changes  guidelines for those changes are [available here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)  About this template  The following template aims to help contributors write a good description for their pull requests. We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added)  motivation behind the changes  and complete the checklist below before opening a pull request.  Feel free to discard it if you need to (e.g. when you just fix a typo). -->  ### Motivation  Fixes https://github.com/rails/rails/issues/50853  ### Detail  The video analyzer was relying on the positional reference of side_data to fetch the rotation metadata. However  the side_data is not guaranteed to be in the same position for all videos. For instance  HDR videos shot on iOS in portrait mode have ""DOVI configuration record"" side_data in the first position  followed by the ""Display matrix"" side data containing the rotation value.  This fix removes the positional reference and explicitely searches for the ""Display Matrix"" side_data to retrieve the rotation angle.  ### Additional information  <!-- Provide additional information such as benchmarks  reference to other repositories or alternative solutions. -->  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,activestorage/lib/active_storage/analyzer/video_analyzer.rb; activestorage/test/analyzer/video_analyzer_test.rb; activestorage/test/fixtures/files/rotated_hdr_video.mov,railsbob,2024-01-23T17:20:38Z,2024-01-23T19:28:12Z
50803,50804,[Fix #50803] Consistently raise an `ArgumentError` when passing an invalid argument to a nested attributes association writer,"<!-- Thanks for contributing to Rails!  Please do not make *Draft* pull requests  as they still send notifications to everyone watching the Rails repo.  Create a pull request when it is ready for review and feedback from the Rails team :).  If your pull request affects documentation or any non-code changes  guidelines for those changes are [available here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)  About this template  The following template aims to help contributors write a good description for their pull requests. We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added)  motivation behind the changes  and complete the checklist below before opening a pull request.  Feel free to discard it if you need to (e.g. when you just fix a typo). -->  ### Motivation / Background  <!-- Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important? If you are fixing a specific issue  include ""Fixes #ISSUE"" (replace with the issue number  remove the quotes) and the issue will be linked to this PR. -->  Fixes #50803.  ### Detail  Updates `ActiveRecord::NestedAttributes#assign_nested_attributes_for_one_to_one_association` to raise an ArgumentError when given an invalid `attributes` argument similar to [`ActiveRecord::NestedAttributes#assign_nested_attributes_for_collection_association`](https://github.com/rails/rails/blob/9c3ffab47c3bf59320ba08e9dafdb0275cf91a5a/activerecord/lib/active_record/nested_attributes.rb#L488-L490).  Also makes a slight improvement to the existing error for collection associations.  ### Additional information  <!-- Provide additional information such as benchmarks  reference to other repositories or alternative solutions. -->  None.  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,activerecord/CHANGELOG.md; activerecord/lib/active_record/nested_attributes.rb; activerecord/test/cases/nested_attributes_test.rb,joshuay03,2024-01-19T09:47:03Z,2024-01-19T12:29:01Z
50774,50775,Fix threading issue with strict locals,Fixes #50774  When the server boots up  2 threads hit the same `UnboundTemplate` instance before it has set up `@templates`. Both threads get past the `unless template = @templates[locals]` check because `@templates[locals]` isn't set yet. However  with `@write_lock`  one thread waits while the other one proceeds  setting `@templates` to a frozen hash. The second thread then gets the write lock and tries to modify `@templates` but it has been frozen. ,closed,actionview/lib/action_view/unbound_template.rb,mockdeep,2024-01-17T00:29:20Z,2024-01-18T16:57:25Z
50770,50825,Update rails console prompt,"### Motivation / Background  This PR adopts the follow up suggestion in https://github.com/rails/rails/issues/50770 around Rails console's prompt.  ### Detail  Instead of displaying `[env]:[line-number]>` as the prompt  showing `[app-name]([env])>` will provide more value to users.  For example  if the app's top-level module is `MyApp`  its development prompt would be:  ``` my-app(dev)> ```  ### Additional information  <!-- Provide additional information such as benchmarks  reference to other repositories or alternative solutions. -->  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,railties/CHANGELOG.md; railties/lib/rails/commands/console/console_command.rb; railties/test/application/console_test.rb; railties/test/commands/console_test.rb,st0012,2024-01-20T20:57:22Z,2024-01-20T23:36:25Z
50713,50715,[Fix #50713] Do not trigger loading of ActiveJob::Base in ActiveJob::TestHelper,"  <!-- Thanks for contributing to Rails!  Please do not make *Draft* pull requests  as they still send notifications to everyone watching the Rails repo.  Create a pull request when it is ready for review and feedback from the Rails team :).  If your pull request affects documentation or any non-code changes  guidelines for those changes are [available here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)  About this template  The following template aims to help contributors write a good description for their pull requests. We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added)  motivation behind the changes  and complete the checklist below before opening a pull request.  Feel free to discard it if you need to (e.g. when you just fix a typo). -->  ### Motivation / Background  <!-- Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important? If you are fixing a specific issue  include ""Fixes #ISSUE"" (replace with the issue number  remove the quotes) and the issue will be linked to this PR. -->  This Pull Request has been created to avoid the immediate loading of `ActiveJob::Base` when loading `ActiveJob::TestHelper`.  Fixes https://github.com/rails/rails/issues/50713.  ### Detail  This Pull Request wraps a modification on `ActiveJob::Base` in an `ActiveSupport.on_load(:active_job)` hook  to defer loading until absolutely necessary.  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [ ] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.",closed,activejob/CHANGELOG.md; activejob/lib/active_job/test_helper.rb,maximerety,2024-01-11T18:42:58Z,2024-01-11T19:41:21Z
50712,50798,Print `bin/rails` help on unrecognized bare options,"Prior to this commit  `bin/rails` would pass unrecognized bare options on to Rake:    ```console   $ bin/rails -v   Rails 7.2.0.alpha    $ bin/rails -V   rake  version 13.0.6    $ bin/rails -s   Running 0 tests in a single process (parallelization threshold is 50)   ...    $ bin/rails -S   invalid option: -S   ```  This commit changes `bin/rails` to print its help message when given an unrecognized bare option:    ```console   $ bin/rails -v   Rails 7.2.0.alpha    $ bin/rails -V   Usage:     bin/rails COMMAND [options]    You must specify a command. The most common commands are:   ...    $ bin/rails -s   Usage:     bin/rails COMMAND [options]    You must specify a command. The most common commands are:   ...    $ bin/rails -S   Usage:     bin/rails COMMAND [options]    You must specify a command. The most common commands are:   ...   ```  However  for backward compatibility  an exception has been made for the `-T` / `--tasks` option:    ```console   $ bin/rails -T   # Prints list of Rake tasks...   ```  Addresses #50712. ",closed,railties/CHANGELOG.md; railties/lib/rails/command.rb; railties/test/command/help_integration_test.rb,jonathanhefner,2024-01-18T23:57:15Z,2024-01-19T00:10:23Z
50700,50799,Fix `bin/rails -T` when no default task is defined,"When Rake parses an argument string with no tasks  it sets the top-level task as ""default"".  Prior to this commit  if no default task was defined (for example  if an app was generated with `--skip-test` and didn't define its own default task)  `Rails::Command::RakeCommand` would raise `UnrecognizedCommandError`  preventing Rake from displaying the task list.  This commit changes `Rails::Command::RakeCommand` to let Rake handle the ""default"" task.  Fixes #50700. ",closed,guides/source/active_record_multiple_databases.md; railties/lib/rails/commands/rake/rake_command.rb; railties/test/command/help_integration_test.rb,jonathanhefner,2024-01-19T00:11:33Z,2024-01-19T00:43:18Z
50604,50606,[Fix #50604] Restore compatibility of Active Record Encryption configs with eager loading mode," <!-- Thanks for contributing to Rails!  Please do not make *Draft* pull requests  as they still send notifications to everyone watching the Rails repo.  Create a pull request when it is ready for review and feedback from the Rails team :).  If your pull request affects documentation or any non-code changes  guidelines for those changes are [available here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)  About this template  The following template aims to help contributors write a good description for their pull requests. We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added)  motivation behind the changes  and complete the checklist below before opening a pull request.  Feel free to discard it if you need to (e.g. when you just fix a typo). -->  ### Motivation / Background  <!-- Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important? If you are fixing a specific issue  include ""Fixes #ISSUE"" (replace with the issue number  remove the quotes) and the issue will be linked to this PR. -->  Fixes #50604  This Pull Request fixes a source of incompatibility between the loading order of Active Record Encryption configs and the loading of AR models in eager loading mode.  ### Detail  This Pull Request removes an occurrence of `after_initialize` introduced in https://github.com/rails/rails/pull/48530  which is not fully compatible with the eager loading mode.  Previous concerns were raised in [a discussion from the same PR](https://github.com/rails/rails/pull/48530/files#r1237624233).  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,activerecord/CHANGELOG.md; activerecord/lib/active_record/railtie.rb; railties/test/application/configuration_test.rb,maximerety,2024-01-05T18:03:09Z,2024-02-12T21:13:23Z
50604,51061,Backport #50606 to 7-1-stable,"Ref: https://github.com/rails/rails/pull/50606  Opening a PR because the patch didn't apply cleanly.",closed,activerecord/CHANGELOG.md; activerecord/lib/active_record/railtie.rb; railties/test/application/configuration_test.rb,maximerety,2024-02-13T12:28:27Z,2024-02-13T23:06:09Z
50560,50758,Eagerly load preview images (N+1),"For non-image attachments (like videos)  generated representations are created as a preview_image_attachment instead of as normal variants  and as a result aren't included in the `with_attached_` scopes. This adds those preview image attachments to the `includes` of these scopes to avoid an N+1 when iterating over a collection of attachments and fetching the key of their representation (variants).  Fixes #50560",closed,activestorage/CHANGELOG.md; activestorage/app/models/active_storage/attachment.rb; activestorage/lib/active_storage/attached/model.rb; activestorage/test/models/variant_with_record_test.rb; railties/test/application/test_runner_test.rb,tenderlove,2024-01-15T19:03:14Z,2024-01-16T18:44:11Z
50501,50507,Add Brakeman by default to new apps,"Add Brakeman by default to all new apps  It can be skipped with the `--skip-brakeman` flag.  Closes #50501",closed,railties/CHANGELOG.md; railties/lib/rails/generators/app_base.rb; railties/lib/rails/generators/rails/app/app_generator.rb; railties/lib/rails/generators/rails/app/templates/Gemfile.tt; railties/lib/rails/generators/rails/app/templates/bin/brakeman.tt; railties/test/generators/app_generator_test.rb,vipulnsward,2023-12-31T17:34:45Z,2023-12-31T18:09:47Z
50456,50506,Apply autocorrection by RuboCop to files generated by `bin/rails generate`,"## Motivation / Background  RuboCop has now been included by default (#50456). By adding the following tip to the default configuration  user can apply RuboCop's autocorrection to code generated by `bin/rails generate` (e.g.  migration file):  https://github.com/rubocop/rubocop-rails#rails-configuration-tip  This means that the generated files will be formatted according to user's .rubocop.yml custom configuration.  ## Detail  Since `bin/rails generate` and `bin/rubocop` are used only in the development environment  the target files are limited to only `config/environments/development.rb`.  ## Additional information  This feature was introduced in Rails 6.1 by https://github.com/rails/rails/pull/38870.  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,railties/lib/rails/configuration.rb; railties/lib/rails/generators/rails/app/templates/config/environments/development.rb.tt; railties/test/application/generators_test.rb; railties/test/generators/app_generator_test.rb,koic,2023-12-31T17:27:29Z,2024-01-01T19:04:47Z
50368,50395,Fix `Relation#transaction` to not apply a default scope,"Fix: https://github.com/rails/rails/issues/50368  When called on a scope it would go through the default scoping delegator that applies a default scope  which make no sense. ",closed,activerecord/lib/active_record/relation/delegation.rb; activerecord/test/cases/transactions_test.rb,casperisfine,2023-12-19T10:31:14Z,2023-12-19T10:50:54Z
50351,50353,Fix `load_async` for null relations,"### Motivation / Background  Fixes https://github.com/rails/rails/issues/50351 ",closed,activerecord/lib/active_record/relation.rb; activerecord/test/cases/relation/load_async_test.rb,lucasmazza,2023-12-13T23:42:01Z,2023-12-14T11:33:26Z
50327,50367,Update API doc for ActiveRecord::Relation#none?/#any?/#one? [ci-skip],"### Motivation / Background  I checked https://github.com/rails/rails/issues/50327 and noticed that clear API docs are needed. Some developers are using these methods incorrectly  thinking they're only for Active Record Relation and pass condition argument  but they actually work with Enumerable. These methods treat that argument as a pattern argument.  ### Detail  I have added required API doc for these methods so developers won't get confused with the argument meaning.  ### Additional information  Original [PR](https://github.com/rails/rails/pull/46728) which updated these methods to support pattern argument.  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] [N/A] Tests are added or updated if you fix a bug or add a feature. * [x] [N/A]  CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,activerecord/lib/active_record/relation.rb,mechanicles,2023-12-15T18:06:35Z,2023-12-18T07:26:22Z
50324,50337,Fix `config.log_level` being ignored when using a Broadcast Logger,"ℹ️ To backport to 7-1 stable please 🙇  ______________________________________  <!-- Thanks for contributing to Rails!  Please do not make *Draft* pull requests  as they still send notifications to everyone watching the Rails repo.  Create a pull request when it is ready for review and feedback from the Rails team :).  If your pull request affects documentation or any non-code changes  guidelines for those changes are [available here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)  About this template  The following template aims to help contributors write a good description for their pull requests. We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added)  motivation behind the changes  and complete the checklist below before opening a pull request.  Feel free to discard it if you need to (e.g. when you just fix a typo). -->  ### Motivation / Background  If an application has configured a Broadcast Logger  setting the `config.log_level` to any value has no effect:  ```ruby # config/application.rb  config.logger = ActiveSupport::BroadcastLogger.new(Logger.new(STDOUT)) config.log_level = :warn  puts Rails.logger.broadcasts.map(&:level) #=> [Logger::DEBUG] ```  This is a side effect of #49621 which tried to fix the `log_level` default value overriding the whole broadcasts.   ### Detail  ##### Context  The `log_level` default's value shouldn't apply to a Broadcast Logger  as otherwise it overrides whatever the application previously configured. While this behaviour is the same with a vanilla logger  at least we can workaround it:  ```ruby ############################### # When using a vanilla logger # ###############################  config.logger = Logger.new(STDOUT  level: LOGGER::WARN) # Once the app boots  the level is overriden to DEBUG. We need to add the following line. config.log_level = :warn  ################################# # When using a broadcast logger # #################################  stdout = Logger.new(STDOUT  level: Logger::INFO) stderr = Logger.new(STDERR  level: Logger::ERROR) config.logger = ActiveSupport::BroadcastLogger(stdout  stderr)  # Once the app boots the whole broadcast level is overriden to DEBUG. # There is no way to workaround this as you can't fine grain the level of each # loggers with `config.log_level=`. ```  ##### Solution  This PR ignores the default `log_level` value when using a Broadcast Logger  but ensure it gets used if an application manually sets it.  Fix #50324 cc/ @ghiculescu   ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,railties/lib/rails/application/bootstrap.rb; railties/lib/rails/application/configuration.rb; railties/test/application/configuration_test.rb,Edouard-chin,2023-12-12T14:59:02Z,2024-01-04T17:40:34Z
50260,50261,Fix [#50260] Support `:on` option in `#set_callback`,"<!-- Thanks for contributing to Rails!  Please do not make *Draft* pull requests  as they still send notifications to everyone watching the Rails repo.  Create a pull request when it is ready for review and feedback from the Rails team :).  If your pull request affects documentation or any non-code changes  guidelines for those changes are [available here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)  About this template  The following template aims to help contributors write a good description for their pull requests. We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added)  motivation behind the changes  and complete the checklist below before opening a pull request.  Feel free to discard it if you need to (e.g. when you just fix a typo). -->  ### Motivation / Background  <!-- Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important? If you are fixing a specific issue  include ""Fixes #ISSUE"" (replace with the issue number  remove the quotes) and the issue will be linked to this PR. -->  Attempts to fix https://github.com/rails/rails/issues/50260  ### Detail  Introduces `ActiveRecord::Transactions::ClassMethods#set_callback` which behaves like `ActiveSupport::Callbacks::ClassMethods#set_callback` with support for the `:on` option available on `#after_commit` and `#after_rollback` callbacks.  ### Additional information  <!-- Provide additional information such as benchmarks  reference to other repositories or alternative solutions. -->  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,activerecord/CHANGELOG.md; activerecord/lib/active_record/transactions.rb; activerecord/test/cases/transaction_callbacks_test.rb,joshuay03,2023-12-04T12:44:48Z,2024-01-12T11:30:34Z
50230,50240,[Fix #50230] Preserve serialized timezone when deserializing with `ActiveJob::Serializers::TimeWithZoneSerializer`,"<!-- Thanks for contributing to Rails!  Please do not make *Draft* pull requests  as they still send notifications to everyone watching the Rails repo.  Create a pull request when it is ready for review and feedback from the Rails team :).  If your pull request affects documentation or any non-code changes  guidelines for those changes are [available here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)  About this template  The following template aims to help contributors write a good description for their pull requests. We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added)  motivation behind the changes  and complete the checklist below before opening a pull request.  Feel free to discard it if you need to (e.g. when you just fix a typo). -->  ### Motivation / Background  <!-- Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important? If you are fixing a specific issue  include ""Fixes #ISSUE"" (replace with the issue number  remove the quotes) and the issue will be linked to this PR. -->  Fixes https://github.com/rails/rails/issues/50230  ### Detail  This Pull Request changes `ActiveJob::Serializers::TimeWithZoneSerializer` to include the time zone of the provided time with zone object in the serialized hash which is then used during deserialization.  ### Additional information  <!-- Provide additional information such as benchmarks  reference to other repositories or alternative solutions. -->  A side effect of this change is that `ActiveJob::Serializers::TimeWithZoneSerializer` now inherits directly from `ActiveJob::Serializers::ObjectSerializer` instead of `ActiveJob::Serializers::TimeObjectSerializer` in order to define it's own `#serialize`. I don't see another way to implement this while preserving the current inheritance.  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,activejob/CHANGELOG.md; activejob/lib/active_job/serializers/time_with_zone_serializer.rb; activejob/test/serializers/time_with_zone_serializer_test.rb,joshuay03,2023-12-02T06:02:46Z,2023-12-02T15:05:46Z
50226,53587,Call out pitfalls with Encryption when upgrading,"As has been noted in a few issues  upgrading from Rails to 7.1 config defaults can lead to data loss or confusion as the hash_digest_class changed from SHA1 to SHA256 but we don't by default class changed from SHA1 to SHA256 but we don't by default class changed from SHA1 to SHA256 but we don't by default class changed from SHA1 to SHA256 but we don't by default set `support_sha1_for_non_deterministic_encryption = true`.  This adds the change to the 7.0->7.1 upgrade notes and to the 7.1 release notes.  https://github.com/rails/rails/issues/48204 https://github.com/rails/rails/issues/50212 https://github.com/rails/rails/issues/50226 Further writeup: https://calebhearth.com/rails-7-1-encryption-errors   ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,guides/source/7_1_release_notes.md; guides/source/upgrading_ruby_on_rails.md,calebhearth,2024-11-10T21:49:17Z,2024-11-15T15:30:38Z
50212,53587,Call out pitfalls with Encryption when upgrading,"As has been noted in a few issues  upgrading from Rails to 7.1 config defaults can lead to data loss or confusion as the hash_digest_class changed from SHA1 to SHA256 but we don't by default class changed from SHA1 to SHA256 but we don't by default class changed from SHA1 to SHA256 but we don't by default class changed from SHA1 to SHA256 but we don't by default set `support_sha1_for_non_deterministic_encryption = true`.  This adds the change to the 7.0->7.1 upgrade notes and to the 7.1 release notes.  https://github.com/rails/rails/issues/48204 https://github.com/rails/rails/issues/50212 https://github.com/rails/rails/issues/50226 Further writeup: https://calebhearth.com/rails-7-1-encryption-errors   ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,guides/source/7_1_release_notes.md; guides/source/upgrading_ruby_on_rails.md,calebhearth,2024-11-10T21:49:17Z,2024-11-15T15:30:38Z
50189,50228,Adjusted an example to align with the documentation section on reversing a previous migration.,"<!-- Thanks for contributing to Rails!  Please do not make *Draft* pull requests  as they still send notifications to everyone watching the Rails repo.  Create a pull request when it is ready for review and feedback from the Rails team :).  If your pull request affects documentation or any non-code changes  guidelines for those changes are [available here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)  About this template  The following template aims to help contributors write a good description for their pull requests. We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added)  motivation behind the changes  and complete the checklist below before opening a pull request.  Feel free to discard it if you need to (e.g. when you just fix a typo). -->  ### Motivation / Background  <!-- Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important? If you are fixing a specific issue  include ""Fixes #ISSUE"" (replace with the issue number  remove the quotes) and the issue will be linked to this PR. -->  Fixes #50189.  There is an error in the following section [this documentation section](https://guides.rubyonrails.org/active_record_migrations.html#reverting-previous-migrations).  There is confusion between the steps   ``` 1. Reverse the order of create_table and reversible. 2. Replace create_table with drop_table. 3. Finally  replace up with down and vice-versa. ```  and the example below  I suggest modifying the example.   ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,guides/source/active_record_migrations.md,cedriccarrard,2023-12-01T10:37:48Z,2024-05-22T20:14:51Z
50187,50206,Document delegated methods in `ActiveModel::Errors` [ci skip],"### Motivation / Background  Fixes #50187  ### Detail  Some delegated methods in `ActiveModel::Errors` weren't documented. And `each` seems to have been documented without the proper RDoc syntax which would explain why it's not showing up in the docs.  ### Additional information  <!-- Provide additional information such as benchmarks  reference to other repositories or alternative solutions. -->  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [ ] Tests are added or updated if you fix a bug or add a feature. * [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,activemodel/lib/active_model/errors.rb,orhantoy,2023-11-28T21:24:45Z,2023-11-29T16:12:38Z
50168,50169,Fix generator tests on `arm64` platforms,"Follow-up to #47516 / #47492.  When running generator tests on `arm64` platforms  there is an extra `lock --add-platform` command in `@bundle_commands` which causes `assert_match %r""^exec rails ...""  @bundle_commands[2]` to fail.  However  `run_generator_using_prerelease` isn't really concerned with `lock --add-platform` commands; it is only concerned with the `install` and `exec rails` commands  and the contents of the `Gemfile` when those commands were executed.  Therefore  this commit removes `lock --add-platform` command-related assertions from `run_generator_using_prerelease` and puts them into a dedicated `test_generation_runs_bundle_lock_for_linux` test.  This approach makes `run_generator_using_prerelease` less brittle.  This change also fixes a technically incorrect assertion wherein the contents of the `Gemfile` during the `lock --add-platform` command was checked instead of the contents during the `exec rails` command.  Fixes #50168. ",closed,railties/test/generators/app_generator_test.rb; railties/test/generators/shared_generator_tests.rb,jonathanhefner,2023-11-25T22:43:34Z,2023-11-25T23:02:14Z
50160,50162,Allow `object_id` as a column name for ActiveRecord,"Fixes #50160  ### Motivation / Background  The `object_id` name may be used by polymorphic relations where `object` is the best name  like `notification.object`. In that case two columns are created: `object_id` and `object_type`.  This Pull Request has been created because we have a rails application that uses the `object` as the polymorphic relationship name  and it seems to be the best name. It was allowed until rails 7.1 and was not breaking anything.  Using the `object_id` as a column name [was explicitly allowed here](https://github.com/rails/rails/pull/38990)   ### Detail  This Pull Request removes the `object_id` from the list of not allowed column names.  For the sake of consitency  the comments and tests are updated where relevant to use the `__id__` method instead.  ### Additional information  The method `object_id` [was added to the dangerous method list here](https://github.com/rails/rails/pull/45883)  Using the `object_id` as a column name [was previously explicitly allowed here](https://github.com/rails/rails/pull/38990)   ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [ ] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,activerecord/lib/active_record/attribute_methods.rb; activerecord/test/cases/associations_test.rb,misdoro,2023-11-24T18:24:05Z,2023-11-28T14:08:25Z
50067,50069,Fix `word_wrap` with empty string,"Follow-up to #45948.  This fixes `word_wrap` to return an empty string instead of `nil` when given an empty string.  Fixes #50067. ",closed,actionview/lib/action_view/helpers/text_helper.rb; actionview/test/template/text_helper_test.rb,jonathanhefner,2023-11-15T22:22:36Z,2023-11-15T22:36:02Z
50047,50053,ActiveSupport::Deprecation handle blaming generated code,"Fix: #50047  `Backtrace::Location` instance for code generated with eval always have their `absolute_path` set to `nil`. So if absolute path is nil we should fallback to checking `#path`.  Co-Authored-By: @fatkodima   cc @jagthedrummer @gazayas.   I'll backport this to 7.1 and 7.0.",closed,activesupport/lib/active_support/deprecation/reporting.rb; activesupport/test/deprecation_test.rb,casperisfine,2023-11-14T08:54:14Z,2023-11-14T09:07:21Z
50005,50006,Fix #50005 transform_job not accepting previewables,"<!-- Thanks for contributing to Rails!  Please do not make *Draft* pull requests  as they still send notifications to everyone watching the Rails repo.  Create a pull request when it is ready for review and feedback from the Rails team :).  If your pull request affects documentation or any non-code changes  guidelines for those changes are [available here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)  About this template  The following template aims to help contributors write a good description for their pull requests. We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added)  motivation behind the changes  and complete the checklist below before opening a pull request.  Feel free to discard it if you need to (e.g. when you just fix a typo). -->  ### Motivation / Background  <!-- Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important? If you are fixing a specific issue  include ""Fixes #ISSUE"" (replace with the issue number  remove the quotes) and the issue will be linked to this PR. See #50005 for details. -->  This Pull Request has been created because the `ActiveStorage::TransformJob` crashes if you want to preprocess a previewable file like a pdf document.   ### Detail  This Pull Request changes that by determining if a blob is capable of being previewed. If so  a preview will be generated.   ### Additional information The `ActiveStorage::TransformJob` is being used when an attachment has predefined variants with the `preprocessed` option. When you upload a file which is **not** an image but a previewable file like a pdf-document this will fail with `ActiveStorage::InvariableError`.  Example: ``` has_one_attached :file do |attachable|     attachable.preview :thumb  resize_to_limit: [400  600]  preprocessed: true end ```  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Fix #50005 * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,activestorage/CHANGELOG.md; activestorage/app/jobs/active_storage/transform_job.rb; activestorage/test/jobs/transform_job_test.rb,nicowenterodt,2023-11-10T16:19:18Z,2023-11-11T17:49:11Z
49999,51219,[Fix #49999] properly reference from Arel::Attribute args,"<!-- Thanks for contributing to Rails!  Please do not make *Draft* pull requests  as they still send notifications to everyone watching the Rails repo.  Create a pull request when it is ready for review and feedback from the Rails team :).  If your pull request affects documentation or any non-code changes  guidelines for those changes are [available here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)  About this template  The following template aims to help contributors write a good description for their pull requests. We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added)  motivation behind the changes  and complete the checklist below before opening a pull request.  Feel free to discard it if you need to (e.g. when you just fix a typo). -->  ### Motivation / Background <!-- Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important? If you are fixing a specific issue  include ""Fixes #ISSUE"" (replace with the issue number  remove the quotes) and the issue will be linked to this PR. -->  Fixes #49999   ### Detail  ActiveRecord::Relation#order now properly references Arel::Attribute arguments  ### Additional information  <!-- Provide additional information such as benchmarks  reference to other repositories or alternative solutions. -->  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,activerecord/lib/active_record/relation/query_methods.rb; activerecord/test/cases/relation/order_test.rb,mylesboone,2024-02-28T23:27:21Z,2024-06-13T19:40:46Z
49999,52128,[Fix #49999] properly reference from Arel::Attribute args [7-1-stable],"### Motivation / Background  Backports #51219 to `7-1-stable`.  Fixes #49999 for 7-1-stable branch  ### Detail  ActiveRecord::Relation#order now properly references Arel::Attribute arguments   ### Additional information  <!-- Provide additional information such as benchmarks  references to other repositories  or alternative solutions. -->  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,activerecord/lib/active_record/relation/query_methods.rb; activerecord/test/cases/relation/order_test.rb,mylesboone,2024-06-14T21:28:17Z,2024-06-17T13:13:31Z
49983,52863,Deprecate ActiveStorage::Service::AzureStorageService,"Fixes: #49983  /cc @JoeDupuis ",closed,activestorage/CHANGELOG.md; activestorage/lib/active_storage/service/azure_storage_service.rb; activestorage/test/service/configurator_test.rb,zzak,2024-09-10T11:51:44Z,2024-09-11T15:59:01Z
49981,49982,[Fix #49981] Support enum definition with symbol values,"<!-- Thanks for contributing to Rails!  Please do not make *Draft* pull requests  as they still send notifications to everyone watching the Rails repo.  Create a pull request when it is ready for review and feedback from the Rails team :).  If your pull request affects documentation or any non-code changes  guidelines for those changes are [available here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)  About this template  The following template aims to help contributors write a good description for their pull requests. We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added)  motivation behind the changes  and complete the checklist below before opening a pull request.  Feel free to discard it if you need to (e.g. when you just fix a typo). -->  ### Motivation / Background  <!-- Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important? If you are fixing a specific issue  include ""Fixes #ISSUE"" (replace with the issue number  remove the quotes) and the issue will be linked to this PR. -->  This Pull Request has been created because Enum definition with symbol values are not correctly typed_casted reported here: https://github.com/rails/rails/issues/49981  Fixes #49981  ### Detail When an enum is defined with symbol values `enum :status  { draft: :draft  published: :published }` a warning or an exception could be raised to force fixing  same kind as invalid enum definition. Not sure this is the correct approach since the value is correctly persisted.  I'd expect the enum symbol value to be converted to string to allow correct type_cast.  **Actual behavior**  the type_cast of a symbol value of an enum is always returning nil.  ### Additional information   ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,activerecord/lib/active_record/enum.rb; activerecord/test/cases/enum_test.rb; activerecord/test/models/book.rb; activerecord/test/schema/schema.rb; guides/source/active_record_validations.md,jean-francois-labbe,2023-11-09T11:41:55Z,2024-10-30T15:24:17Z
49906,49908,Preload Selenium driver_path before parallelizing system tests,"### Motivation / Background  When the `webdrivers` gem is not present (which is the default scenario in Rails 7.1+)  the Selenium `driver_path` starts out as `nil`. This means the driver is located lazily  and deferred until a system test is run.  If parallel testing is used  this leads to a race condition  where each worker process tries to resolve the driver simultaneously. The result is an error as described in #49906.  ### Detail  This commit fixes the race condition by changing the implementation of `Browser#preload`. The previous implementation worked when `driver_path` was set to a Proc by the `webdrivers` gem  but doesn't work when the `webdrivers` gem is not being used and the `driver_path` is `nil`.  If the `driver_path` is `nil`  `Browser#preload` will now use the `DriverFinder` utility provided by the `selenium-webdriver` gem to eagerly resolve the driver path. This ensures that `driver_path` is set before parallel test workers are forked.  Fixes #49906.  ### Additional information  This solution mimics the code within Selenium that determines the driver executable on demand:  ``` service.executable_path ||= WebDriver::DriverFinder.path(options  service.class) ```  https://github.com/SeleniumHQ/selenium/blob/7680b7cf25579217cb62a0893c4b2b69c0186062/rb/lib/selenium/webdriver/common/local_driver.rb#L41  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,actionpack/CHANGELOG.md; actionpack/lib/action_dispatch/system_testing/browser.rb; actionpack/test/dispatch/system_testing/driver_test.rb,mattbrictson,2023-11-03T21:04:19Z,2023-11-07T17:41:13Z
49874,50251,[Fix #49874] `has_secure_token` calls the setter method on initialize,"### Motivation / Background  Fixes #49874   ### Detail  The original behavior of `has_secure_token` was to use the `send(""#{attribute}=""  some_value)` method so that the setter method  if defined  was called. PR #49146 replaced the `send` method with `write_attribute` which doesn't call the setter method and breaks existing applications.  ### Additional information  Follow-up to #49146  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,activerecord/CHANGELOG.md; activerecord/lib/active_record/secure_token.rb; activerecord/test/cases/secure_token_test.rb,abeidahmed,2023-12-03T10:40:40Z,2023-12-04T00:34:29Z
49871,49876,Add caveat about `normalizes` / `Marshal` interaction [ci-skip],"When `ActiveRecord.marshalling_format_version` is set to `6.1`  `Marshal` will try to serialize attribute types along with the model  causing a `TypeError` if the model uses `ActiveRecord::Base.normalizes` with a normalization `Proc`.  This commit adds a caveat to the `normalizes` API documentation to warn users that they should set `marshalling_format_version` to `7.1` if they are using `normalizes` and marshalling the targeted model.  Fixes #49871.  ---  @mjankowski Do you feel like this would have prevented the issue you encountered? ",closed,activerecord/lib/active_record/normalization.rb,jonathanhefner,2023-10-31T21:23:55Z,2023-11-01T01:47:02Z
49841,53861,Try to fix various flakes in AR tests,"These changes along with #53855 and I have been able to run without any failures on my machine.  ``` for i in {1..50}; do ARCONN=mysql2 MYSQL_PREPARED_STATEMENTS=true bundle exec rake test:mysql2; done ```  This is after a few days of on-and-off running this at various lengths to try and identify problematic test cases or situations that could trigger flakes.  I'm not an expert here  but I do know the scientific method. :joy: Some of the stacktraces in the commit messages could be false positives  but the point is they are gone  and I thought it's a good point to ask. So would appreciate feedback and reviews. :bow:  /cc @byroot @matthewd ",closed,activerecord/test/cases/adapters/abstract_mysql_adapter/nested_deadlock_test.rb; activerecord/test/cases/encryption/concurrency_test.rb,zzak,2024-12-06T11:17:24Z,2024-12-07T15:46:15Z
49822,49824,Use double quotes more consistenly in doc and error messages,"For better or worse  the Rails guide settled on double quotes and a large part of the community also use rubocop which enforce them by default.  So we might as well try to follow that style when providing code snippets in the documentation or error messages.  Fix: https://github.com/rails/rails/issues/49822  I certainly didn't get them all  but consistency should be significantly improved. ",closed,actionpack/lib/action_controller/template_assertions.rb; actionpack/lib/action_dispatch/middleware/templates/rescues/_source.html.erb; actionpack/lib/action_dispatch/testing/test_process.rb; activemodel/lib/active_model/secure_password.rb; activestorage/lib/active_storage/transformers/image_processing_transformer.rb; activesupport/lib/active_support/railtie.rb; activesupport/lib/active_support/xml_mini.rb; guides/source/3_1_release_notes.md; guides/source/4_2_release_notes.md; guides/source/action_view_overview.md; guides/source/active_record_postgresql.md; guides/source/active_support_core_extensions.md; guides/source/caching_with_rails.md; guides/source/configuring.md; guides/source/engines.md; guides/source/security.md; guides/source/upgrading_ruby_on_rails.md; railties/lib/rails/generators/rails/plugin/plugin_generator.rb; railties/test/generators/db_system_change_generator_test.rb; railties/test/generators/plugin_generator_test.rb; railties/test/railties/generators_test.rb; tasks/release.rb,byroot,2023-10-28T09:41:24Z,2023-10-28T09:50:31Z
49818,49856,Rename `ActionView::TestCase::Behavior::{Content RenderedViewContent}`,"### Motivation / Background  Closes #49818  ### Detail  Renames `ActionView::TestCase::Behavior::Content` to `RenderedViewContent`  with the goal of making it more of an internal implementation detail that's unlikely to collide with an application-side `::Content` class.  The `RenderedView`-prefix mirrors the module's `RenderedViewsCollection` class. Since the intention is to treat it as a private implementation detail  `RenderedViewContent` is marked with `:nodoc:`.  Along with the rename  this commit also modifies the class inheritance  replacing the `SimpleDelegator` superclass with `String`. [String.new][] accepts a `String` positional argument in the same way as `SimpleDelegator.new` accepts a delegate object positional argument. Sharing the `String` superclass also makes it a good candidate for being passed to [Capybara.string][] (and [Capybara::Node::Simple.new][]) like the documentation suggests.  [Capybara.string]: https://github.com/teamcapybara/capybara/blob/3.39.2/lib/capybara.rb#L212-L242 [Capybara::Node::Simple.new]: https://github.com/teamcapybara/capybara/blob/3.39.2/lib/capybara/node/simple.rb#L23 [String.new]: https://ruby-doc.org/core/String.html#method-c-new  ### Additional information  Is this worth backporting into a `7.1` release?  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,actionview/CHANGELOG.md; actionview/lib/action_view/test_case.rb; actionview/test/template/test_case_test.rb; guides/source/testing.md,seanpdoyle,2023-10-30T22:00:32Z,2024-01-04T19:47:38Z
49809,49832,Do not rely on `dup` in `forgetting_assignment` optimization,"Follow-up to #46282.  The purpose of the optimization from #46282 is to avoid unnecessary `deserialize` / `cast` / `serialize` calls associated with invoking `value_for_database` on an attribute that has not changed.  `dup`ing the attribute accomplishes that  but `dup`ing the attribute's value is not appropriate for some value types.  For example  a value of the type `ActiveModel::Type::ImmutableString` requires `clone` instead of `dup`  and a value of the type `ActiveRecord::Type::Json` likely requires `deep_dup`.  In some cases the only appropriate method may be `deserialize(serialize(value))`  such as when a serializer for the type `ActiveRecord::Type::Serialized` deserializes `ActiveRecord::Base` instances.  (In that case  `dup`ing the value would clear its `id`  and `clone`ing the value would only produce a shallow copy.)  However  `deserialize(serialize(value))` is expensive and would defeat the purpose of the optimization.  Instead of `dup`ing the attribute  this commit changes the optimization to use `with_value_from_database(value_before_type_cast)`  which parallels `with_value_from_database(value_for_database)` in the base implementation.  This drops the (cast) value entirely  causing a fresh copy to be deserialized if the attribute is subsequently read.  In cases where the attribute is _not_ subsequently read  this will actually be more efficient since no extra work is performed.  And in cases where the attribute _is_ subsequently read  it will still be more efficient than `deserialize(serialize(value))`.  Fixes #49809. ",closed,activemodel/lib/active_model/attribute.rb; activemodel/test/cases/attribute_test.rb,jonathanhefner,2023-10-28T21:27:42Z,2023-10-28T21:41:06Z
49796,49800,[Fix #49796] Prevent global cache options being overwritten,"### Motivation / Background  Issue https://github.com/rails/rails/issues/49796  ### Detail  During investigation of the issue above I found that `Rails.cache.fetch` in case when no options were passed as arguments passes global cache options to fetch block (wrapped in WriteOptions  but anyway)  so  global cache options will be overwritten by those manipulations.  ### Additional information  Let me know if I need to update changelog  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,activesupport/lib/active_support/cache.rb; activesupport/test/cache/behaviors/cache_store_behavior.rb,HolyWalley,2023-10-26T18:04:03Z,2023-10-26T19:11:49Z
49788,49790,ActionMailer Email Preview - show date header when present ,"### Detail  ActionMailer Email Preview - show date header when present or fallback to Time.current.rfc2822  Resolves #49788  Co-authored-by: @allisonphillips  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,railties/CHANGELOG.md; railties/lib/rails/templates/rails/mailers/email.html.erb; railties/test/application/mailer_previews_test.rb,sampatbadhe,2023-10-26T01:42:47Z,2023-11-04T21:45:08Z
49781,49802,Recover from failed connections in PostgreSQL,"Fixes https://github.com/rails/rails/issues/49781  Prior to this commit  the PostgreSQL adapter could end up holding onto a broken connection longer than expected  potentially **into the next request after the executor checkin/checkout**.  The problem is that the PostgreSQL adapter was using [two separate calls] to `with_raw_connection`  one for preparing a statement and another for executing it. That's fine before the statement is added to the statement pool  but once it the statement exists the first call to `with_raw_connection` [does not actually use the connection]. But that doesn't stop us from marking the connection as [`@verified`][verified]  thereby preventing the second `with_raw_connection` from verifying and getting a chance to reconnect.  [two separate calls]: https://github.com/rails/rails/blob/e33dbe1b3d423143685154b97ae0992f4ab821b8/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb#L910-L917 [does not actually use the connection]: https://github.com/rails/rails/blob/490b9fc22faefca30565a970a8727c915de589ff/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb#L964-L966 [verified]: https://github.com/rails/rails/blob/e33dbe1b3d423143685154b97ae0992f4ab821b8/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb#L1032  ```rb Post.first #=> prepare_statement verifies the connection (if needed) and populates the statement pool #=> exec_prepared succeeds  #=> Oops!  we lost the connection for whatever reason  Post.first #=> prepare_statement returns the statement from the statement pool  connection still marked as verified #=> exec_prepared fails  marks the connection as unverified  Post.first #=> prepare_statement returns the statement from the statement pool  marks the connection as verified!!! #=> exec_prepared fails  marks the connection as unverified  #=> request finishes  connection gets marked as unverified for the next request  Post.first #=> prepare_statement returns the statement from the statement pool  marks the connection as verified!!! #=> exec_prepared fails  marks the connection as unverified ```  The only way to recover is to execute a statement that hasn't been prepared yet  one that isn't prepared because it has no binds  or one that has `allow_retry: true` (which I think is limited to a few internal queries at the moment—we don't pass the value through to `with_raw_connection` for prepared statements anyway).  This commit fixes the problem by preparing and executing the statement within a single `with_raw_connection` block. This is what the other adapters with prepared statements already do.  It makes more sense this way—even if we managed to reconnect before executing the statement in the old code  we'd be referencing a prepared statement from a different connection  so it'd fail anyway. Having the prepare and execute in the same `with_raw_connection` means if we do need to reconnect  we'll start from the beginning and prepare the statement again on the fresh connection.  Note that this change does get rid of connection retries on preparing statements  but I think that's OK. It matches the other adapters  matches the Rails 7.0 behavior  and it's still better than ending up with a broken connection.  <!-- Thanks for contributing to Rails!  Please do not make *Draft* pull requests  as they still send notifications to everyone watching the Rails repo.  Create a pull request when it is ready for review and feedback from the Rails team :).  If your pull request affects documentation or any non-code changes  guidelines for those changes are [available here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)  About this template  The following template aims to help contributors write a good description for their pull requests. We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added)  motivation behind the changes  and complete the checklist below before opening a pull request.  Feel free to discard it if you need to (e.g. when you just fix a typo). -->  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb; activerecord/test/cases/adapter_test.rb,composerinteralia,2023-10-26T23:51:51Z,2023-11-06T06:56:12Z
49761,49782,Ignore implicit locals if not declared by templates with strict locals,"Fix: https://github.com/rails/rails/pull/49780 Fix: https://github.com/rails/rails/issues/49761  `CollectionRenderer` implictly inject `<name>_counter` and `<name>_iteration` locals  but in the overwhelming majority of cases they aren't used.  So when the rendered template has strict locals we shouldn't require these to be declared  and if they aren't we should simply not pass them.  Co-Authored-By: @HolyWalley  @HolyWalley I hope you don't mind  I directly refactored your PR to save a bit of time. Most of it was good  but I had to change the parameters parsing a bit.",closed,actionview/CHANGELOG.md; actionview/lib/action_view/renderer/collection_renderer.rb; actionview/lib/action_view/template.rb; actionview/test/template/template_test.rb,byroot,2023-10-25T15:48:15Z,2023-10-25T16:00:06Z
49717,49769,Support non-column-backed attributes for `enum`,"Follow-up to #45734.  This re-adds support for using `enum` with non-column-backed attributes while still guarding against typos in enum attribute names.  When using `enum` with a non-column-backed attribute  the attribute must be previously declared with an explicit type.  For example:    ```ruby   class Post < ActiveRecord::Base     attribute :topic  :string     enum topic: %i[science tech engineering math]   end   ```  Fixes #49717. ",closed,activerecord/lib/active_record/enum.rb; activerecord/lib/active_record/model_schema.rb; activerecord/test/cases/enum_test.rb; railties/test/application/test_test.rb,jonathanhefner,2023-10-24T16:45:38Z,2023-10-24T17:46:05Z
49689,49701,Use custom class for pending migrations connection,"In bensheldon/good_job#1103 it was reported that a connection not established is being seen when there are multiple configs for an environment (a multi-db app).  While I think that something is happening where Good Job is accessing the connection while we're checking for pending migrations  this could happen in other gems if we're clobbering the connection on `ActiveRecord::Base` that is needed.  Here we are making a special class to establish connections to the database. Because the class does not inherit from `Base` and establishes it's own connection  it won't clobber any existing connections on `Base`  leaving them in-tact while the app boots.  The reason this wasn't seen in 7.0 is because pending migrations didn't check all the available configs. Once that was fixed this error appeared.  I didn't add a test for this because it's really hard to reproduce without good job and actually booting a server and running a request.  Fixes: #49689",closed,activerecord/lib/active_record/migration.rb; activerecord/lib/active_record/migration/pending_migration_connection.rb,eileencodes,2023-10-19T16:55:54Z,2023-10-19T17:17:08Z
49670,49677,Make `==(other)` method of AttributeSet safe #49670,"The `==(other)` should be able to work with any instances without exception. To do so  we check if the other instance is an AttributeSet.  ### Detail  This Pull Request changes Fixes #49670  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,activemodel/lib/active_model/attribute_set.rb; activemodel/test/cases/attribute_set_test.rb,DmitryPogrebnoy,2023-10-17T20:54:29Z,2023-10-20T21:26:47Z
49650,49869,Fix `VideoAnalyzerTest` with FFmpeg 6.0,"FFmpeg 6.0 now reports the duration of `video_without_video_stream.mp4` as 1.000000 instead of 1.022000.  This discrepancy was [reported][] to the FFmpeg mailing list  and the [reply][] indicated that the change is intentional.  For this test  the exact duration isn't significant.  We merely want to assert that the metadata includes the duration reported by FFmpeg. Therefore  this commit changes the assertion to accomodate the duration reported by FFmpeg 6.0 as well as previous versions.  Fixes #49650.  [reported]: https://ffmpeg.org/pipermail/ffmpeg-user/2023-October/057067.html [reply]: http://ffmpeg.org/pipermail/ffmpeg-user/2023-October/057083.html ",closed,activestorage/test/analyzer/video_analyzer_test.rb,jonathanhefner,2023-10-31T16:54:47Z,2023-10-31T17:29:47Z
49588,49616,Support handling Enumerator for non-buffered responses,"The downside to this is that we cannot generate ETags for these types of responses  but are assuming that by using an enumerator they don't expect a buffered response to be cacheable. This means you cannot use Enumerator to generate streaming responses.  Fixes #49588  See also: #47092 ",closed,actionpack/lib/action_dispatch/http/response.rb; actionpack/test/dispatch/response_test.rb,zzak,2023-10-13T02:36:11Z,2023-10-13T13:11:21Z
49574,50284,Infer `:inverse_of` for `has_many ...  through:`,"### Motivation / Background  Closes [#49574][]  Issue #49574 outlines how an Active Record join model accessed through a `has_many ...  through:` association is unable to infer an appropriate `:inverse_of` association by pluralizing a predictably pluralizable class name.  ### Detail  This commit resolves that issue by also checking a model's reflections for a pluralized inverse name in addition to whatever's provided through the `:as` option or inferred in the singular.  ### Additional information  The issue shares a code sample:  ```ruby ActiveRecord::Schema.define do   create_table ""listings""  force: :cascade do |t|     t.bigint ""list_id""  null: false     t.bigint ""pin_id""  null: false   end    create_table ""lists""  force: :cascade do |t|   end    create_table ""pins""  force: :cascade do |t|   end end  class Pin < ActiveRecord::Base   has_many :listings end  class List < ActiveRecord::Base   has_many :listings   has_many :pins  through: :listings end  class Listing < ActiveRecord::Base   belongs_to :list   belongs_to :pin end  class BugTest < Minitest::Test   def test_association_stuff     list = List.create!     pin = list.pins.new      pin.save!      assert_equal [pin]  list.reload.pins     assert_equal 1  list.reload.pins.count   end end ```  Unfortunately  there isn't a one-to-one mapping in the test suite's `test/model` directory for this type of structure. The most similar associations were between the `Book`  `Subscription`  and `Subscriber`. For the sake of ease  this commit wraps the test block in a new `skipping_validations_for` helper method to ignore validations declared on the `Subscription` join table model.  [#49574]: https://github.com/rails/rails/issues/49574  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,activerecord/lib/active_record/reflection.rb; activerecord/test/cases/associations/has_one_through_disable_joins_associations_test.rb; activerecord/test/cases/associations/inverse_associations_test.rb,seanpdoyle,2023-12-06T16:25:36Z,2024-01-21T16:21:49Z
49516,49517,Fix typo in exception message re: raise_on_missing_callback_actions," ### Motivation / Background Fixes #49516  This Pull Request has been created because it clarifies instructions ",closed,actionpack/lib/abstract_controller/callbacks.rb,benstein,2023-10-06T16:53:26Z,2023-10-06T20:58:37Z
49502,49504,Fix auto populating `IDENTITY` columns for PostgreSQL,"Fixes #49502.  This bug was introduced in https://github.com/rails/rails/pull/48241. Since `IDENTITY` columns in PostgreSQL do not have defaults  they are not auto populated via the changes made in that PR. Thus we need to consider them separately.  cc @nvasilevski  ",closed,activerecord/lib/active_record/connection_adapters/postgresql/column.rb; activerecord/lib/active_record/connection_adapters/postgresql/schema_statements.rb; activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb; activerecord/test/cases/persistence_test.rb; activerecord/test/schema/postgresql_specific_schema.rb,fatkodima,2023-10-05T20:43:28Z,2023-10-09T16:42:07Z
49494,49518,Add doc to explain how to migrate to the new BroadcastLogger:,"Add doc to explain how to migrate to the new BroadcastLogger:  - This should make it easier for apps or libraries that were previously relying on the private API. Also took the opportunity to tweak the doc of the BroadcastLogger to mention what happens when calling a non-standard method.    Fix #49494  cc/ @mensfeld Hopefully this should make it clearer!",closed,activesupport/lib/active_support/broadcast_logger.rb; guides/source/upgrading_ruby_on_rails.md,Edouard-chin,2023-10-06T17:10:58Z,2023-10-07T12:56:08Z
49473,48785,Fix child association loading in `:n_plus_one_only` mode,"<!-- Thanks for contributing to Rails!  Please do not make *Draft* pull requests  as they still send notifications to everyone watching the Rails repo.  Create a pull request when it is ready for review and feedback from the Rails team :).  If your pull request affects documentation or any non-code changes  guidelines for those changes are [available here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)  About this template  The following template aims to help contributors write a good description for their pull requests. We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added)  motivation behind the changes  and complete the checklist below before opening a pull request.  Feel free to discard it if you need to (e.g. when you just fix a typo). -->  ### Motivation / Background  Fixes #49473  Strict loading in `:n_plus_one_only` mode is designed to prevent performance issues when deeply traversing associations. It allows `Person.find(1).posts`  but _not_ `Person.find(1).posts.map(&:category)`. This fix avoids the surprise that occurs when `person.posts.first` eagerly loads the whole association rather than allowing the user to manage the child association.  This fixes a serious ordering issue. Without strict loading  `person.posts.first` is guaranteed to return the first post in primary key order. On the other hand  `person.posts.load.first` is nondeterministic. The database is not guaranteed to return in a consistent order  in particular under load with other operations occurring. This is a rude surprise when trying to use `:n_plus_one_only` mode.  ### Detail  Before:  ```ruby person = Person.find(1) person.strict_loading!(mode: :n_plus_one_only) person.posts.first # SELECT * FROM posts WHERE person_id = 1; -- non-deterministic order ```  After:  ```ruby person = Person.find(1) person.strict_loading!(mode: :n_plus_one_only) person.posts.first # this is 1+1  not N+1 # SELECT * FROM posts WHERE person_id = 1 ORDER BY id LIMIT 1; ```  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,activerecord/CHANGELOG.md; activerecord/lib/active_record/associations/collection_association.rb; activerecord/lib/active_record/core.rb; activerecord/test/cases/strict_loading_test.rb,reid-rigo,2023-07-21T21:44:39Z,2024-04-19T02:00:33Z
49464,49547,"""NoMethodError: undefined method `pluralize' for an instance of Symbol"" in PrismRenderParser","### Detail  Fixes #49464  This patch fixes ""NoMethodError: undefined method `pluralize' for an instance of Symbol"" in PrismRenderParser on Ruby 3.3.  see: https://buildkite.com/rails/rails/builds/100525#018b10a0-9ed9-4c7b-b6d2-028ed05a0a04 /cc @kddnewton    ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [ ] Tests are added or updated if you fix a bug or add a feature. * [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.",closed,actionview/lib/action_view/render_parser/prism_render_parser.rb,amatsuda,2023-10-09T03:29:54Z,2023-10-09T19:06:18Z
49461,49466,`NumberHelper`: handle very large numbers,"Fixes https://github.com/rails/rails/issues/49461  Added @fatkodima as co-author.",closed,activesupport/lib/active_support/number_helper/number_converter.rb; activesupport/lib/active_support/number_helper/number_to_currency_converter.rb; activesupport/test/number_helper_test.rb,ghiculescu,2023-10-03T04:41:38Z,2023-10-03T11:06:14Z
49446,49447,"Fix `AS::MessagePack` with `ENV[""RAILS_MAX_THREADS""]`","`ENV` values are strings  so `ENV[""RAILS_MAX_THREADS""]` must be parsed as an int.  Unfortunately  `MessagePack::Factory::Pool::MemberPool` does not expose a method to check its member count  so the most we can assert is that roundtripping works as expected.  Fixes #49446. ",closed,activesupport/lib/active_support/message_pack/serializer.rb; activesupport/test/message_pack/shared_serializer_tests.rb,jonathanhefner,2023-10-01T20:23:53Z,2023-10-01T20:51:43Z
49439,49451,Ensure PG connection is configured before looking up types,"Fix: https://github.com/rails/rails/issues/49439  Because Postgres adapter types are connection dependent  we can't lookup types without first connecting to the database.  Note  this really isn't good  ideally types should be stored in the schema cache so that we don't have to extract types every time.  cc @yahonda @rafaelfranca",closed,activerecord/lib/active_record/connection_adapters/postgresql/quoting.rb; activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb,casperisfine,2023-10-02T07:47:34Z,2023-10-02T08:00:40Z
49439,49452,Ensure PG connection is configured before looking up types,"Fix: https://github.com/rails/rails/issues/49439 7.2 version of https://github.com/rails/rails/pull/49451  Because Postgres adapter types are connection dependent  we can't lookup types without first connecting to the database.  Note  this really isn't good  ideally types should be stored in the schema cache so that we don't have to extract types every time. ",closed,activerecord/lib/active_record/connection_adapters/postgresql/quoting.rb; activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb,casperisfine,2023-10-02T07:48:35Z,2023-10-02T08:05:46Z
49435,49436,rails db:drop now removes -shm and -wal sqlite files,"Dropping SQLite databases now removes the -shm and -wal files as well  if present.  Fixes #49435  @fractaledmind  I did not see you wanted to work on this 🙈 Thank you for your recent SQLite contributions ✌️ ",closed,activerecord/lib/active_record/tasks/sqlite_database_tasks.rb; activerecord/test/cases/adapters/sqlite3/sqlite_rake_test.rb,codergeek121,2023-09-29T21:42:45Z,2023-09-29T23:46:13Z
49406,49413,Document hierarchy for `retry_on` and `discard_on`,"Fixes https://github.com/rails/rails/issues/49406  I used the same wording as https://api.rubyonrails.org/classes/ActiveSupport/Rescuable/ClassMethods.html which is what these methods use internally.  ",closed,activejob/lib/active_job/exceptions.rb,ghiculescu,2023-09-28T05:01:30Z,2023-09-28T05:34:06Z
49363,49370,Upgrade guide: mention `test:prepare` enhnacements,"Fixes: https://github.com/rails/rails/issues/49363  Mentions https://github.com/rails/rails/pull/46664 in the upgrade guide. ",closed,guides/source/upgrading_ruby_on_rails.md,ghiculescu,2023-09-25T00:05:19Z,2023-09-26T16:22:16Z
49323,49325,Fix uninitialized constant error on Puma boot,"### Motivation / Background  This Pull Request has been created to fix #49323: **Puma fails to boot in production with default config due to missing `Concurrency` constant (Rails 7.1.0.beta1)**  ### Detail  Before  using the default `puma/config.rb` generated by `rails new`  Puma would fail to boot in production with this error:  ``` ./config/puma.rb:16:in `block in _load_from': uninitialized constant Puma::DSL::Concurrent (NameError) 	from ./config/puma.rb:16:in `fetch' 	from ./config/puma.rb:16:in `_load_from' ```  This was because `Concurrent.physical_processor_count` was being referenced before the `Concurrent` constant was initialized.  Fix by requiring `concurrent-ruby` just before the `Concurrent` constant is needed.  Fixes #49323  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] ~~Tests are added or updated if you fix a bug or add a feature.~~ The [original PR](https://github.com/rails/rails/pull/46838) that introduced `Concurrent.physical_processor_count` did not have any tests * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,railties/CHANGELOG.md; railties/lib/rails/generators/rails/app/templates/config/puma.rb.tt,mattbrictson,2023-09-20T00:22:02Z,2023-09-20T15:57:05Z
49274,49299,Loosen test condition `Arel::Nodes::Node` descendants,"Dependent gems using this test suit may override further the default methods.  Fixes #49274 ",closed,activerecord/test/cases/arel/nodes_test.rb,BuonOmo,2023-09-16T04:22:20Z,2023-09-16T18:45:01Z
49210,49211,Exclude pids  storage directories in dockerignore,"Fix #49210  <!-- Thanks for contributing to Rails!  Please do not make *Draft* pull requests  as they still send notifications to everyone watching the Rails repo.  Create a pull request when it is ready for review and feedback from the Rails team :).  If your pull request affects documentation or any non-code changes  guidelines for those changes are [available here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)  About this template  The following template aims to help contributors write a good description for their pull requests. We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added)  motivation behind the changes  and complete the checklist below before opening a pull request.  Feel free to discard it if you need to (e.g. when you just fix a typo). -->  ### Motivation / Background  <!-- Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important? If you are fixing a specific issue  include ""Fixes #ISSUE"" (replace with the issue number  remove the quotes) and the issue will be linked to this PR. -->  This Pull Request has been created because pids and storage directories are not being excluded in dockerignore  ### Detail  This Pull Request changes the dockerignore template  ### Additional information  <!-- Provide additional information such as benchmarks  reference to other repositories or alternative solutions. -->  https://community.fly.io/t/app-deployment-getting-stuck-at-pushing-image-to-fly/15140/17  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` ",closed,railties/lib/rails/generators/rails/app/templates/dockerignore.tt,rubys,2023-09-09T14:21:04Z,2023-09-09T18:28:45Z
49143,49159,Load ambient fixtures for `ActiveRecordMessagePackTest`,"`ActiveRecordMessagePackTest` does not use any fixtures  but fixtures that were previously loaded without preserving referential integrity can affect query results.  For example  if previous tests load `:comments` fixtures but not `:posts` fixtures  there will be `Comment` records in the database with `post_id = 1` but no corresponding `Post` record. Then  when a `Post` is created in `ActiveRecordMessagePackTest`  its `comments` association will accidentally include those prior `Comment` records.  This commit loads ambient fixtures for the relevant models in `ActiveRecordMessagePackTest` to prevent such accidental results.  Fixes #49143. ",closed,activerecord/test/cases/message_pack_test.rb,jonathanhefner,2023-09-05T18:37:21Z,2023-09-05T18:56:08Z
49128,49416,Fix RenderCallExtractor to be compatible with Ruby 3.3,"Fix: https://github.com/rails/rails/issues/49128 Ref: https://github.com/ruby/ruby/commit/45cd011d73  We need to unwrap some nodes. ",closed,actionview/lib/action_view/ripper_ast_parser.rb,casperisfine,2023-09-28T12:35:57Z,2023-09-28T15:57:24Z
49055,49056,[Fix #49055] Raise an `ArgumentError` when `#accepts_nested_attributes_for` is redeclared for an association,"<!-- Thanks for contributing to Rails!  Please do not make *Draft* pull requests  as they still send notifications to everyone watching the Rails repo.  Create a pull request when it is ready for review and feedback from the Rails team :).  If your pull request affects documentation or any non-code changes  guidelines for those changes are [available here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)  About this template  The following template aims to help contributors write a good description for their pull requests. We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added)  motivation behind the changes  and complete the checklist below before opening a pull request.  Feel free to discard it if you need to (e.g. when you just fix a typo). -->  ### Motivation / Background  <!-- Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important? If you are fixing a specific issue  include ""Fixes #ISSUE"" (replace with the issue number  remove the quotes) and the issue will be linked to this PR. -->  This Pull Request has been created to fix https://github.com/rails/rails/issues/49055.  ### Detail  This Pull Request changes `ActiveRecord::NestedAttributes#accepts_nested_attributes_for` to raise an `ArgumentError` when it has already been declared for an association **in the same class**. There is a use case for overriding this in subclasses  that functionality is unchanged.  ### Additional information  <!-- Provide additional information such as benchmarks  reference to other repositories or alternative solutions. -->  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,activerecord/CHANGELOG.md; activerecord/lib/active_record/nested_attributes.rb; activerecord/test/cases/nested_attributes_test.rb,joshuay03,2023-08-28T06:38:38Z,2023-09-06T15:47:41Z
48973,48977,Fix `webdrivers` on `7-0-stable` branch for issue #48973.,"<!-- Thanks for contributing to Rails!  Please do not make *Draft* pull requests  as they still send notifications to everyone watching the Rails repo.  Create a pull request when it is ready for review and feedback from the Rails team :).  If your pull request affects documentation or any non-code changes  guidelines for those changes are [available here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)  About this template  The following template aims to help contributors write a good description for their pull requests. We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added)  motivation behind the changes  and complete the checklist below before opening a pull request.  Feel free to discard it if you need to (e.g. when you just fix a typo). -->  ### Motivation / Background  <!-- Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important? If you are fixing a specific issue  include ""Fixes #ISSUE"" (replace with the issue number  remove the quotes) and the issue will be linked to this PR. -->  This Pull Request has been created because #48973   ### Detail  This Pull Request changes the requirement for `webdrivers` gem.  ### Additional information  <!-- Provide additional information such as benchmarks  reference to other repositories or alternative solutions. -->  ### Checklist  Before submitting the PR make sure the following are checked:  * [ ] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [ ] Tests are added or updated if you fix a bug or add a feature. * [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,Gemfile; Gemfile.lock; actionpack/lib/action_dispatch/system_testing/browser.rb; ci/qunit-selenium-runner.rb; railties/CHANGELOG.md; railties/lib/rails/generators/rails/app/templates/Gemfile.tt,ruyrocha,2023-08-19T02:37:47Z,2023-08-23T19:45:16Z
48938,48952,Fix CacheStore#write_multi with Redis::Distributed+ConnectionPool,"### Motivation / Background  When RedisCacheStore uses a connection pool  `RedisCacheStore#mset_capable?` would always return true due to the class-check here: https://github.com/rails/rails/blame/a844773245e96de8a47d24df76747cdc9e4aa01f/activesupport/lib/active_support/cache/redis_cache_store.rb#L315  In Rails 7.0.7  collection caching [started using write_multi](https://github.com/rails/rails/pull/48645). If you're using Redis::Distributed with a connection pool  it'll then raise `MAPPED_MSET cannot be used in Redis::Distributed because the keys involved need to be on the same server or because we cannot guarantee that the operation will be atomic.`.    ### Detail  This Pull Request changes the class-check to handle connection pools  so that mget/mset_capable are set appropriately based on the underling class. I've also added another subclass of RedisCacheStoreCommonBehaviorTest  this one using distributed-redis + a connection pool  to try & get some more coverage there.  ( ~I also wanted to point out that I've [disabled a test there](https://github.com/rails/rails/pull/48952/commits/afa6a6ba3bd68a32bdb4b9a506a5819a15437ae4#diff-6cbd9119d9ff9196372e53699cb973838036a376995cf32e4c0c5d6584520d6aR277) because `delete_multi` returns the incorrect number of deletions when using Redis::Distributed.~  Can no longer reproduce the failure  think I must have been confused)  ### Additional information  I'd originally looked at [fixing this upstream in redis-rb](https://github.com/redis/redis-rb/pull/1215) to add mset support to Redis::Distributed  and then started looking at replacing RedisCacheStore's use of Redis::Distributed with a new wrapper-class that could handle the sharding itself. I think this fix might be a better option in the short-term though  as a small fix to 7-0-stable.  I don't believe the same fix is needed on main because that no-longer uses mset_capable (https://github.com/rails/rails/commit/f9fce850da754daca5274f402b7b6dc77c7489b9). It might be worth adding the extra test coverage from the new RedisCacheStoreWithDistributedRedisTest though - any preferences how that's done?  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,activesupport/CHANGELOG.md; activesupport/lib/active_support/cache/redis_cache_store.rb; activesupport/test/cache/stores/redis_cache_store_test.rb,jdelStrother,2023-08-16T13:19:53Z,2023-08-17T12:04:35Z
48925,49101,"[Fix #48925] fix ""class_name"" required for STI class","### Motivation / Background  Fix: #48925 @matthewd  ### Detail  This Pull Request add safe navigation operator in the has_column? function   ### Checklist  Before submitting the PR make sure the following are checked:  * [ ] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [ ] Tests are added or updated if you fix a bug or add a feature. * [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,activerecord/lib/active_record/table_metadata.rb,xfifix,2023-09-01T09:01:35Z,2023-09-01T10:07:31Z
48922,48923,[Fix #48922] Honour encrypted attribute context in encrypted_attribute?,"<!-- Thanks for contributing to Rails!  Please do not make *Draft* pull requests  as they still send notifications to everyone watching the Rails repo.  Create a pull request when it is ready for review and feedback from the Rails team :).  If your pull request affects documentation or any non-code changes  guidelines for those changes are [available here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)  About this template  The following template aims to help contributors write a good description for their pull requests. We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added)  motivation behind the changes  and complete the checklist below before opening a pull request.  Feel free to discard it if you need to (e.g. when you just fix a typo). -->  ### Motivation / Background  This Pull Request has been created to fix https://github.com/rails/rails/issues/48922.  ### Detail  The helper `encrypted_attribute?` currently delegates the check to the global default encryptor configured  cf  https://github.com/rails/rails/blob/e0a55b038f7f2f50d1467876558be183be6cedaa/activerecord/lib/active_record/encryption/encryptable_record.rb#L145-L148  This Pull Request delegates the check to the EncryptedAttributeType instance defined for the attribute instead. This attribute type properly applies context properties defined initially with `encrypts`  such as a custom encryptor or message serializer.  This fixes an issue where the `encrypted_attribute?` helper would return erroneous results.  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,activerecord/CHANGELOG.md; activerecord/lib/active_record/encryption/encryptable_record.rb; activerecord/lib/active_record/encryption/encrypted_attribute_type.rb; activerecord/test/cases/encryption/encryption_schemes_test.rb,maximerety,2023-08-10T15:21:02Z,2024-01-05T18:01:26Z
48862,49040,Improve #select with Hash argument to be more consistent with #where,"Fix: https://github.com/rails/rails/issues/48862  ### Motivation / Background  I created this to fix the issues raised in [48862](https://github.com/rails/rails/issues/48862).   The problem the User was facing was trying to use an alias within select using a hash.  Due to extra aliasing taking place the queries were unsuccessful.  ### Detail  I add a check into the `Hash` block of the `case` statement to check if the `Relation` object includes the current `key` in it's `:joins` array.  If so  I then create a reference to it and store it in the `Relation` `references_values` attribute.  This then allows the query to be aware of the table alias as it goes to `make_constraints`.  Once available in this method it will then use the table alias as an alias in `aliased_table_for` instead of the reflection's table name.  This allows for a successful use of the User's table alias instead of Rails creating one.  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,activerecord/lib/active_record/relation/query_methods.rb; activerecord/test/cases/relation/select_test.rb,paulreece,2023-08-25T21:39:45Z,2023-08-26T09:34:43Z
48794,48796,Fix `#previously_new_record?` on destroyed records,"### Motivation / Background  Ref: #48794 cc @eizengan  Based on the [documentation](https://api.rubyonrails.org/classes/ActiveRecord/Persistence.html#method-i-previously_new_record-3F) for `#previously_new_record?`: > Returns true if this object was just created – that is  prior to the last save  the object didn't exist in the database and new_record? would have returned true.  IMO a record that was previously created and has since been destroyed and removed from the database should no longer be considered ""just created""  although one could argue that a `DELETE` is different from a ""save"".  ### Detail  Set `@previously_new_record` to `false` in `#destroy` and `#delete` methods.  ### Checklist  Before submitting the PR make sure the following are checked:  * [X] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [X] Tests are added or updated if you fix a bug or add a feature. * [X] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.  ",closed,activerecord/CHANGELOG.md; activerecord/lib/active_record/persistence.rb; activerecord/test/cases/base_test.rb,adrianna-chang-shopify,2023-07-24T18:59:06Z,2023-07-25T20:55:34Z
48770,49475,Implement `HashWithIndifferentAccess#to_proc`,"Previously  calling `#to_proc` on `HashWithIndifferentAccess` object used inherited `#to_proc` method from the `Hash` class  which was not able to access values using indifferent keys.  Fixes #48770. ",closed,activesupport/CHANGELOG.md; activesupport/lib/active_support/hash_with_indifferent_access.rb; activesupport/test/hash_with_indifferent_access_test.rb,fatkodima,2023-10-03T18:30:45Z,2023-10-04T07:56:58Z
48748,48751,Fix serialization of non-ASCII-only bare strings,"To use a binary-encoded string as a byte buffer  appended strings should be force-encoded as binary.  Otherwise  appending a non-ASCII-only string will raise `Encoding::CompatibilityError`.  Fixes #48748. ",closed,activesupport/lib/active_support/cache/serializer_with_fallback.rb; activesupport/test/cache/serializer_with_fallback_test.rb,jonathanhefner,2023-07-17T18:05:23Z,2023-07-17T18:18:05Z
48713,48715,Clarify comment about debug log level.,"  ### Motivation / Background  I believe the previous phrasing could be interpreted ambiguously. See discussion in #48713 ### Detail  n/a  ### Additional information  n/a  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,railties/lib/rails/generators/rails/app/templates/config/environments/production.rb.tt,jcoyne,2023-07-11T15:27:04Z,2023-07-19T17:34:08Z
48710,48717,Re-establish connection at end of test,"Fix flaky tests where we needed to re-establish the connection after removing it at the end of the test.  Fixes #48710",closed,activerecord/test/cases/connection_adapters/connection_handler_test.rb,eileencodes,2023-07-11T16:46:26Z,2023-07-11T17:09:55Z
48688,49847,[Fix #48688] Duplicate callback execution when child autosaves parent with `has_one` and `belongs_to`,"<!-- Thanks for contributing to Rails!  Please do not make *Draft* pull requests  as they still send notifications to everyone watching the Rails repo.  Create a pull request when it is ready for review and feedback from the Rails team :).  If your pull request affects documentation or any non-code changes  guidelines for those changes are [available here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)  About this template  The following template aims to help contributors write a good description for their pull requests. We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added)  motivation behind the changes  and complete the checklist below before opening a pull request.  Feel free to discard it if you need to (e.g. when you just fix a typo). -->  ### Motivation / Background  <!-- Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important? If you are fixing a specific issue  include ""Fixes #ISSUE"" (replace with the issue number  remove the quotes) and the issue will be linked to this PR. -->  Fixes https://github.com/rails/rails/issues/48688  ### Detail  This Pull Request updates `ActiveRecord::AutosaveAssociation#save_has_one_association` and `ActiveRecord::AutosaveAssociation#validate_single_association` to return early and not re-save the child record via autosave if the inverse association (`belongs_to`) has already set the child target  which happens after the child has been saved.  ### Additional information  <!-- Provide additional information such as benchmarks  reference to other repositories or alternative solutions. -->  Some additional context in https://github.com/rails/rails/issues/48688#issuecomment-1774942159.  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,activerecord/CHANGELOG.md; activerecord/lib/active_record/autosave_association.rb; activerecord/test/cases/autosave_association_test.rb; activerecord/test/models/eye.rb,joshuay03,2023-10-30T12:39:11Z,2024-07-08T17:00:48Z
48687,48708,Remove connected? check from db_runtime payload,"The check for `Base.connected?` was added in https://github.com/rails/rails/commit/4ecdf24bdedfdd1cca1f079259ff2490e2074067. At the time this change was made  we were calling `Base.connection.reset_runtime` so it made sense to check if the database was connected. Since https://github.com/rails/rails/commit/dd61a817dea85990f13664d74bca15bc5796b76e we have stored that information in a thread instead  negating the need to check `Base.connected?`.  The problem with checking `Base.connected?` is that in a multi-db application this will return `false` for any model running a query not inheriting from `Base`  leaving the `db_runtime` payload `nil`. Since the information we need is stored in a thread rather than on the connection directly we can remove the `Base.connected?` check.  Fixes #48687",closed,activerecord/lib/active_record/railties/controller_runtime.rb,eileencodes,2023-07-10T15:25:07Z,2023-07-10T15:44:34Z
48664,48670,Fix flaky time test,"A combination of 3 tests using the `Topic` model and working with timezones would cause the time test to fail. I noticed that one of the tests required to reproduce changes the configured timezone for `Topic` but doesn't reset column information. Adding that fixes the flaky test.  Fixes #48664 ",closed,activerecord/test/cases/yaml_serialization_test.rb,eileencodes,2023-07-05T19:44:46Z,2023-07-05T20:06:31Z
48652,48730,Eagerly cast serialized query attributes,"Fix: https://github.com/rails/rails/issues/48652 Ref: https://github.com/rails/rails/pull/46048 Ref: https://github.com/rails/rails/issues/46044 Ref: https://github.com/rails/rails/pull/34303 Ref: https://github.com/rails/rails/pull/39160 Close: https://github.com/rails/rails/pull/48705  This deep_dup was introduced to prevent the value stored in the query cache to be later mutated.  The problem is that `ActiveRecord::Base#dup` will return a copy of the record but with the primary key set to nil. One could argue that `#dup` shouldn't behave this way  but I think this ship has sailed (or has it?).  My initial fix was to instead always call `type.cast` eagerly so that we'd dup serialized types in a more correct way. However there is a test that explictly ensure this doesn't happen: https://github.com/rails/rails/pull/39160  The reason isn't 100% clear to me  but if I get it correctly  it's to avoid a potentially costly operation upfront.  So instead we only eagerly cast serialized attributes only  so protect against future mutations.  Mutable types are still deep duped. ",closed,activemodel/lib/active_model/type/helpers/mutable.rb; activemodel/lib/active_model/type/value.rb; activerecord/lib/active_record/relation/predicate_builder.rb; activerecord/lib/active_record/relation/query_attribute.rb; activerecord/lib/active_record/type/serialized.rb; activerecord/test/cases/query_cache_test.rb,casperisfine,2023-07-13T09:03:40Z,2023-07-13T09:58:34Z
48611,48645,Fix Action View collection caching to store fragments as bare strings,"Ref: https://github.com/rails/rails/issues/48611  Individual fragments have been cached as bare string since forever  but somehow fragment cached via collection caching were stored as `ActionView::OutputBuffer` instances.  This is both bad for performance  but also can cause issues on Rails upgrades if the internal representation of `AV::OutputBuffer` changes.  I think we should consider this PR as a bug fix  and backport it accordingly.  cc @matthewd  @matthutchinson  @skipkayhil ",closed,actionview/lib/action_view/renderer/partial_renderer/collection_caching.rb; actionview/test/activerecord/multifetch_cache_test.rb,casperisfine,2023-07-04T13:16:17Z,2023-07-05T10:14:23Z
48605,48659,Fix test flakiness introduced in encryption tests,"This fixes some flakiness I introduced with 4f365720d1b87b7a8fe7d8d77c157b63d853e334.  We'll make sure we eager load all the encrypted attribute types declared before tests start  to prevent local encryption settings changes in tests from interfering with other tests.  Kudos to @p8 for tracking this one down and seeing how to fix it. This PR is just a generalization of his solution from #48641.  I'm sorry I missed this one with that commit 🙏.  Fixes #48605 Closes #48641  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. ",closed,activerecord/test/cases/encryption/encryption_schemes_test.rb; activerecord/test/cases/encryption/helper.rb,jorgemanrubia,2023-07-05T08:53:35Z,2023-07-05T09:48:06Z
48561,48566,Fix error ActiveJob passed class with `permitted?`,"### Motivation / Background  Fixes #48561  ### Detail  This Pull Request fixes an error being raised when providing a class argument to ActiveJob for classes that implement `permitted?`.   This code path is primarily intended for instances of `ActionController::Parameters`. However an application could define `permitted?` for it's own purposes resulting in an error. Adding the additional `to_h` narrows the criteria and in the event another type besides `Parameters` is passed will ensure it quacks right.  Co-authored-by: @sampatbadhe  ",closed,activejob/lib/active_job/arguments.rb; activejob/test/cases/argument_serialization_test.rb,abaldwin88,2023-06-23T14:31:41Z,2023-06-23T19:56:54Z
48547,48560,Fix parallel testing (issue #48547),"Fixes 2 bugs in parallel testing.  The first bug was related to changes made in #45450 which meant that we were no longer replacing the connection in parallel testing because the config object is equal (we simply merge a new db name but the object id of the config stays the same). This bug only manifested in mysql and sqlite3 interestingly. It would fail on the internal metadata tables because they were missing in the schema version check.  To fix this I introduced a `clobber: true` kwarg onto the connection handler that allowsus to bypass the functionality that won't make a new connection if the config is the same. This is an easy way to fall back to the old behavior from before this change.  After implementing this fix I was still seeing failures in the mysql demo app I made due to the fact that `purge` was not re-establishing the connection to a config that had a database defined. Neither sqlite3 or postgresql were missing this.  I added a test for mysql2 so we don't have regressions in the future. I think this was missed because sqlite3 only demonstrates the bug if it was never successful on that worker and postgresql was fine.  Fixes #48547  cc/ @matthutchinson",closed,activerecord/lib/active_record/connection_adapters/abstract/connection_handler.rb; activerecord/lib/active_record/tasks/database_tasks.rb; activerecord/lib/active_record/tasks/mysql_database_tasks.rb; activerecord/test/cases/adapters/mysql2/mysql2_rake_test.rb; activerecord/test/cases/adapters/trilogy/trilogy_rake_test.rb; activerecord/test/cases/tasks/database_tasks_test.rb; railties/test/application/test_runner_test.rb; railties/test/isolation/abstract_unit.rb,eileencodes,2023-06-22T14:54:18Z,2023-07-05T15:06:52Z
48535,49050,[Fix #48535]: fix behavior of `proc_for_binds` in `Arel::Nodes::HomogenousIn`,"### Motivation / Background This PR addresses the issues #48535 and #48072.  With the introduction of PR #41068  an unintended behavior surfaced  causing the `proc_for_binds` to apply casting to attributes that were already casted. Consequently  this led to the malfunctioning of queries  as noted in the referenced issues.  This commit fixes the issue by replacing the type with `ActiveModel::Type.default_value` so that the 2nd serialization is effectively a no-op. This correction has obviated the need for changes such as ""Fix deterministic queries that were broken after #41068 "" as detailed in [this commit](https://github.com/wbotelhos/rails/commit/37361bfb4222c5d210f11e48ecee46b05ea7d50e). These changes had inadvertently caused the tests initially intended for `proc_for_binds` within `HomogeneousIn` to erroneously evaluate the `proc_for_binds` within `InWithAdditionalValues`. This resulted in false positives whenever adjustments were made to the `proc_for_binds` within `HomogeneousIn`.  Fixes #48072. Fixes #48535.  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,activerecord/CHANGELOG.md; activerecord/lib/active_record/encryption/extended_deterministic_queries.rb; activerecord/lib/arel/nodes/homogeneous_in.rb; activerecord/test/cases/serialized_attribute_test.rb,JohnAnon9771,2023-08-27T14:57:07Z,2023-11-09T21:38:21Z
48524,48527,Disallow `id` as an enum value in Active Record,"Fixes https://github.com/rails/rails/issues/48524  The test case in the issue breaks because `value.respond_to?(:id)` returns true [here](https://github.com/rails/rails/blob/51f2e2f80b86e0c3769cf5272b7d97035730f19d/activerecord/lib/active_record/relation/predicate_builder.rb#L58). This effectively adds a default scope to queries where it shouldn't.  There might be a way to fix this in Active Record but I'd be surprised if nothing else breaks from defining `id` instance and class methods. I think it is simpler to not allow it as a value since it really should be treated as a reserved method.  You can use `_prefix: true` to work around this if you want to use `id` as a value.",closed,activerecord/lib/active_record/enum.rb; activerecord/test/cases/enum_test.rb,ghiculescu,2023-06-20T01:17:48Z,2023-06-20T02:36:43Z
48517,48553,Allow opting in/out of `Link preload` headers when calling `stylesheet_link_tag` or `javascript_include_tag`,"Fixes https://github.com/rails/rails/issues/48517  ```ruby # will exclude header  even if config is enabled: javascript_include_tag(""http://example.com/all.js""  preload_links_header: false)  # will include header  even if config is disabled: stylesheet_link_tag(""http://example.com/all.css""  preload_links_header: true) ``` ",closed,actionview/CHANGELOG.md; actionview/lib/action_view/helpers/asset_tag_helper.rb; actionview/test/template/asset_tag_helper_test.rb,ghiculescu,2023-06-22T02:14:29Z,2023-06-30T20:40:03Z
48485,48494,Support beginless and endless ranges in `to_fs`,"Fixes https://github.com/rails/rails/issues/48485 ",closed,activesupport/lib/active_support/core_ext/range/conversions.rb; activesupport/test/core_ext/range_ext_test.rb,ghiculescu,2023-06-16T06:35:34Z,2023-06-17T09:36:14Z
48483,48493,Use `SHA256` digest instead of `MD4` that is legacy in OpenSSL 3,"### Motivation / Background  Fix #48483  ### Detail  This pull request updates the MD4 digest used in `MessageEncryptorsTest` because OpenSSL 3 moves `MD4` digests as legacy provider.  [Major changes between OpenSSL 3.0.0 and OpenSSL 3.0.1 [14 Dec 2021] ](https://www.openssl.org/news/openssl-3.0-notes.html ) > Moved the EVP digests MD2  MD4  MDC2  WHIRLPOOL and RIPEMD-160 to the legacy provider.  Since Rails CI migrates from Debian 11 ""bullseye"" based Ruby 3.1 and 3.2 images to Debian 12 ""bookworm"" based ones  that supports OpenSSL 3  `MessageEncryptorsTest` raises `EVP_DigestSignInit: unsupported (OpenSSL::HMACError)` and `Digest initialization failed: initialization error (OpenSSL::Digest::DigestError)`  https://packages.debian.org/bookworm/openssl > Package: openssl (3.0.9-1)  ### Additional information  `SHA256` is listed as `Provided:` via `openssl list -digest-algorithms` output  so it is safe to use `SHA256` digest in the `MessageEncryptorsTest`.  ```   { 2.16.840.1.101.3.4.2.1  SHA-256  SHA2-256  SHA256 } @ default ```  ``` $ openssl version OpenSSL 3.0.8 7 Feb 2023 (Library: OpenSSL 3.0.8 7 Feb 2023) $ openssl list -digest-algorithms Legacy:   RSA-MD4 => MD4   RSA-MD5 => MD5   RSA-RIPEMD160 => RIPEMD160   RSA-SHA1 => SHA1   RSA-SHA1-2 => RSA-SHA1   RSA-SHA224 => SHA224   RSA-SHA256 => SHA256   RSA-SHA3-224 => SHA3-224   RSA-SHA3-256 => SHA3-256   RSA-SHA3-384 => SHA3-384   RSA-SHA3-512 => SHA3-512   RSA-SHA384 => SHA384   RSA-SHA512 => SHA512   RSA-SHA512/224 => SHA512-224   RSA-SHA512/256 => SHA512-256   RSA-SM3 => SM3   BLAKE2b512   BLAKE2s256   id-rsassa-pkcs1-v1_5-with-sha3-224 => SHA3-224   id-rsassa-pkcs1-v1_5-with-sha3-256 => SHA3-256   id-rsassa-pkcs1-v1_5-with-sha3-384 => SHA3-384   id-rsassa-pkcs1-v1_5-with-sha3-512 => SHA3-512   MD4   md4WithRSAEncryption => MD4   MD5   MD5-SHA1   md5WithRSAEncryption => MD5   ripemd => RIPEMD160   RIPEMD160   ripemd160WithRSA => RIPEMD160   rmd160 => RIPEMD160   SHA1   sha1WithRSAEncryption => SHA1   SHA224   sha224WithRSAEncryption => SHA224   SHA256   sha256WithRSAEncryption => SHA256   SHA3-224   SHA3-256   SHA3-384   SHA3-512   SHA384   sha384WithRSAEncryption => SHA384   SHA512   SHA512-224   sha512-224WithRSAEncryption => SHA512-224   SHA512-256   sha512-256WithRSAEncryption => SHA512-256   sha512WithRSAEncryption => SHA512   SHAKE128   SHAKE256   SM3   sm3WithRSAEncryption => SM3   ssl3-md5 => MD5   ssl3-sha1 => SHA1   whirlpool Provided:   { 2.16.840.1.101.3.4.2.10  SHA3-512 } @ default   { 1.3.6.1.4.1.1722.12.2.2.8  BLAKE2S-256  BLAKE2s256 } @ default   { 1.2.156.10197.1.401  SM3 } @ default   { 2.16.840.1.101.3.4.2.8  SHA3-256 } @ default   { 2.16.840.1.101.3.4.2.7  SHA3-224 } @ default   { 2.16.840.1.101.3.4.2.2  SHA-384  SHA2-384  SHA384 } @ default   { 2.16.840.1.101.3.4.2.3  SHA-512  SHA2-512  SHA512 } @ default   { 2.16.840.1.101.3.4.2.5  SHA-512/224  SHA2-512/224  SHA512-224 } @ default   { 2.16.840.1.101.3.4.2.12  SHAKE-256  SHAKE256 } @ default   { 2.16.840.1.101.3.4.2.1  SHA-256  SHA2-256  SHA256 } @ default   { 1.3.14.3.2.26  SHA-1  SHA1  SSL3-SHA1 } @ default   { 2.16.840.1.101.3.4.2.9  SHA3-384 } @ default   { 2.16.840.1.101.3.4.2.11  SHAKE-128  SHAKE128 } @ default   MD5-SHA1 @ default   { 1.3.36.3.2.1  RIPEMD  RIPEMD-160  RIPEMD160  RMD160 } @ default   { 1.2.840.113549.2.5  MD5  SSL3-MD5 } @ default   { 2.16.840.1.101.3.4.2.4  SHA-224  SHA2-224  SHA224 } @ default   { 1.3.6.1.4.1.1722.12.2.1.16  BLAKE2B-512  BLAKE2b512 } @ default   { 2.16.840.1.101.3.4.2.6  SHA-512/256  SHA2-512/256  SHA512-256 } @ default   { KECCAK-KMAC-128  KECCAK-KMAC128 } @ default   { KECCAK-KMAC-256  KECCAK-KMAC256 } @ default   NULL @ default $ ```   ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,activesupport/test/rotation_coordinator_tests.rb,yahonda,2023-06-16T04:43:52Z,2023-06-16T04:57:52Z
48477,48542,Introduce `ActionMailer::FormBuilder`,"ref: https://github.com/rails/rails/issues/48477  Using forms inside emails is not common  but it's possible  and it's also possible to share views between controllers and mailers. Currently if a controller sets a `default_form_builder` that's different from the global config  mailers that use the same views will not default to the same `FormBuilder`. To fix this  this PR adds a `default_form_builder` method for mailers that does the same thing as its controller sibling. ",closed,actionmailer/CHANGELOG.md; actionmailer/lib/action_mailer.rb; actionmailer/lib/action_mailer/base.rb; actionmailer/lib/action_mailer/form_builder.rb; actionmailer/test/fixtures/form_builder_mailer/welcome.html.erb; actionmailer/test/form_builder_test.rb; actionmailer/test/mailers/form_builder_mailer.rb,ghiculescu,2023-06-21T08:18:50Z,2023-09-25T21:27:38Z
48402,48405,Stop appending preload links once the head is already 1kB,"Fix: https://github.com/rails/rails/issues/48402  Some HTTP client and proxies have a 4kiB header limit  but more importantly including preload links has diminishing returns so it's best to not go overboard  1kB worth of preload links should be plenty.  cc @nateberkopec ",closed,actionview/CHANGELOG.md; actionview/lib/action_view/helpers/asset_tag_helper.rb; actionview/test/template/asset_tag_helper_test.rb,casperisfine,2023-06-06T12:21:40Z,2023-06-07T09:19:35Z
48398,48631,Disable database prepared statements when query logs are enabled,"Fixes #48398  Prepared Statements and Query Logs are incompatible features due to query logs making every query unique.  Marginalia [explains](https://github.com/basecamp/marginalia#prepared-statements) the situation pretty well:  > Be careful when using Marginalia with prepared statements. If you use a component like request_id then every query will be unique and so ActiveRecord will create a new prepared statement for each potentially exhausting system resources. Disable prepared statements if you wish to use components with high cardinality values.",closed,activerecord/CHANGELOG.md; activerecord/lib/active_record.rb; activerecord/lib/active_record/connection_adapters/abstract_adapter.rb; activerecord/lib/active_record/railtie.rb; activerecord/test/cases/adapter_test.rb; guides/source/configuring.md; railties/test/application/query_logs_test.rb,zzak,2023-07-03T08:00:30Z,2023-07-03T10:39:34Z
48352,48381,Eagerly validate pool arguments in Redis and MemCache stores,"Fix: https://github.com/rails/rails/issues/48352  While we should ensure instantiating the store doesn't immediately attempt to connect  we should eagerly process arguments so that if they are somehow invalid we fail early during boot rather than at runtime.  Additionally  since it's common to get pool parameters from environment variable  we can use `Integer` and `Float` so that string representations are valid. ",closed,activesupport/lib/active_support/cache.rb; activesupport/lib/active_support/cache/mem_cache_store.rb; activesupport/lib/active_support/cache/redis_cache_store.rb; activesupport/test/cache/stores/mem_cache_store_test.rb; activesupport/test/cache/stores/redis_cache_store_test.rb,casperisfine,2023-06-02T13:18:26Z,2023-06-02T14:29:59Z
48330,48416,Add tests around has_one changing the target and validators,"Ref: https://github.com/rails/rails/issues/48330  When replacing the has_one target  it seems more correct to first delete the old record  so that if the associated model has a uniqueness validator  it won't fail.  Both the delete and the insert are in a single transaction  so if the new record fail to be saved  the transaction will be rolled back  which seems correct.  If `dependent: :destroy` isn't set  Active Record will try to orphan the record  which may or may not be valid depending on the schema and validators.  Co-Authored-By: @zzak  FYI: @nov  @yahonda @adrianna-chang-shopify ",closed,activerecord/lib/active_record/associations/has_one_association.rb; activerecord/lib/active_record/associations/singular_association.rb; activerecord/test/cases/associations/has_one_associations_test.rb,casperisfine,2023-06-07T08:02:35Z,2023-06-08T07:39:19Z
48319,48365,Cleanly fallback when failing to tokenize ERB templates,"Fix: https://github.com/rails/rails/issues/48319 Followup: https://github.com/rails/rails/pull/48184  cc @zarqman @tenderlove ",closed,actionview/lib/action_view/template/handlers/erb.rb; actionview/test/fixtures/test/unparseable_runtime_error_2.html.erb; actionview/test/template/render_test.rb; activesupport/lib/active_support/core_ext/erb/util.rb,casperisfine,2023-06-01T09:35:41Z,2023-06-01T19:08:57Z
48277,48354,Adding the button using JS and styling with CSS and Image [ #48277 ],"<!-- Thanks for contributing to Rails!  Please do not make *Draft* pull requests  as they still send notifications to everyone watching the Rails repo.  Create a pull request when it is ready for review and feedback from the Rails team :).  If your pull request affects documentation or any non-code changes  guidelines for those changes are [available here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)  About this template  The following template aims to help contributors write a good description for their pull requests. We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added)  motivation behind the changes  and complete the checklist below before opening a pull request.  Feel free to discard it if you need to (e.g. when you just fix a typo). -->  ### Motivation / Background  <!-- Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important? If you are fixing a specific issue  include ""Fixes #ISSUE"" (replace with the issue number  remove the quotes) and the issue will be linked to this PR. -->  At this pull request I implemented a back-to-top button on guides  ### Detail  guides/assets/javascripts/guides.js guides/assets/stylesheets/main.css guides/assets/images/up_white_arrow.png guides/CHANGELOG.md  ### Additional information  <!-- Provide additional information such as benchmarks  reference to other repositories or alternative solutions. -->  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[ #48277 ]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,guides/CHANGELOG.md; guides/assets/images/up_white_arrow.png; guides/assets/javascripts/guides.js; guides/assets/stylesheets/main.css,ally1002,2023-05-31T17:44:59Z,2023-06-01T07:38:42Z
48256,48265,update `ERB::Util.html_escape_once` to always return an `html_safe` string,"### Motivation / Background  This PR updates the behavior of `ERB::Util.html_escape_once` to always return an `html_safe` string.  This method previously maintained the `html_safe?` property of a string on the return value. Because this string has been escaped  however  not marking it as `html_safe` causes entities to be double-escaped.  As an example  take this view snippet:    ```html   <p><%= html_escape_once(""this & that &amp; the other"") %></p>   ```  Before this change  that would be double-escaped and render as:    ```html   <p>this &amp;amp; that &amp;amp; the other</p>   ```  After this change  it renders correctly as:    ```html   <p>this &amp; that &amp; the other</p>   ```  Fixes #48256   ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,actionview/test/template/erb_util_test.rb; activesupport/CHANGELOG.md; activesupport/lib/active_support/core_ext/erb/util.rb,flavorjones,2023-05-20T17:35:10Z,2023-05-22T10:03:36Z
48255,48274,Fix change_in_place? for binary serialized columns,"Followup: https://github.com/rails/rails/pull/40383 Fix: https://github.com/rails/rails/issues/48255 Fix: https://github.com/rails/rails/pull/48262  If the serialized attribute is backed by a binary column  we must ensure that both the `raw_old_value` and the `raw_new_value` are casted to `Binary::Data`.  Additionally  `Binary::Data` must cast it's backing string in `Encoding::BINARY` otherwise comparison of strings containing bytes outside the ASCII range will fail.   Note to self  we should backport this one.  FYI: @brphelps",closed,activemodel/lib/active_model/type/binary.rb; activemodel/test/cases/type/binary_test.rb; activerecord/CHANGELOG.md; activerecord/lib/active_record/type/serialized.rb; activerecord/test/cases/core_test.rb; activerecord/test/cases/reflection_test.rb; activerecord/test/cases/serialized_attribute_test.rb; activerecord/test/models/binary_field.rb; activerecord/test/schema/schema.rb,casperisfine,2023-05-22T10:52:25Z,2023-05-22T12:44:20Z
48196,48197,Handle non-ASCII-only in `AS::MessagePack#signature?`,"Because `ActiveSupport::MessagePack::Serializer::SIGNATURE` includes a non-ASCII-only byte (`""\xCC""`)  it raises `Encoding::CompatibilityError` when compared with another string that is not encoded with `Encoding::BINARY` and also includes a non-ASCII-only byte.  To prevent that  this commit changes `AS::MessagePack#signature?` to directly compare the first two bytes of both strings.  Fixes #48196. ",closed,activesupport/lib/active_support/message_pack/serializer.rb; activesupport/test/message_pack/shared_serializer_tests.rb,jonathanhefner,2023-05-12T02:07:15Z,2023-05-12T02:37:48Z
48185,48222,Add health check on standalone Action Cable,"Fixes #48185  Action Cable can be mounted standalone  but it loses the health check route provided by the railties. This change adds configuration for a health check rack app and a health check route to ""mount"" the rack app.  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,actioncable/CHANGELOG.md; actioncable/lib/action_cable/engine.rb; actioncable/lib/action_cable/server/base.rb; actioncable/lib/action_cable/server/configuration.rb; actioncable/test/server/health_check_test.rb,JoeDupuis,2023-05-13T23:44:05Z,2023-05-30T20:35:12Z
48173,48184,Properly fallback when ERB column can't be computed,"Fix: https://github.com/rails/rails/issues/48173  If for some reason the column identification fails  we should fallback to the old error rendering with only line information.  cc @tenderlove  FYI @jasonkim",closed,actionview/lib/action_view/template.rb; actionview/lib/action_view/template/handlers/erb.rb; actionview/test/fixtures/test/unparseable_runtime_error.html.erb; actionview/test/template/render_test.rb,casperisfine,2023-05-10T01:44:32Z,2023-05-18T19:45:43Z
48173,48294,Scan forward until text tokens match,"Text tokens may be conditionally appended to the output buffer.  For example if we have a template like this:  ```erb <h1>Oh no!</h1> This template has a runtime error <b>   <% if true %>     <%= method_that_does_not_exist %>   <% end %> </b> Yikes! ```  In the above case  a string literal (`""    ""`) will be conditionally appended to the output buffer with some code like below:  ```ruby @output_buffer.safe_append='    '.freeze ```  This commit teaches text tokens (string literals) to scan forward in the compiled template until it finds the literal  thereby skipping the code generated for appending to the output buffer.  Related to:  * Bug: https://github.com/rails/rails/issues/48173 * PR: https://github.com/rails/rails/pull/48184 ",closed,actionview/lib/action_view/template/handlers/erb.rb; actionview/test/template/render_test.rb,tenderlove,2023-05-24T19:55:37Z,2023-05-24T20:30:05Z
48172,48171,Allow PredicateBuilder to recognize schema namespaced table names,"<!-- Thanks for contributing to Rails!  Please do not make *Draft* pull requests  as they still send notifications to everyone watching the Rails repo.  Create a pull request when it is ready for review and feedback from the Rails team :).  If your pull request affects documentation or any non-code changes  guidelines for those changes are [available here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)  About this template  The following template aims to help contributors write a good description for their pull requests. We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added)  motivation behind the changes  and complete the checklist below before opening a pull request.  Feel free to discard it if you need to (e.g. when you just fix a typo). -->  ### Motivation / Background  `ActiveRecord::PredicateBuilder` currently assumes that a column name will only be specified in dot notation with a single period. If a column is specified in dot notation for a table that is namespaced in a schema  it will use the schema name as the table name. This PR allows columns to specified in the format `schema.table.column` as well as `table.column`.  This fixes #48172  ### Detail  This Pull Request changes the behavior of `ActiveRecord::PredicateBuilder.references` and `ActiveRecord::PredicateBuilder#convert_dot_notation_to_hash`  I didn't add this to the CHANGELOG  but if a reviewer thinks it's significant enough I'm happy to do so.  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,activerecord/lib/active_record/relation/predicate_builder.rb; activerecord/test/cases/relation/predicate_builder_test.rb,sholden,2023-05-08T22:15:39Z,2023-05-11T04:34:16Z
48164,48200,Discard connections which may be left in a transaction,"### Motivation / Background  Partially Fixes #48164  ### Detail  Today  connections are discarded in `within_transaction` if rolling back fails after the call to `yield` raises. This is done to prevent a connection from being left in a transaction if the rollback actually failed.  This change causes connections to be discarded in the following additional cases where the connection may be left in a transaction: - If beginning the transaction fails. - If rolling back the transaction fails. - If committing the transaction fails  then rolling back fails.  This is accomplished by rescuing all exceptions raised in `within_transaction` and discarding the connection if the transaction has not been been both initialized and completed.  ### Checklist  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,activerecord/CHANGELOG.md; activerecord/lib/active_record/connection_adapters/abstract/transaction.rb; activerecord/test/cases/transactions_test.rb,nicholasdower,2023-05-12T07:14:25Z,2023-05-14T02:48:32Z
48156,48163,Optimize mime types validation in ActionView::LookupContext,"Fix: https://github.com/rails/rails/issues/48156  The assumption here is that in the overwhelming majority of cases  all formats are valid.  So we first check if any of the formats is invalid before duping the details hash and filtering them.  Additionally  by exposing a (non-public) `valid_symbols?` method  we can check symbols are valid without resporting to `Array#%` which would needlessly duplicate the `formats` array.  This optimization is based on a prior refactor of ActionView::Template::Types to avoid delegation.  The `Type` class was introduced in https://github.com/rails/rails/pull/23085 for the sole purpose of breaking the dependency of Action View on Action Dispatch.  Unless you are somehow running Action View standalone  this is actually never used.  So instead of delegating  we can use constant swapping  this saves us a useless layer.  Ultimately we could consider moving `Mime::Types` into Active Support but it requires some more thoughts.  cc @headius @ghiculescu  Also cc @jhawthorn as I see you've optimized the `Template::Types` delegation in the past.  I still need to benchmark to see how much we gain here  and if another approach may be faster  but I'd like to first check CI is green.",closed,actionmailer/lib/action_mailer.rb; actionpack/lib/action_dispatch.rb; actionpack/lib/action_dispatch/http/mime_type.rb; actionview/lib/action_view/lookup_context.rb; actionview/lib/action_view/template.rb; actionview/lib/action_view/template/types.rb; actionview/test/template/asset_tag_helper_test.rb,casperisfine,2023-05-08T01:41:50Z,2023-05-08T02:25:36Z
48118,48170,Default message serializer to `:json_allow_marshal`,"Prior to this commit  `config.load_defaults 7.1` would cause old messages (or messages from older apps) to become unreadable  and developers were encouraged to manually set `config.active_support.message_serializer = :json_allow_marshal` in order to prevent this.  This commit changes the default message serializer set by `config.load_defaults 7.1` from `:json` to `:json_allow_marshal` so that upgraded apps can continue to read old messages without additional configuration.  The intention is to eventually change the default to `:json` (with no `Marshal` fallback) in Rails 7.2  after some time has passed with apps generating JSON-serialized messages.  Apps can opt in to JSON-only serialization before Rails 7.2 by manually setting `config.active_support.message_serializer = :json`.  Fixes #48118. ",closed,activesupport/CHANGELOG.md; activesupport/lib/active_support/message_encryptor.rb; activesupport/lib/active_support/message_verifier.rb; guides/source/configuring.md; railties/lib/rails/application/configuration.rb; railties/lib/rails/generators/rails/app/templates/config/initializers/new_framework_defaults_7_1.rb.tt; railties/test/application/configuration_test.rb,jonathanhefner,2023-05-08T17:44:21Z,2023-05-08T18:41:06Z
48105,48127,create (and use) /home/rails as home directory in Dockerfile,Fixes #48105,closed,railties/lib/rails/generators/rails/app/templates/Dockerfile.tt,rubys,2023-05-04T12:45:44Z,2023-05-08T06:07:59Z
48094,48095,Fix unscope not working when where by tripe dot range,"### Motivation / Background  Fixes #48094  `unscope` not working when where by tripe dot range  ### Detail  Define `fetch_attribute` to `activerecord/lib/arel/nodes/and.rb`  because unscope uses fetch_attribute to determine whether to exclude predicate or not.  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,activerecord/CHANGELOG.md; activerecord/lib/arel/nodes/and.rb; activerecord/test/cases/relations_test.rb,ippachi,2023-04-29T07:48:40Z,2023-09-04T08:17:34Z
48080,48101,[Fix #48080] Use `group` over `distinct` in `ActiveRecord::Calculations#ids` with `includes(...).order(...)`,"<!-- Thanks for contributing to Rails!  Please do not make *Draft* pull requests  as they still send notifications to everyone watching the Rails repo.  Create a pull request when it is ready for review and feedback from the Rails team :).  If your pull request affects documentation or any non-code changes  guidelines for those changes are [available here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)  About this template  The following template aims to help contributors write a good description for their pull requests. We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added)  motivation behind the changes  and complete the checklist below before opening a pull request.  Feel free to discard it if you need to (e.g. when you just fix a typo). -->  ### Motivation / Background  <!-- Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important? If you are fixing a specific issue  include ""Fixes #ISSUE"" (replace with the issue number  remove the quotes) and the issue will be linked to this PR. -->  This Pull Request has been created to fix https://github.com/rails/rails/issues/48080. As mentioned in the issue  a regression was introduced in https://github.com/rails/rails/pull/46503 where `includes(...).order(...)` would error with `#ids` due to a `DISTINCT` that wouldn't contain the ordering columns as required by `postgres` and `mysql`.  From the `PostgreSQL` docs:  <img width=""1543"" alt=""Screenshot 2023-05-01 at 3 16 49 pm"" src=""https://user-images.githubusercontent.com/54629302/235410227-17f40e1b-afef-482a-8c87-64050c0fe52f.png"">  ### Detail  This Pull Request changes `ActiveRecord::Calculations#ids` to use `#group` over `#distinct` to avoid having a `DISTINCT` that would be incompatible with the selected columns.  I went with this approach since: - `group` will give us the same result using the same execution plan (both use `HashAggregate`). - Including the ordering columns in the `SELECT` is not an option as we want to `SELECT` only the primary key/s for `#ids`. - The only other alternative I could think of was constructing a subquery for the above which seems overcomplicated and would probably introduce unnecessary overhead.  ### Additional information  Not relevant to the issue but https://github.com/rails/rails/pull/46697 is a related follow up PR to the one that introduced the regression.  <!-- Provide additional information such as benchmarks  reference to other repositories or alternative solutions. -->  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,activerecord/lib/active_record/relation/calculations.rb; activerecord/test/cases/calculations_test.rb,joshuay03,2023-05-01T04:41:24Z,2023-05-03T13:33:09Z
48072,49050,[Fix #48535]: fix behavior of `proc_for_binds` in `Arel::Nodes::HomogenousIn`,"### Motivation / Background This PR addresses the issues #48535 and #48072.  With the introduction of PR #41068  an unintended behavior surfaced  causing the `proc_for_binds` to apply casting to attributes that were already casted. Consequently  this led to the malfunctioning of queries  as noted in the referenced issues.  This commit fixes the issue by replacing the type with `ActiveModel::Type.default_value` so that the 2nd serialization is effectively a no-op. This correction has obviated the need for changes such as ""Fix deterministic queries that were broken after #41068 "" as detailed in [this commit](https://github.com/wbotelhos/rails/commit/37361bfb4222c5d210f11e48ecee46b05ea7d50e). These changes had inadvertently caused the tests initially intended for `proc_for_binds` within `HomogeneousIn` to erroneously evaluate the `proc_for_binds` within `InWithAdditionalValues`. This resulted in false positives whenever adjustments were made to the `proc_for_binds` within `HomogeneousIn`.  Fixes #48072. Fixes #48535.  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,activerecord/CHANGELOG.md; activerecord/lib/active_record/encryption/extended_deterministic_queries.rb; activerecord/lib/arel/nodes/homogeneous_in.rb; activerecord/test/cases/serialized_attribute_test.rb,JohnAnon9771,2023-08-27T14:57:07Z,2023-11-09T21:38:21Z
48052,48397,improve quoted parameters in mime types,"### Motivation / Background  This Pull Request has been created because `Mime::Type` does not correctly handle quoted parameters. They can contain most characters  including a comma. Additionally  the current implementation ignored the parameters when loading the type  but not when registering it.  Fixes #48052  ### Detail  This Pull Request changes `Mime::Type` to allow every character in a quoted parameter value  except `\r`  `\` and `""` as defined in [RFC 822 3.3](https://datatracker.ietf.org/doc/html/rfc822#section-3.3)  except for escaped characters (see Current Limitations).  Additionally  the different parts of the Accept header are not simply split by ` `  but now factor in quotes.  In the current implementation `Mime::Type.register` kept the parameters  whereas `Mime::Type.parse` removed them. This PR now keeps all parameters before the `q` parameter (as defined in [RFC 7231 5.3.2](https://www.rfc-editor.org/rfc/rfc7231#section-5.3.2)). If during the lookup no type with the parameter could be found  a type is searched for without parameters as a fallback. This is useful for example for `multipart/form-data; boundary=""simple boundary""` and keeps the current behaviour.  ### Current Limitations  Currently the following limitations exist  but I'm not sure if they are worth the effort:  * Quoted strings could contain escaped characters  including `\""`. My implementation does not allow a backslash to simplify the parsing and keeping it efficient. * If there are whitespace-differences around the parameters they would not be considered as matching. E.g. `my/type;test=""value""` would not match `my/type; test=""value""` * According to [RFC 7231 5.3.2](https://www.rfc-editor.org/rfc/rfc7231#section-5.3.2)  the types with parameters have precedence over types without parameters. But sorting them according to this information would mean to split the types from the parameters  which introduces additional computational effort.  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,actionpack/CHANGELOG.md; actionpack/lib/action_dispatch/http/mime_type.rb; actionpack/test/controller/integration_test.rb; actionpack/test/dispatch/mime_type_test.rb,ThunderKey,2023-06-05T10:58:01Z,2023-06-05T16:56:18Z
48046,48048,Fix pg 1.5.0 deprecation warning,"Closes #48046  /cc @yahonda ",closed,Gemfile.lock; activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb,morgoth,2023-04-24T12:10:41Z,2023-04-25T07:13:31Z
48038,48039,Fix `Marshal.dump` on records that use AR Encryption,"Fixes https://github.com/rails/rails/issues/48038  I don't think we need to use a proc here - it doesn't seem like there is any performance benefit in doing so. The default is being read from the `columns_hash`  which will already be loaded in memory. And then the `default` method is just reading a value (or returning nil).  cc @fatkodima @jorgemanrubia ",closed,activerecord/lib/active_record/encryption/encryptable_record.rb; activerecord/lib/active_record/encryption/encrypted_attribute_type.rb; activerecord/test/cases/encryption/encryptable_record_test.rb,ghiculescu,2023-04-23T21:51:21Z,2023-04-26T07:04:36Z
47999,48004,Module#delegate directly define methods as private,"Fix: https://github.com/rails/rails/issues/47999  Useful for `method_added` hooks  but also should perform very sligtly better for large list of delegators.  FYI @crevete ",closed,activesupport/lib/active_support/core_ext/module/delegation.rb,byroot,2023-04-20T20:13:37Z,2023-04-20T22:02:14Z
47956,47983,Fix #47956: Update comment to reference values with single quotes,"Fixes #47956  This Pull Request has been created because autogenerated config/locales/en.yml file template mentions surrounding specific keys with 'single quotes' while the examples were presented with ""double quotes""  ### Detail  This Pull Request fixes generated documentation that erroneously gives examples of single quote keys with double quotes ",closed,actionmailbox/test/dummy/config/locales/en.yml; actiontext/test/dummy/config/locales/en.yml; activestorage/test/dummy/config/locales/en.yml; railties/lib/rails/generators/rails/app/templates/config/locales/en.yml,Jbrito6492,2023-04-19T05:38:02Z,2023-04-19T08:52:41Z
47909,48861,Fixes #47909 when using order or unscope,"This fix corrects the logic in both the associated and missing methods. If the reflection.options hash has a key/value pair for :class_name it will use the association. This fixes [48651](https://github.com/rails/rails/issues/48651) which was not returning the correct value when using an enum association and querying for a record that had one key of the enum but was missing another. This also fixes [44964](https://github.com/rails/rails/issues/44964) where ActiveRecord was not properly aliasing self-referencing relations. If the reflection.options doesn’t contain the key/value pair then it will use the reflection.table_name. This fixes  [47909](https://github.com/rails/rails/issues/47909) in which a user was trying to find records that were either missing a relation or were missing a relation that was ordered or unscoped or were missing a relation that was using extends in the query which resulted in an ActiveRecord Exception. It also allows for using extends in any of these capacities.   * [ X] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [X ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [ X] Tests are added or updated if you fix a bug or add a feature. * [X ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,activerecord/lib/active_record/relation/query_methods.rb; activerecord/test/cases/relation/where_chain_test.rb; activerecord/test/models/author.rb,paulreece,2023-08-01T02:51:35Z,2023-08-03T15:26:37Z
47903,47929,fixed comment for example sql statement,"### Motivation / Background  <!-- Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important? If you are fixing a specific issue  include ""Fixes #ISSUE"" (replace with the issue number  remove the quotes) and the issue will be linked to this PR. -->  This Pull Request has been created because fixes #47903    ### Detail  This Pull Request changes example SQL statement to be more coherent to the user.  ### Additional information  <!-- Provide additional information such as benchmarks  reference to other repositories or alternative solutions. -->  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,activerecord/lib/active_record/relation/calculations.rb,jetjodh,2023-04-12T22:11:17Z,2023-04-12T22:34:02Z
47849,53619,[Fix #47849] Correctly strip newlines from check constraints for MySQL 8.0.16+,"### Motivation / Background  The regular expression used to strip whitespace characters from check constraints that I added in #47851 was incorrectly specified  and resulted in `n` characters being left in the output.  ### Detail  This PR changes the `strip_whitespace_characters` method I previously introduced to ensure that check constraints are output in a format that allows them to be restored.  Given the DDL for our table (edited to remove private details about our app):  ```sql CREATE TABLE `sample_table` (   `id` int NOT NULL AUTO_INCREMENT    `approver_ids` json DEFAULT NULL    PRIMARY KEY (`id`)    CONSTRAINT `non_empty_approver_ids_array` CHECK (json_schema_valid(_utf8mb4'\n        {\n          ""oneOf"": [\n            {\n              ""type"": ""null""\n            } \n            {\n              ""type"": ""array"" \n              ""minItems"": 1 \n              ""items"": {\n                ""type"": ""integer"" \n                ""minimum"": 0\n              }\n            }\n          ]\n        }' `approver_ids`)) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci ```  On the `7-2-stable` branch (our app isn't yet compatible with Rails 8  but the underlying code here hasn't changed)  the constraint `non_empty_approver_ids_array` here results in the output:  ```sql json_schema_valid(_utf8mb4'n {n ""oneOf"": [n {n ""type"": ""null""n } n {n ""type"": ""array"" n ""minItems"": 1 n ""items"": {n ""type"": ""integer"" n ""minimum"": 0n }n }n ]n }' `approver_ids`) ```  This is invalid when we restore the schema dump.  With the fix from this PR in place  the output becomes:  ```sql json_schema_valid(_utf8mb4' { ""oneOf"": [ { ""type"": ""null"" }  { ""type"": ""array""  ""minItems"": 1  ""items"": { ""type"": ""integer""  ""minimum"": 0 } } ] }' `approver_ids`) ```  This is valid and allows the schema dump to be restored correctly.  As a bonus  the revised code no longer uses regular expressions to avoid the same mistake occurring in the future.  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,activerecord/lib/active_record/connection_adapters/abstract_mysql_adapter.rb; activerecord/test/cases/migration/check_constraint_test.rb,stevehill1981,2024-11-13T10:37:44Z,2024-11-15T11:10:07Z
47704,47747,Implement `marshal_dump` and `marshal_load` on ActiveRecord::Base,"Fix: https://github.com/rails/rails/issues/47704 Superseeds: https://github.com/rails/rails/pull/47722  While the instance variable ordering bug should be fixed in Ruby 3.2.3  it's not great that we're depending on such brittle implementation detail.  Additionally  Marshalling Active Record instances is currently very inefficient  the payload include lots of redundant data that shouldn't make it into the cache.  In this new format the serialized payload only contains basic Ruby core or stdlib objects  reducing the risk of changes in the internal representation of Rails classes.  The payloads are also dramatically smaller:  ```bash $ ls -lh test/support/marshal_compatibility_fixtures/PostgreSQL/ 1.7K rails_6_1_topic.dump 4.1K rails_6_1_topic_associations.dump 579B rails_7_1_topic.dump 806B rails_7_1_topic_associations.dump ```  Compared to the previous PR (https://github.com/rails/rails/pull/47722) we lose the ability to behave as a cache miss for no longer existing classes  but this implementation is so dramatically simpler  that I think it's worth it.  ## Benchmark  Payload size: `4015B -> 695B`  Dump:  ``` Comparison:             dump 7.1:    34382.8 i/s             dump 6.1:    14392.6 i/s - 2.39x  slower ```  Load:  ``` Comparison:             load 7.1:    29420.8 i/s             load 6.1:    13827.2 i/s - 2.13x  slower ```  NB: the actual speedup will vary a lot based on the size of the records  number of associations etc  but overall it's safe to say it's way faster.  <details> <summary>benchmark code</summary> begin   require ""bundler/inline"" rescue LoadError => e   $stderr.puts ""Bundler version 1.10 or later is required. Please update your Bundler""   raise e end  gemfile(true) do   source ""https://rubygems.org""   case ENV[""FORMAT""]   when ""7.1""     gem ""activerecord""  github: ""https://github.com/rails/rails/pull/47747""   when ""6.1""     gem ""activerecord""  github: ""rails/rails""   end   gem ""sqlite3""   gem ""benchmark-ips"" end  require ""active_record"" require ""minitest/autorun"" require ""logger""  # This connection will do for database-independent bug reports. ActiveRecord::Base.establish_connection(adapter: ""sqlite3""  database: "":memory:"") ActiveRecord::Base.logger = Logger.new(nil)  ActiveRecord::Schema.define do   create_table :topics  force: true do |t|     t.string   :title  limit: 250     t.string   :author_name     t.string   :author_email_address     t.datetime :written_on     t.time     :bonus_time     t.date     :last_read     t.text     :content     t.text     :important     t.boolean  :approved  default: true     t.integer  :replies_count  default: 0     t.integer  :unique_replies_count  default: 0     t.integer  :parent_id     t.string   :parent_title     t.string   :type     t.string   :group     t.timestamps null: true     t.index [:author_name  :title]   end end  class Topic < ActiveRecord::Base   has_many :replies  dependent: :destroy  foreign_key: ""parent_id""  autosave: true  inverse_of: :topic end  class Reply < Topic   belongs_to :topic  foreign_key: ""parent_id""  counter_cache: true  inverse_of: :replies end  if ENV[""FORMAT""] == ""7.1""   ActiveRecord.marshalling_format_version = 7.1 end  topic = Topic.create!(title: ""Main topic"") topic.replies.create!(title: ""Response 1"") topic.replies.create!(title: ""Response 1"")  topic = Topic.first topic.replies.each(&:topic)  require ""benchmark/ips""  payload = Marshal.dump(topic) puts ""#{ENV[""FORMAT""]} payload size: #{payload.bytesize}B""  Benchmark.ips do |x|   x.report(""dump #{ENV[""FORMAT""]}"") { Marshal.dump(topic) }   x.save!(""/tmp/bench-marshal-dump.data"")   x.compare! end  Benchmark.ips do |x|   x.report(""load #{ENV[""FORMAT""]}"") { Marshal.load(payload) }   x.save!(""/tmp/bench-marshal-load.data"")   x.compare! end </details>",closed,activerecord/CHANGELOG.md; activerecord/lib/active_record.rb; activerecord/lib/active_record/base.rb; activerecord/lib/active_record/marshalling.rb; activerecord/test/cases/marshal_serialization_test.rb; activerecord/test/models/reply.rb; activerecord/test/models/topic.rb; activerecord/test/support/marshal_compatibility_fixtures/Mysql2/rails_6_1_topic_associations.dump; activerecord/test/support/marshal_compatibility_fixtures/Mysql2/rails_7_1_topic.dump; activerecord/test/support/marshal_compatibility_fixtures/Mysql2/rails_7_1_topic_associations.dump; activerecord/test/support/marshal_compatibility_fixtures/PostgreSQL/rails_6_1_topic_associations.dump; activerecord/test/support/marshal_compatibility_fixtures/PostgreSQL/rails_7_1_topic.dump; activerecord/test/support/marshal_compatibility_fixtures/PostgreSQL/rails_7_1_topic_associations.dump; activerecord/test/support/marshal_compatibility_fixtures/SQLite/rails_6_1_topic_associations.dump; activerecord/test/support/marshal_compatibility_fixtures/SQLite/rails_7_1_topic.dump; activerecord/test/support/marshal_compatibility_fixtures/SQLite/rails_7_1_topic_associations.dump; guides/source/configuring.md; railties/lib/rails/application/configuration.rb; railties/lib/rails/generators/rails/app/templates/config/initializers/new_framework_defaults_7_1.rb.tt,casperisfine,2023-03-23T11:11:09Z,2023-03-28T15:19:24Z
47628,47651,Add missing deprecation warning assertion in test,"<!-- Thanks for contributing to Rails!  Please do not make *Draft* pull requests  as they still send notifications to everyone watching the Rails repo.  Create a pull request when it is ready for review and feedback from the Rails team :).  If your pull request affects documentation or any non-code changes  guidelines for those changes are [available here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)  About this template  The following template aims to help contributors write a good description for their pull requests. We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added)  motivation behind the changes  and complete the checklist below before opening a pull request.  Feel free to discard it if you need to (e.g. when you just fix a typo). -->  ### Motivation / Background <!-- Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important? If you are fixing a specific issue  include ""Fixes #ISSUE"" (replace with the issue number  remove the quotes) and the issue will be linked to this PR. -->  Fixes #47628   ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,activesupport/test/cache/cache_store_setting_test.rb,rrunyon,2023-03-13T01:55:50Z,2023-03-13T13:01:48Z
47624,47912,Fix delegation to a method with implicit block.,"### Motivation / Background  When https://github.com/rails/rails/commit/8b2f57dc6fc4400a1554a11b24dfb6c854310d81 was introduced it broke delegation of a method with implicit block like this:  ```ruby class Foo   def self.bar     yield   end end  class Bar   delegate :bar  to: Foo end  Bar.new.bar { } # raises LocalJumpError: no block given (yield) ```  It happens because it's impossible to detect a method with implicit block and we rely on method's parameters when we generate delegated methods.  I've found only one solution to this issue: we always generate a method that explicitly accepts block. It kind of makes sense since every Ruby method accepts block implicitly anyway.  Fixes https://github.com/rails/rails/issues/47624 ",closed,activesupport/lib/active_support/core_ext/module/delegation.rb; activesupport/test/core_ext/module_test.rb,nashby,2023-04-10T17:53:20Z,2023-04-16T11:33:32Z
47600,47708,Improve Password Length Validation for BCrypt Compatibility,"[Fix #47600]  ### Motivation / Background  This Pull Request has been created because we identified a need to improve password length validation for BCrypt compatibility in the ActiveModel::SecurePassword module. The current validation only considers the character count  which may not accurately reflect the byte size limit imposed by BCrypt.  ### Detail  This Pull Request changes the password length validation by:  - Updating the validation to consider byte size. This ensures that passwords adhere to the 72-byte limit imposed by BCrypt.  - Adding a custom validation error message key `:password_too_long` for the byte size validation. This allows for better internationalization (i18n) support and customization of the error message when the byte size limit is exceeded.  - Updating the existing test cases and adding new test cases to cover the updated validation logic  ensuring that both character count and byte size validations work as expected.  - Providing clear comments and explanations in the code to describe the purpose of the validation and the rationale behind the implementation.  These changes improve the overall user experience and maintain compatibility with BCrypt's limitations.  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.  ### Note for reviewers  Everything in this pull request  including the code  tests  changelog  commit message  pull request title and description has been created by ChatGPT with some guidance. If you believe ChatGPT is infringing your copyright please let me know.",closed,activemodel/CHANGELOG.md; activemodel/lib/active_model/locale/en.yml; activemodel/lib/active_model/secure_password.rb; activemodel/test/cases/secure_password_test.rb,guilleiguaran,2023-03-18T01:53:35Z,2023-04-20T04:49:00Z
47572,47573,Fixes TimeWithZone ArgumentError #47572,Use triple dots in method_missing to forward parameters. This fixes #47572,closed,activesupport/lib/active_support/time_with_zone.rb; activesupport/test/core_ext/time_with_zone_test.rb,codergeek121,2023-03-03T19:54:49Z,2023-03-03T23:02:48Z
47570,47682,Add example of simple environment config extending,"Follow up to https://github.com/rails/rails/issues/47570  [ci skip]  @jonathanhefner @skipkayhil as discussed on the above issue",closed,guides/source/configuring.md,morgoth,2023-03-15T06:38:59Z,2023-03-15T20:42:58Z
47542,47584,Support prerelease rubies in Gemfile template if possible,"### Motivation / Background  This commit brings back #45979 only when RubyGems version is 3.3.13 or higher that includes https://github.com/rubygems/rubygems/pull/5486  Pull request #45979 has been reverted via #47524 because the default versions of RubyGems shipped with Ruby 2.7 and 3.0 are lower than 3.3.13. If users who bumps the RubyGems version or uses Ruby 3.1 or higher  RubyGems version should be satisfied to support prerelease rubies.  Ref #45979 #47524 Fix #47542  ### Detail Here are details of how `Gem.ruby_version` works between RubyGems 3.3.12 and3.3.13.   - RubyGems 3.3.12` Gem.ruby_version` includes patch level ```ruby $ gem -v 3.3.12 $ irb irb(main):001:0> Gem.ruby_version => Gem::Version.new(""3.1.3.p185"") ```  - RubyGems 3.3.13` Gem.ruby_version` does not include patch level ```ruby $ gem -v 3.3.13 $ irb irb(main):001:0> Gem.ruby_version => Gem::Version.new(""3.1.3"") irb(main):002:0> ```  ### Additional information  <!-- Provide additional information such as benchmarks  reference to other repositories or alternative solutions. -->  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,railties/CHANGELOG.md; railties/lib/rails/generators/rails/app/templates/Gemfile.tt; railties/test/generators/app_generator_test.rb,yahonda,2023-03-06T02:19:47Z,2023-03-14T03:10:15Z
47535,47597,Fixes 47535 - flag multiple cookies as secure,"### Motivation / Background  This PR fixes https://github.com/rails/rails/issues/47535  adding support for multiple cookies in the cookie jar.  ### Detail  Currently the `flag_cookies_as_secure!` assumes `cookies` parsed from the ""Set-Cookie"" header to be a string  but it can indeed be an array. This PR adds a check to confirm `cookies` is a string before splitting it.  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,actionpack/lib/action_dispatch/middleware/ssl.rb; actionpack/test/dispatch/ssl_test.rb,ron-shinall,2023-03-07T17:26:25Z,2023-03-13T17:54:09Z
47435,47444,Fix `rails new --dev APP_PATH` command crashing,"ref: https://github.com/rails/rails/issues/47435#issuecomment-1436530001  - `rails new APP_PATH --dev` works fine. - `rails new --dev APP_PATH` does not work.  For most other flags  putting the APP_PATH before or after the flags has the same effect. It's just the prelease ones that have issues  because we have to rengerate the command so as to call `bundle exec rails new ...` a second time.  Prior to this PR  the command that was being called was `bundle exec rails new APP_PATH APP_PATH`  and that doesn't work. Now it will get called as `bundle exec rails new APP_PATH --dev APP_PATH` which is fine.  I haven't been able to find a way to write an automated test for this  but you can use the replication steps in https://github.com/rails/rails/issues/47435 to verify that the issue is fixed. ",closed,railties/lib/rails/generators/app_base.rb,ghiculescu,2023-02-20T23:42:53Z,2023-03-09T17:02:44Z
47418,47419,Make ForkTracker.check! a noop on Ruby 3.1+,"Fix: https://github.com/rails/rails/issues/47418  We should trust the `Process._fork` callback  as it can't really be bypassed except throught `Process.daemonize` but I don't think it's a problem.  We initially kept the PID check even if the callback was present  but it turns out that on modern GLIBC the getpid() syscall isn't cached and it causes a significant overhead.  I will also attempt to get Ruby to cache `getpid()`  which would help other libraries that do similar PID checks.  cc @dalehamel @eileencodes @matthewd ",closed,activesupport/lib/active_support/fork_tracker.rb; activesupport/test/fork_tracker_test.rb,byroot,2023-02-16T16:36:47Z,2023-02-20T08:26:47Z
47414,47496,make docker-entrypoint exit on error,"Fixes #47414  cc: @zzak @byroot @dhh ",closed,railties/lib/rails/generators/rails/app/templates/docker-entrypoint.tt,rubys,2023-02-24T15:47:35Z,2023-02-24T16:18:32Z
47400,47425,Ensure `AUTOINCREMENT` declaration is preserved when altering SQLite tables,"### Motivation / Background  Closes: https://github.com/rails/rails/issues/47400  Previously  when copying a table as a result of an `ALTER TABLE` statement  the `AUTOINCREMENT` declaration on the PK column was dictated by the absence of a `:default` option on that column. However  we were always passing `default` when copying the columns to the new table  regardless of whether the column originally had a default. This led to the `AUTOINCREMENT` declaration being lost.  ### Detail  This commit fixes the issue by tracking a column's `auto_increment` value  and only passing the `default` option in `#copy_table` when the column does not have the `auto_increment` option set.  I've added a test that ensure that both storing `auto_increment` on `SQLite3::Column` works as intended  and that the `AUTOINCREMENT` declaration is preserved on the table itself.  ### Additional information  <!-- Provide additional information such as benchmarks  reference to other repositories or alternative solutions. -->  ### Checklist  Before submitting the PR make sure the following are checked:  * [X] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [X] Tests are added or updated if you fix a bug or add a feature. * [X] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,activerecord/lib/active_record/connection_adapters/sqlite3/column.rb; activerecord/lib/active_record/connection_adapters/sqlite3/schema_statements.rb; activerecord/lib/active_record/connection_adapters/sqlite3_adapter.rb; activerecord/test/cases/adapters/sqlite3/sqlite3_adapter_test.rb; railties/test/application/initializers/frameworks_test.rb,adrianna-chang-shopify,2023-02-17T15:54:14Z,2023-02-27T16:11:08Z
47390,47394,Clear up common questions releases,"We often get asked about bug fixes for unsupported series  and NPM security release version scheme.  cc #47390  #39351  #47216 ",closed,guides/source/maintenance_policy.md,zzak,2023-02-15T09:11:07Z,2023-02-16T01:17:17Z
47369,47381,Fixes issue: Link to SQL Reference guide #47369,"### Motivation / Background Fixes #47369  Change link for sql tutorial to Khan Academy course. Added link to devart page which explains RDBMS. Both sites do not contain ads  tracking software  or other subscription related inceptives.  ### Detail  This Pull Request removes w3sql and sqlcourse links due to advertisements  and adds link to Khan Academy Introduction to SQL course and devart.com page on RDBMS.  ### Checklist  Before submitting the PR make sure the following are checked:  * [ x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [ x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [n/a ] Tests are added or updated if you fix a bug or add a feature. * [n/a ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,guides/source/active_record_basics.md,davidomullan,2023-02-13T22:05:37Z,2023-02-14T07:12:29Z
47343,47344,maintain html_safe? on sliced HTML safe strings,"### Motivation / Background  Closes https://github.com/rails/rails/issues/47343  I have found inconsistent behaviour with `SafeBuffer`'s `slice`  `chr`  and `[]` functions.  ```ruby buffer = ActiveSupport::SafeBuffer.new buffer.concat(""<html>"")  buffer[0..0].html_safe? # true buffer.slice(0  1).html_safe? # false  buffer[0].html_safe? # true buffer.chr.html_safe? # false ```  This behaviour was introduced in this [PR](https://github.com/rails/rails/pull/33808)  and this has been included in Rails 6.0.0. Also  the behaviour of persistently keeping the `html_safe` flag from the `[]` function was introduced in this [commit](https://github.com/rails/rails/commit/8ccaa34103f1c37f7549f7f6c47a21dba21624db) from 2012.    ### Detail  Since `String#slice` is an alias method of `String#[]`  I believe `SafeBuffer`'s `slice` and `[]` functions should also have the same parity.   ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.  cc @flavorjones  ",closed,activesupport/CHANGELOG.md; activesupport/lib/active_support/core_ext/string/output_safety.rb; activesupport/test/safe_buffer_test.rb,ggmichaelgo,2023-02-09T20:47:16Z,2023-02-09T21:24:09Z
47323,47340,Deprecate initialize memcache store with dalli client,"Part of #47323 The full fix will be to remove support for the `Dalli::Client` option when initializing a `MemCacheStore`  ### Motivation / Background  Following up on [#47323](https://github.com/rails/rails/issues/47323). Many options are not forwarded to the Dalli client when it is initialized from the `ActiveSupport::Cache::MemCacheStore`. This is to support a broader set of features powered by the implementation. When an instance of a client is passed on the initializer  it takes precedence  and we have no control over which attributes will be overridden or re-processed on the client side; this is by design and should remain as such to allow both projects to progress independently.  Having this option introduces several potential bugs that are difficult to pinpoint and get multiplied by which version of the tool is used and how each evolves. During the conversation on the issue  the `Dalli` client maintainer supports [deprecating](https://github.com/rails/rails/issues/47323#issuecomment-1424292456) this option.  ### Detail  This Pull Request adds a deprecation warning any time the `ActiveSupport::Cache::MemCacheStore` is initialized with an instance of a `Dalli::Client` instead of providing the address(es) of the memcache server(s) and any additional options to let the `MemCacheStore` implementation handle the provisioning of the client.  Removing this implicit dependency will ensure each library can evolve separately and cements the usage of `Dalli::Client` as an [implementation detail](https://github.com/rails/rails/issues/21595#issuecomment-139815433)  We can not remove a supported feature overnight  so we should add a deprecation warning for the next minor release(7.2 at this time).  A constant on the `Cache` namespace was only used to restrict options passed to the `Dalli::Client` initializer that now lives on the `MemCacheStore` class.  ### Additional information  The main issue with allowing this approach is regarding potential misbehaviors and bugs because of both implementations' different strategies when dealing with keys  namespaces  and compression. One example of functionality has already diverged between the two and how [fixing it](https://github.com/aledustet/rails/pull/1/files) would further increase the coupling between both libraries. A follow-up to this would still be an attempt to include the key truncation recovery mechanism on `ActiveSupport` to the `Dalli` client  but this will not be the only time both libraries stray  and it will be up to maintainers to catch up.  ### Checklist  Before submitting the PR make sure the following are checked:  * [X] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [X] Tests are added or updated if you fix a bug or add a feature. * [X] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,activesupport/CHANGELOG.md; activesupport/lib/active_support/cache/mem_cache_store.rb; activesupport/test/cache/stores/mem_cache_store_test.rb,aledustet,2023-02-09T17:12:17Z,2023-02-28T20:35:13Z
47267,47273,Fixes encoding/decoding Data object via as_json,"### Motivation / Background  Add as_json method for the new Data object introduced in Ruby 3.2 so Data objects can be encoded/decoded.  ``` data = Data.define(:name).new(:test) data.as_json ```  This Pull Request has been created because https://github.com/rails/rails/issues/47267  cc/ @eileencodes   ### Additional information  Run the tests in Ruby 3.2 only.  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,activesupport/lib/active_support/core_ext/object/json.rb; activesupport/test/json/encoding_test.rb,hahmed,2023-02-06T12:17:21Z,2023-02-07T19:58:07Z
47216,47394,Clear up common questions releases,"We often get asked about bug fixes for unsupported series  and NPM security release version scheme.  cc #47390  #39351  #47216 ",closed,guides/source/maintenance_policy.md,zzak,2023-02-15T09:11:07Z,2023-02-16T01:17:17Z
47203,47320,Fix state leakage between tests,"### Motivation / Background Fixes https://github.com/rails/rails/issues/47203  ### Detail  The issue was about a test failing when executed in a particular order as part a series of tests described as below: ``` ARCONN=postgresql bin/test test/cases/validations/uniqueness_validation_test.rb test/cases/adapters/postgresql/postgresql_adapter_test.rb -n ""/^(?:UniquenessValidationTest#(?:test_validate_case_insensitive_uniqueness)|ActiveRecord::ConnectionAdapters::PostgreSQLAdapterTest#(?:test_unparsed_defaults_are_at_least_set_when_saving|test_only_check_for_insensitive_comparison_capability_once))$/"" --seed 21290 -v ```  This test command runs the following tests in that order:  1. UniquenessValidationTest#test_validate_case_insensitive_uniqueness 2. ActiveRecord::ConnectionAdapters::PostgreSQLAdapterTest#test_unparsed_defaults_are_at_least_set_when_saving 3. ActiveRecord::ConnectionAdapters::PostgreSQLAdapterTest#test_only_check_for_insensitive_comparison_capability_once  The 1st and 2nd tests passes but the last one fails.  The below assertion is where the test fails because it's expecting queries to be run when `case_insensitive_comparison` is called but no queries are executed.  ``` assert_queries :any  ignore_none: true do   @connection.case_insensitive_comparison(attribute  ""foo"") end ```  This is happening for two reasons:  **1) Schema cache not being cleared between tests**   The purpose of the `case_insensitive_comparison` method is to perform a case insensitive comparison for the given attribute against a value. But the method needs to know if a comparison is possible based on the column type of the attribute being compared. To find out if it is capable of doing it  it run queries against Postgres which will return a boolean result. `true` if case insensitive comparison is possible for the column type of the attribute  otherwise `false`.  However  querying the database every time the method `case_insensitive_comparison` is called is not optimal for performance. So  a prior [PR](https://github.com/rails/rails/commit/b39050e8d574b814d3580688276e933a3d08aca8) tackled this issue by introducing a local cache layer aka `@case_insensitive_cache`  so that queries to the database are only done once.  So when debugging the 3rd test  we noticed that the `case_insensitive_comparison` method was looking up the column type `integer` in the cache `@case_insensitive_cache` when it should have been looking up  `example_type` based on the table created in the test. ![first_screenshot](https://user-images.githubusercontent.com/13633237/217651038-3e29ef54-39a8-45bd-bb4a-2f96baacd36a.jpg)  We noticed that both the failing test and the second test ActiveRecord::ConnectionAdapters::PostgreSQLAdapterTest#test_unparsed_defaults_are_at_least_set_when_saving both create a table called ""ex"" but with different column_types for the `number` attribute. When we skip the second test  the failing test now passes because it now looks up `example_type` in the `@case_insensitive_cache`.  We printed out the logs when debugging to see exactly what was happening behind the scenes and we saw that both tests were properly creating and dropping the tables during their lifecycle. We confirmed this by checking the postgres database.   This led us to discover that Rails has a schema cache for performance reasons. We realized that the column_type used by the failing test was coming from the schema cache and NOT from what was defined in the table creation within the test.  The third test (failing one) is  loading the  column_type for `number` from the schema cache populated by the table creation in the second test because both tests have the same table name e.g. ""ex"" and column name e.g. ""number"".   To fix that  we clear the schema cache using `clear_data_source_cache!` on the table ""ex"".   **2) `@case_insensitive_cache` not being cleared between tests**  The `case_insensitive_comparison` method uses a local cache between successive calls and the failing test was testing the functionality of that cache  and asserting that the queries against postgres were only performed once assuming that the cache was empty. But we found that the cache was not empty when the 3rd test executes because the 1st test also calls the `case_insensitive_comparison` method which populated the cache for column type `integer`.  The 3rd test already passes by just clearing the schema cache. So why do we clear the `@case_insensitive_cache` again? If another test is added that also calls the `case_insensitive_comparison` method with an attribute of the same column type e.g. `integer` or even `example_type`  then the 3rd test will fail because the cache knows about those column types. So  clearing `@case_insensitive_cache` ensures that the 3rd test will never fail the `assert_queries :any`.  You can see the cache being populated by the first test in the top section of this screenshot: ![latest](https://user-images.githubusercontent.com/13633237/217660251-59ced012-2747-4961-8c0d-6b4624e9027d.jpg)  ### Additional information  - Is force clearing the schema cache the right approach? We would have expected the schema cache to be destroyed as part of the table drop 🤔   ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,activerecord/test/support/ddl_helper.rb,jessicajoly88,2023-02-08T20:35:59Z,2023-02-10T15:49:41Z
47185,47326,Use `throw` for message error handling control flow,"There are multiple points of failure when processing a message with `MessageEncryptor` or `MessageVerifier`  and there several ways we might want to handle those failures.  For example  swallowing a failure with `MessageVerifier#verified`  or raising a specific exception with `MessageVerifier#verify`  or conditionally ignoring a failure when rotations are configured.  Prior to this commit  the _internal_ logic of handling failures was implemented using a mix of `nil` return values and raised exceptions. This commit reimplements the internal logic using `throw` and a few precisely targeted `rescue`s.  This accomplishes several things:  * Allow rotation of serializers for `MessageVerifier`.  Previously  errors from a `MessageVerifier`'s initial serializer were never rescued.  Thus  the serializer could not be rotated:      ```ruby     old_verifier = ActiveSupport::MessageVerifier.new(""secret""  serializer: Marshal)     new_verifier = ActiveSupport::MessageVerifier.new(""secret""  serializer: JSON)     new_verifier.rotate(serializer: Marshal)      message = old_verifier.generate(""message"")      new_verifier.verify(message)     # BEFORE:     # => raises JSON::ParserError     # AFTER:     # => ""message""     ```  * Allow rotation of serializers for `MessageEncryptor` when using a non-standard initial serializer.  Similar to `MessageVerifier`  the serializer could not be rotated when the initial serializer raised an error other than `TypeError` and `JSON::ParserError`  such as `Psych::SyntaxError` or a custom error.  * Raise `MessageEncryptor::InvalidMessage` from `decrypt_and_verify` regardless of cipher.  Previously  when a `MessageEncryptor` was using a non-AEAD cipher such as AES-256-CBC  a corrupt or tampered message would raise `MessageVerifier::InvalidSignature` due to reliance on `MessageVerifier` for verification.  Now  the verification mechanism is transparent to the user:      ```ruby     encryptor = ActiveSupport::MessageEncryptor.new(""x"" * 32  cipher: ""aes-256-gcm"")     message = encryptor.encrypt_and_sign(""message"")     encryptor.decrypt_and_verify(message.next)     # => raises ActiveSupport::MessageEncryptor::InvalidMessage      encryptor = ActiveSupport::MessageEncryptor.new(""x"" * 32  cipher: ""aes-256-cbc"")     message = encryptor.encrypt_and_sign(""message"")     encryptor.decrypt_and_verify(message.next)     # BEFORE:     # => raises ActiveSupport::MessageVerifier::InvalidSignature     # AFTER:     # => raises ActiveSupport::MessageEncryptor::InvalidMessage     ```  * Support `nil` original value when using `MessageVerifier#verify`. Previously  `MessageVerifier#verify` did not work with `nil` original values  though both `MessageVerifier#verified` and `MessageEncryptor#decrypt_and_verify` do:      ```ruby     encryptor = ActiveSupport::MessageEncryptor.new(""x"" * 32)     message = encryptor.encrypt_and_sign(nil)      encryptor.decrypt_and_verify(message)     # => nil      verifier = ActiveSupport::MessageVerifier.new(""secret"")     message = verifier.generate(nil)      verifier.verified(message)     # => nil      verifier.verify(message)     # BEFORE:     # => raises ActiveSupport::MessageVerifier::InvalidSignature     # AFTER:     # => nil     ```  * Improve performance of verifying a message when it has expired and one or more rotations have been configured:      ```ruby     # frozen_string_literal: true     require ""benchmark/ips""     require ""active_support/all""      verifier = ActiveSupport::MessageVerifier.new(""new secret"")     verifier.rotate(""old secret"")      message = verifier.generate({ ""data"" => ""x"" * 100 }  expires_at: 1.day.ago)      Benchmark.ips do |x|       x.report(""expired message"") do         verifier.verified(message)       end     end     ```    __Before__      ```     Warming up --------------------------------------          expired message     1.442k i/100ms     Calculating -------------------------------------          expired message     14.403k (± 1.7%) i/s -     72.100k in   5.007382s     ```    __After__      ```     Warming up --------------------------------------          expired message     1.995k i/100ms     Calculating -------------------------------------          expired message     19.992k (± 2.0%) i/s -    101.745k in   5.091421s     ```  Fixes #47185. ",closed,activesupport/CHANGELOG.md; activesupport/lib/active_support/message_encryptor.rb; activesupport/lib/active_support/message_verifier.rb; activesupport/lib/active_support/messages/codec.rb; activesupport/lib/active_support/messages/metadata.rb; activesupport/lib/active_support/messages/rotator.rb; activesupport/test/message_encryptor_test.rb; activesupport/test/message_encryptors_test.rb; activesupport/test/message_verifier_test.rb; activesupport/test/messages/message_encryptor_rotator_test.rb; activesupport/test/messages/message_rotator_tests.rb,jonathanhefner,2023-02-08T23:48:43Z,2023-02-12T21:50:51Z
47113,47116,Fix SQLWarning + exec_delete and exec_update tests,"### Motivation / Background  Closes: https://github.com/rails/rails/issues/47113  These tests were failing intermittently if the created `Post` had an id exceeding 42  because no Post would be targeted by the condition in either the `UPDATE` or `DELETE` statement. This was an error on my part -- I assumed Post ids would auto-increment from 1 onwards. (`42` was selected rather arbitrarily.)  ### Detail  To address the issue  I think it's simplest to change the condition to ` WHERE id > (0+'foo')`  since we're guaranteed to have ids that are `> 0`.  Additionally  I realized that the tests weren't quite set up correctly  because warnings behaviour wasn't enabled 🤦‍♀️ I changed the `db_warnings_action` to `:log` so that we're actually asserting that capturing SQL warnings doesn't impact the affected row count for `exec_update` and `exec_delete`. (Otherwise  if the DB warnings action is nil  `#handle_warnings` will just return early)  ### Checklist  Before submitting the PR make sure the following are checked:  * [X] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [X] Tests are added or updated if you fix a bug or add a feature. * [X] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.  cc @eileencodes @yahonda ",closed,activerecord/test/cases/adapters/mysql2/mysql2_adapter_test.rb,adrianna-chang-shopify,2023-01-23T20:05:10Z,2023-01-23T20:21:46Z
47096,48845,Use Rack-compatible casing for x-cascade headers in router,"### Motivation / Background  This PR changes the routing + exceptions middleware to use the expected casing for the x-cascade header: in Rack 2  this is mixed-case  and in Rack 3  this is lower case.  This also fixes https://github.com/rails/rails/issues/47096  and reimplements the changes [from this PR](https://github.com/rails/rails/pull/47108).  ### Detail  More details on taking a conditional constants approach [here](https://github.com/skipkayhil/tmp-rails/issues/1) (as opposed to wrapping the response in `Rack::Response` to allow case-insensitive header access).  ### Additional information  <!-- Provide additional information such as benchmarks  reference to other repositories or alternative solutions. -->  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,actionpack/lib/action_dispatch/constants.rb; actionpack/lib/action_dispatch/http/request.rb; actionpack/lib/action_dispatch/journey/router.rb; actionpack/lib/action_dispatch/middleware/debug_exceptions.rb; actionpack/lib/action_dispatch/middleware/public_exceptions.rb; actionpack/lib/action_dispatch/middleware/show_exceptions.rb; actionpack/lib/action_dispatch/routing/mapper.rb; actionpack/lib/action_dispatch/routing/route_set.rb; actionpack/test/controller/integration_test.rb; actionpack/test/dispatch/debug_exceptions_test.rb; actionpack/test/dispatch/routing_test.rb; actionpack/test/dispatch/show_exceptions_test.rb; actionpack/test/journey/router_test.rb,adrianna-chang-shopify,2023-07-28T19:53:00Z,2023-07-28T20:40:34Z
47072,47121,Don't reset `view_paths` in `Rails::ApplicationController`,"Fixes https://github.com/rails/rails/issues/47072  Using `prepend_view_paths` instead means that other templates (eg Action Text views) can still be rendered within mailer previews. ",closed,railties/lib/rails/application_controller.rb; railties/test/application/mailer_previews_test.rb,ghiculescu,2023-01-24T03:02:53Z,2023-01-24T16:22:42Z
47060,47723,Add context when changing secret_key_base,"### Motivation / Background  The current documentation in https://github.com/rails/rails/blob/main/guides/source/security.md#L118 only mentions that changing `secret_key_base` will expire currently active sessions  but it does not list other things that will be affected such as encrypted cookies  signed cookies  and Action Text attachments.  This Pull Request aims to add additional context to the documentation to better inform users of the potential impacts of changing the `secret_key_base`.  ### Detail  N/A  ### Additional information  N/A  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,guides/source/security.md,kinduff,2023-03-21T11:27:46Z,2023-04-05T15:00:30Z
47057,47105,Make `raise_on_missing_translations` raise on any missing translation,"<!-- Thanks for contributing to Rails!  Please do not make *Draft* pull requests  as they still send notifications to everyone watching the Rails repo.  Create a pull request when it is ready for review and feedback from the Rails team :).  If your pull request affects documentation or any non-code changes  guidelines for those changes are [available here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)  About this template  The following template aims to help contributors write a good description for their pull requests. We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added)  motivation behind the changes  and complete the checklist below before opening a pull request.  Feel free to discard it if you need to (e.g. when you just fix a typo). -->  ### Motivation / Background  This Pull Request has been created because currently `config.i18n.raise_on_missing_translations = true` only works when calling `t('missing.key')` in a view or controller. But as noted in https://github.com/rails/rails/issues/47057 the name suggests it will raise anytime a key isn't recognised.  ### Detail  This Pull Request implements an `I18n.exception_handler`  when `config.i18n.raise_on_missing_translations == true`. It slightly tweaks the default behaviour to raise on any exception.  The existing raise behaviour for `t` in views and controllers is left unchanged.  I've also upgraded the i18n guide to reflect this behaviour  as well as adding a note to the upgrade guide.  ### Additional information  Fixes https://github.com/rails/rails/issues/47057.  We probably don't need  https://github.com/rails/rails/pull/45361 if this is merged.  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,actionmailbox/test/dummy/config/environments/development.rb; actionmailbox/test/dummy/config/environments/test.rb; actiontext/test/dummy/config/environments/development.rb; actiontext/test/dummy/config/environments/test.rb; activestorage/test/dummy/config/environments/development.rb; activestorage/test/dummy/config/environments/test.rb; activesupport/CHANGELOG.md; activesupport/lib/active_support/i18n_railtie.rb; guides/source/configuring.md; guides/source/i18n.md; guides/source/upgrading_ruby_on_rails.md; railties/lib/rails/generators/rails/app/templates/config/environments/development.rb.tt; railties/lib/rails/generators/rails/app/templates/config/environments/test.rb.tt; railties/test/application/configuration_test.rb,ghiculescu,2023-01-22T22:20:45Z,2023-01-23T19:10:50Z
47048,47065,Emphasis that a request must be made first,Hopefully this prevents future confusion like #47048 :pray:,closed,guides/source/testing.md,zzak,2023-01-20T01:21:56Z,2023-01-20T01:35:47Z
47020,47295,ActionMailbox::IncinerationJobTest create test email without routing,"<!-- Thanks for contributing to Rails!  Please do not make *Draft* pull requests  as they still send notifications to everyone watching the Rails repo.  Create a pull request when it is ready for review and feedback from the Rails team :).  If your pull request affects documentation or any non-code changes  guidelines for those changes are [available here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)  About this template  The following template aims to help contributors write a good description for their pull requests. We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added)  motivation behind the changes  and complete the checklist below before opening a pull request.  Feel free to discard it if you need to (e.g. when you just fix a typo). -->  ### Motivation / Background  <!-- Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important? If you are fixing a specific issue  include ""Fixes #ISSUE"" (replace with the issue number  remove the quotes) and the issue will be linked to this PR. -->  Fixes #47020  ### Detail  This Pull Request changes creation of test email from `receive_inbound_email_from_fixture` to `create_inbound_email_from_fixture`. For this test  it does not appear the email needs to be routed.  ### Additional information  <!-- Provide additional information such as benchmarks  reference to other repositories or alternative solutions. -->  ### Checklist  Before submitting the PR make sure the following are checked:  * [X] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [X] Tests are added or updated if you fix a bug or add a feature. * [X] NA: CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,actionmailbox/test/jobs/incineration_job_test.rb,jesse-shopify,2023-02-07T19:47:00Z,2023-02-07T19:59:02Z
46884,47107,Use `config.credentials.*` in credentials commands,"This commit changes the credentials commands (e.g. `bin/rails credentials:edit`) to respect `config.credentials.content_path` and `config.credentials.key_path` when set in `config/application.rb`.  Before this commit:  * Unlike other `bin/rails` commands  `bin/rails credentials:edit` ignored `RAILS_ENV`  and would always edit `config/credentials.yml.enc`.  * `bin/rails credentials:edit --environment foo` would create and edit `config/credentials/foo.yml.enc`.  * If `config.credentials.content_path` or `config.credentials.key_path` was set  `bin/rails credentials:edit` could not be used.  Editing credentials required using `bin/rails encrypted:edit path/to/credentials --key path/to/key`.  After this commit:  * `bin/rails credentials:edit` will edit the credentials file that the app would load for the current `RAILS_ENV`.  * `bin/rails credentials:edit` respects `config.credentials.content_path` and `config.credentials.key_path` when set in `config/application.rb`. Using `RAILS_ENV`  environment-specific paths can be set  such as:      ```ruby     # config/application.rb     module MyCoolApp       class Application < Rails::Application         config.credentials.content_path = ""my_credentials/#{Rails.env}.yml.enc""          config.credentials.key_path = ""path/to/production.key"" if Rails.env.production?       end     end     ```  * `bin/rails credentials:edit --environment foo` will create `config/credentials/foo.yml.enc` _if_ `config.credentials.content_path` is not set for the `foo` environment.  It will then edit the credentials file that the app would load for the `foo` environment.  Note that the credentials commands do not run initializers.  Therefore  they will not  for example  attempt to connect to the database of the specified environment.  Fixes #37631. Fixes #41830. Fixes #46884. Closes #46904.  ---  I have a follow-up commit for supporting `config.credentials.content_path` and `config.credentials.key_path` in `config/environments/*.rb`.  /cc @ghiculescu I've added you as a co-author for your work on #46904.  ",closed,guides/source/configuring.md; railties/CHANGELOG.md; railties/lib/rails/application/configuration.rb; railties/lib/rails/commands/credentials/credentials_command.rb; railties/lib/rails/generators/rails/credentials/credentials_generator.rb; railties/test/commands/credentials_test.rb,jonathanhefner,2023-01-22T23:04:20Z,2023-01-25T22:27:52Z
46841,46849,Fix default environments in guide,"refs: 229fd2a02f closes: #46841",closed,guides/source/debugging_rails_applications.md,woto,2022-12-29T01:44:18Z,2022-12-30T18:27:00Z
46804,46928,Fix action text dummy app so integration tests can run,"### Motivation / Background  Fix action text tests by updating dummy app to use import maps instead of webpacker.  Include the js and css in the application.html.erb which now shows the rich text editor on the page. This allows the integration tests to run.  This Pull Request has been created because https://github.com/rails/rails/issues/46804  ### Additional information  ```` cd actiontext b exec rake test:system ````  For some reason the dummy app did not use the application.html.erb layout (https://github.com/rails/rails/pull/46928/files#diff-b042dc3a842d3cade3d96198fa398df168316b1d5df57fd88ec3a8827df3a699R4). This change is needed to load the assets on the page for the rich text editor.  I also pruned the babel/yarn/package.json stuff  to keep the dummy app simple.   ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [ ] Tests are added or updated if you fix a bug or add a feature. * [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,actiontext/test/dummy/.postcssrc.yml; actiontext/test/dummy/app/controllers/messages_controller.rb; actiontext/test/dummy/app/javascript/application.js; actiontext/test/dummy/app/views/layouts/application.html.erb; actiontext/test/dummy/babel.config.js; actiontext/test/dummy/config/importmap.rb; actiontext/test/dummy/config/initializers/assets.rb; actiontext/test/dummy/config/webpack/development.js; actiontext/test/dummy/config/webpack/environment.js; actiontext/test/dummy/config/webpack/production.js; actiontext/test/dummy/config/webpack/test.js; actiontext/test/dummy/config/webpacker.yml; actiontext/test/dummy/package.json; actiontext/test/dummy/postcss.config.js; actiontext/test/dummy/yarn.lock; actiontext/test/system/system_test_helper_test.rb,hahmed,2023-01-08T22:30:26Z,2023-01-13T21:52:47Z
46803,46808,"Revert ""Focus editor after calling `fill_in_rich_text_area`""","### Motivation / Background  Closes [rails/rails#46803][].  ### Detail  This reverts commit 67a4ac6c5651a00e613de298631d460116bba38c.  ### Additional information  Once the system test helper test suite executes in CI  we can re-introduce the changes as part of [rails/rails#46807][].  [rails/rails#46803]: https://github.com/rails/rails/issues/46803#issuecomment-1364112967 [rails/rails#46807]: https://github.com/rails/rails/pull/46807  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,actiontext/CHANGELOG.md; actiontext/lib/action_text/system_test_helper.rb; actiontext/test/system/system_test_helper_test.rb,seanpdoyle,2022-12-23T19:20:39Z,2022-12-23T20:16:33Z
46784,47336,Fix raw_post empty bug when when Transfer-Encoding: chunked,"### Motivation / Background  This PR fixes the [issue](https://github.com/rails/rails/issues/46784) with `request.raw_post` property being empty for chunked requests. (Transfer-Encoding header present and without a Content-Length value). It was inspired from this previous [PR](https://github.com/rails/rails/pull/37423)  but without the need of doing a second `rewind` of the request body.  A similar fix was done on [Puma webserver](https://github.com/puma/puma/pull/2287)  but with this fix  `raw_post` will work as expected for any Rack based http server.  ### Detail  This pull request changes `ActionDispatch::Request#raw_post` and `ActionDispatch::Request#content_length` methods  to take into account the presence of `Transfer-Encoding` header or not.  According to [HTTP/1.1](https://httpwg.org/specs/rfc9112.html#rfc.section.6.2) RFC  when `Transfer-Encoding` is present  a sender must not send a `Content-Length` header field on a request  so because of that we can't rely on that field when reading the raw request body stream and calculating its content length for the upstream app.  So what this change does is to read the entire requests's `body_stream` for `raw_post` instead of using `content_length` as its length when `Transfer-Encoding` header is present.  And it uses the `raw_post#bytesize` value to calculate the request's `content_length` instead of reading this value from the `Content-Length` header  when `Transfer-Encoding` header is present.  ### Additional information  To test this case an integration railties test `http_request_test.rb` was used  in order for it to be similar to real use cases.  It is also recommended to test this change manually with a real Rails app running on different Rack servers (e.g. Puma  Unicorn  Webrick or Thin)  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. ",closed,actionpack/lib/action_dispatch/http/request.rb; railties/test/railties/http_request_test.rb,pedro108,2023-02-09T13:44:17Z,2023-02-12T01:16:19Z
46764,47402,Fixes #46764 API Documentation,"### Motivation / Background  Fixes #46764 by adding further explanation of controllers in API only mode (via example).  ### Detail  Guide for API Rails app is lacking example of what controllers look like in API-only mode. Added example of generating resource in API-only and viewing JSON output.  ### Checklist  Before submitting the PR make sure the following are checked:  * [ x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [n/a ] Tests are added or updated if you fix a bug or add a feature. * [n/a ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,guides/source/api_app.md,davidomullan,2023-02-15T14:46:00Z,2023-02-18T21:19:55Z
46731,46742,AR default scopes: only include `all_queries` default scopes on `reload`,"Fixes https://github.com/rails/rails/issues/46731  The current behaviour on `reload` is to apply all the default scopes  if any are marked as `all_queries: true`. The correct behaviour is to only apply `all_queries: true` default scopes on `reload`.",closed,activerecord/lib/active_record/persistence.rb; activerecord/lib/active_record/scoping/default.rb; activerecord/lib/active_record/scoping/named.rb; activerecord/test/cases/scoping/default_scoping_test.rb,ghiculescu,2022-12-15T19:00:45Z,2022-12-16T14:02:19Z
46724,46915,Update `ActionPack` render template with locals tests,"<!-- Thanks for contributing to Rails!  Please do not make *Draft* pull requests  as they still send notifications to everyone watching the Rails repo.  Create a pull request when it is ready for review and feedback from the Rails team :).  If your pull request affects documentation or any non-code changes  guidelines for those changes are [available here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)  About this template  The following template aims to help contributors write a good description for their pull requests. We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added)  motivation behind the changes  and complete the checklist below before opening a pull request.  Feel free to discard it if you need to (e.g. when you just fix a typo). -->  ### Motivation / Background  <!-- Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important? If you are fixing a specific issue  include ""Fixes #ISSUE"" (replace with the issue number  remove the quotes) and the issue will be linked to this PR. -->  This Pull Request has been created to close https://github.com/rails/rails/issues/46724.  ### Detail  This Pull Request updates the `ActionPack` render template with locals tests to: - Include a `""with a leading slash""` test so that these are consistent with the render template directory tests. - Use the`with_locals_without_key` helper method instead of `with_locals` for the `""rendering a template with local variables without key""` test. This method has also been updated to include a slash in the template string as required for path arg normalization when the template key is excluded.  ### Additional information  <!-- Provide additional information such as benchmarks  reference to other repositories or alternative solutions. -->  I think the summary in [this section of the guides](https://guides.rubyonrails.org/layouts_and_rendering.html#wrapping-it-up) makes it quite clear that using a path without a slash and without the `template:` key would search for an action in the current controller  and therefore doesn't require updating.  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,actionpack/test/controller/new_base/render_template_test.rb,joshuay03,2023-01-07T01:55:35Z,2023-01-16T23:40:27Z
46689,46694,Fix: `StrictLoadingViolationError` when concatenating or setting association when non-persisted owner has primary key,"Fixes https://github.com/rails/rails/issues/46689  I think this is a neater (and safer!) solution than https://github.com/rails/rails/pull/46613 anyway.  cc @richardboehme please verify the fix. cc @adrianna-chang-shopify please check this doesn't cause https://github.com/rails/rails/issues/46685 again! cc @eileencodes because strict loading.",closed,activerecord/lib/active_record/associations/association.rb; activerecord/lib/active_record/associations/collection_association.rb; activerecord/test/cases/strict_loading_test.rb,ghiculescu,2022-12-10T03:28:05Z,2022-12-12T16:57:21Z
46677,46678,Fix Issue #46677,"Fix inconsistent behavior in form helper date/time tags with options.  This change makes date/time options (value  min  max) in `time_field`  `date_field`  `datetime_field`  `week_field`  `month_field` form helpers behave in a unified way.",closed,actionview/CHANGELOG.md; actionview/lib/action_view/helpers/tags/date_field.rb; actionview/lib/action_view/helpers/tags/datetime_field.rb; actionview/lib/action_view/helpers/tags/datetime_local_field.rb; actionview/lib/action_view/helpers/tags/month_field.rb; actionview/lib/action_view/helpers/tags/time_field.rb; actionview/lib/action_view/helpers/tags/week_field.rb; actionview/test/template/form_helper_test.rb,kryzhovnik,2022-12-08T21:07:40Z,2022-12-12T18:06:24Z
46621,46626,Add matcher support to `assert_enqueued_email_with`,"### Motivation / Background  Currently `assert_enqueued_with` allows you to pass procs for matching `args`.  However  `assert_enqueued_email_with` doesn't let you do that for `args` and `params`.  I propose that we should.  For example  if you are passing a generated token to an email  you would have to mock/stub your way to verify that it looks right in job args. Or you have to reach for the lower level `assert_enqueued_with` helper. With this change you could simply do something like this:  ```ruby assert_enqueued_email_with UserMailer  :verification  params: -> p { p[:token] =~ /\w+/ } ```  Fixes #46621.  ### Detail  Since `assert_enqueued_email_with` tries to be clever about figuring out whether `args` are `params`  I decided to leave that logic completely intact (to preserve current behavior)  and add another conditional branch which only kicks in if either args or params are a proc. In such a case  it never acts clever about args/params  and simply passes down a lambda that fails if any job args don't match  and succeeds if they do.  **One unrelated question**: why are we [currently overwriting](https://github.com/rails/rails/blob/main/actionmailer/lib/action_mailer/test_helper.rb#L153) the passed-in params? Is that a bug?  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. * [x] CI is passing. ",closed,actionmailer/CHANGELOG.md; actionmailer/lib/action_mailer/test_helper.rb; actionmailer/test/test_helper_test.rb,maxim,2022-12-01T17:44:31Z,2023-05-11T18:06:35Z
46578,46595,Use cgi 0.3.6 or higher to address CookieStoreTest#test_session_store_with_all_domains,"### Motivation / Background  This commit addresses the following error by using cgi 0.3.6 that includes https://github.com/ruby/cgi/pull/29  <!-- Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important? If you are fixing a specific issue  include ""Fixes #ISSUE"" (replace with the issue number  remove the quotes) and the issue will be linked to this PR. -->  ### Detail  ```ruby $ ruby -v ruby 3.1.3p185 (2022-11-24 revision 1a6b16756e) [x86_64-linux] $ gem info cgi  *** LOCAL GEMS ***  cgi (0.3.5)     Author: Yukihiro Matsumoto     Homepage: https://github.com/ruby/cgi     Licenses: Ruby  BSD-2-Clause     Installed at (default): /home/yahonda/.rbenv/versions/3.1.3/lib/ruby/gems/3.1.0      Support for the Common Gateway Interface protocol. $ ```  ```ruby $ cd actionpack $ bin/test test/dispatch/session/cookie_store_test.rb -n test_session_store_with_all_domains Running 27 tests in a single process (parallelization threshold is 50) Run options: -n test_session_store_with_all_domains --seed 24288  E  Error: CookieStoreTest#test_session_store_with_all_domains: ArgumentError: invalid domain: "".example.com""     /home/yahonda/.rbenv/versions/3.1.3/lib/ruby/3.1.0/cgi/cookie.rb:128:in `domain='     /home/yahonda/.rbenv/versions/3.1.3/lib/ruby/3.1.0/cgi/cookie.rb:95:in `initialize'     /home/yahonda/.rbenv/versions/3.1.3/lib/ruby/gems/3.1.0/gems/rack-2.2.4/lib/rack/mock.rb:239:in `new'     /home/yahonda/.rbenv/versions/3.1.3/lib/ruby/gems/3.1.0/gems/rack-2.2.4/lib/rack/mock.rb:239:in `block in parse_cookies_from_header'     /home/yahonda/.rbenv/versions/3.1.3/lib/ruby/gems/3.1.0/gems/rack-2.2.4/lib/rack/mock.rb:236:in `each'     /home/yahonda/.rbenv/versions/3.1.3/lib/ruby/gems/3.1.0/gems/rack-2.2.4/lib/rack/mock.rb:236:in `parse_cookies_from_header'     /home/yahonda/.rbenv/versions/3.1.3/lib/ruby/gems/3.1.0/gems/rack-2.2.4/lib/rack/mock.rb:187:in `initialize'     /home/yahonda/.rbenv/versions/3.1.3/lib/ruby/gems/3.1.0/gems/rack-test-2.0.2/lib/rack/test.rb:360:in `new'     /home/yahonda/.rbenv/versions/3.1.3/lib/ruby/gems/3.1.0/gems/rack-test-2.0.2/lib/rack/test.rb:360:in `process_request'     /home/yahonda/.rbenv/versions/3.1.3/lib/ruby/gems/3.1.0/gems/rack-test-2.0.2/lib/rack/test.rb:155:in `request'     /home/yahonda/src/github.com/rails/rails/actionpack/lib/action_dispatch/testing/integration.rb:285:in `process'     /home/yahonda/src/github.com/rails/rails/actionpack/lib/action_dispatch/testing/integration.rb:16:in `get'     /home/yahonda/src/github.com/rails/rails/actionpack/lib/action_dispatch/testing/integration.rb:376:in `get'     /home/yahonda/src/github.com/rails/rails/actionpack/test/dispatch/session/cookie_store_test.rb:420:in `get'     /home/yahonda/src/github.com/rails/rails/actionpack/test/dispatch/session/cookie_store_test.rb:379:in `block in test_session_store_with_all_domains'     /home/yahonda/src/github.com/rails/rails/actionpack/test/dispatch/session/cookie_store_test.rb:438:in `block in with_test_route_set'     /home/yahonda/src/github.com/rails/rails/actionpack/test/abstract_unit.rb:157:in `with_routing'     /home/yahonda/src/github.com/rails/rails/actionpack/test/dispatch/session/cookie_store_test.rb:424:in `with_test_route_set'     /home/yahonda/src/github.com/rails/rails/actionpack/test/dispatch/session/cookie_store_test.rb:378:in `test_session_store_with_all_domains'  bin/test test/dispatch/session/cookie_store_test.rb:377  Finished in 0.079807s  12.5303 runs/s  0.0000 assertions/s. 1 runs  0 assertions  0 failures  1 errors  0 skips $ ``` ### Additional information  Related to https://github.com/ruby/cgi/pull/29 https://github.com/rails/rails/issues/46578  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [ ] Tests are added or updated if you fix a bug or add a feature. * [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. * [x] CI is passing.  ",closed,Gemfile; Gemfile.lock,yahonda,2022-11-28T04:59:53Z,2022-11-28T05:27:52Z
46577,47028,Fix inaccurate error message when connecting to `postgres` database,"<!-- Thanks for contributing to Rails!  Please do not make *Draft* pull requests  as they still send notifications to everyone watching the Rails repo.  Create a pull request when it is ready for review and feedback from the Rails team :).  If your pull request affects documentation or any non-code changes  guidelines for those changes are [available here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)  About this template  The following template aims to help contributors write a good description for their pull requests. We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added)  motivation behind the changes  and complete the checklist below before opening a pull request.  Feel free to discard it if you need to (e.g. when you just fix a typo). -->  ### Motivation / Background  <!-- Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important? If you are fixing a specific issue  include ""Fixes #ISSUE"" (replace with the issue number  remove the quotes) and the issue will be linked to this PR. -->  Fixes #46577  ### Detail  This Pull Request directly surfaces a Postgres connection error message when the database being connected to is named `postgres`. Prior to this  the connection error handling logic would almost always choose the same path and provide this inaccurate message:  > We could not find your database: postgres. Which can be found in the database configuration file located at config/database.yml.  This situation occurs when running `bin/rails db:create`. Rails must connect to an existing database in order to create the new database. Rails chooses the (generally present/default) `postgres` database:  https://github.com/rails/rails/blob/a289f4c127913fd36868e3e799999a5e32305248/activerecord/lib/active_record/tasks/postgresql_database_tasks.rb#L102-L104    ### Additional information  <!-- Provide additional information such as benchmarks  reference to other repositories or alternative solutions. -->  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb; activerecord/test/cases/adapters/postgresql/postgresql_adapter_test.rb,bensheldon,2023-01-17T03:51:18Z,2023-01-20T22:25:33Z
46569,46586,Improve `ActiveSupport::Inflector.transliterate` performance [Fix #46569],"### Motivation / Background  `ActiveSupport::Inflector.transliterate` does not need to perform any work when the string that is passed to it is already in ASCII.  This has an impact on `ActiveSupport::Inflector.parameterize` as well.  Resolves #46569  ### Detail  This Pull Request adds a check to `transliterate` to avoid performing expensive work if the string is already ASCII only.  ### Additional information  Benchmark indicates that  * same performance when transliteration is actually required (non-ASCII characters are present in the string) * current code is 20x slower for regular length ASCII-only strings (~30 characters) * current code is 670x slower for very long ASCII-only strings (~2000 characters)  Benchmark included below  ### Benchmark  ```ruby # frozen_string_literal: true  require ""bundler/inline""  gemfile(true) do   source ""https://rubygems.org""    git_source(:github) { |repo| ""https://github.com/#{repo}.git"" }    gem ""rails""  github: ""rails/rails""  branch: ""main""   gem ""benchmark-ips"" end  require ""active_support"" require ""active_support/inflector/transliterate""  module ActiveSupport::Inflector   def transliterate_fast(string  replacement = ""?""  locale: nil)     raise ArgumentError  ""Can only transliterate strings. Received #{string.class.name}"" unless string.is_a?(String)     raise ArgumentError  ""Cannot transliterate strings with #{string.encoding} encoding"" unless ALLOWED_ENCODINGS_FOR_TRANSLITERATE.include?(string.encoding)      return string if string.ascii_only? # 👈 my change here      string = string.dup if string.frozen? # 👈 moved this down to avoid duplicating a string before argument checks     input_encoding = string.encoding      # US-ASCII is a subset of UTF-8 so we'll force encoding as UTF-8 if     # US-ASCII is given. This way we can let tidy_bytes handle the string     # in the same way as we do for UTF-8     string.force_encoding(Encoding::UTF_8) if string.encoding == Encoding::US_ASCII      # GB18030 is Unicode compatible but is not a direct mapping so needs to be     # transcoded. Using invalid/undef :replace will result in loss of data in     # the event of invalid characters  but since tidy_bytes will replace     # invalid/undef with a ""?"" we're safe to do the same beforehand     string.encode!(Encoding::UTF_8  invalid: :replace  undef: :replace) if string.encoding == Encoding::GB18030      transliterated = I18n.transliterate(       ActiveSupport::Multibyte::Unicode.tidy_bytes(string).unicode_normalize(:nfc)        replacement: replacement        locale: locale     )      # Restore the string encoding of the input if it was not UTF-8.     # Apply invalid/undef :replace as tidy_bytes does     transliterated.encode!(input_encoding  invalid: :replace  undef: :replace) if input_encoding != transliterated.encoding      transliterated   end end  # Enumerate some representative scenarios here. # # It is very easy to make an optimization that improves performance for a # specific scenario you care about but regresses on other common cases. # Therefore  you should test your change against a list of representative # scenarios. Ideally  they should be based on real-world scenarios extracted # from production applications. SCENARIOS = {   ""Empty""                         => """"    ""Single Space""                  => "" ""    ""ASCII string""                  => ""This is a normal ASCII String.""    ""US ASCII encoded String""       => String.new(""This is a normal ASCII String.""  encoding: Encoding::US_ASCII)    ""Very Long String""              => ""Very Long String :)"" * 100    ""Very Long french String""       => ""Very Long Stringé :)"" * 100    ""French string""                 => ""Ceci est une chaîne de test pour la méthode de translittération.""    ""UTF-8 encoded Chinese string""  => String.new(""這是音譯方法的測試字符串""  encoding: Encoding::UTF_8)  }  SCENARIOS.each_pair do |name  value|   puts   puts "" #{name} "".center(80  ""="")   puts    Benchmark.ips do |x|     x.report(""transliterate"")      { ActiveSupport::Inflector.transliterate(value) }     x.report(""transliterate_fast"") { ActiveSupport::Inflector.transliterate_fast(value) }     x.compare!   end end ```  ### Benchmark results  ```txt ==================================== Empty =====================================  Warming up --------------------------------------        transliterate    65.500k i/100ms   transliterate_fast   687.485k i/100ms Calculating -------------------------------------        transliterate    657.632k (± 0.8%) i/s -      3.340M in   5.079936s   transliterate_fast      6.869M (± 1.6%) i/s -     34.374M in   5.005813s  Comparison:   transliterate_fast:  6868816.3 i/s        transliterate:   657631.8 i/s - 10.44x  (± 0.00) slower  ================================= Single Space =================================  Warming up --------------------------------------        transliterate    62.732k i/100ms   transliterate_fast   678.223k i/100ms Calculating -------------------------------------        transliterate    628.475k (± 0.8%) i/s -      3.199M in   5.090978s   transliterate_fast      6.799M (± 0.2%) i/s -     34.589M in   5.087534s  Comparison:   transliterate_fast:  6798890.3 i/s        transliterate:   628475.2 i/s - 10.82x  (± 0.00) slower  ================================= ASCII string =================================  Warming up --------------------------------------        transliterate    32.095k i/100ms   transliterate_fast   687.396k i/100ms Calculating -------------------------------------        transliterate    319.529k (± 0.8%) i/s -      1.605M in   5.022547s   transliterate_fast      6.879M (± 0.3%) i/s -     35.057M in   5.096224s  Comparison:   transliterate_fast:  6879113.6 i/s        transliterate:   319528.9 i/s - 21.53x  (± 0.00) slower  =========================== US ASCII encoded String ============================  Warming up --------------------------------------        transliterate    33.027k i/100ms   transliterate_fast   688.354k i/100ms Calculating -------------------------------------        transliterate    330.268k (± 0.9%) i/s -      1.651M in   5.000445s   transliterate_fast      6.861M (± 0.8%) i/s -     34.418M in   5.016963s  Comparison:   transliterate_fast:  6860726.0 i/s        transliterate:   330267.8 i/s - 20.77x  (± 0.00) slower  =============================== Very Long String ===============================  Warming up --------------------------------------        transliterate   985.000  i/100ms   transliterate_fast   672.674k i/100ms Calculating -------------------------------------        transliterate      9.899k (± 0.5%) i/s -     50.235k in   5.074820s   transliterate_fast      6.729M (± 0.7%) i/s -     34.306M in   5.098807s  Comparison:   transliterate_fast:  6728668.4 i/s        transliterate:     9899.2 i/s - 679.72x  (± 0.00) slower  =========================== Very Long french String ============================  Warming up --------------------------------------        transliterate   671.000  i/100ms   transliterate_fast   671.000  i/100ms Calculating -------------------------------------        transliterate      6.635k (± 1.9%) i/s -     33.550k in   5.058424s   transliterate_fast      6.622k (± 1.7%) i/s -     33.550k in   5.068289s  Comparison:        transliterate:     6634.9 i/s   transliterate_fast:     6621.7 i/s - same-ish: difference falls within error  ================================ French string =================================  Warming up --------------------------------------        transliterate    14.726k i/100ms   transliterate_fast    14.679k i/100ms Calculating -------------------------------------        transliterate    145.933k (± 1.5%) i/s -    736.300k in   5.046537s   transliterate_fast    146.753k (± 1.2%) i/s -    733.950k in   5.001937s  Comparison:   transliterate_fast:   146752.8 i/s        transliterate:   145933.1 i/s - same-ish: difference falls within error  ========================= UTF-8 encoded Chinese string =========================  Warming up --------------------------------------        transliterate    13.905k i/100ms   transliterate_fast    14.093k i/100ms Calculating -------------------------------------        transliterate    141.222k (± 1.9%) i/s -    709.155k in   5.023366s   transliterate_fast    140.510k (± 1.7%) i/s -    704.650k in   5.016400s  Comparison:        transliterate:   141221.9 i/s   transliterate_fast:   140510.4 i/s - same-ish: difference falls within error ```",closed,activesupport/lib/active_support/inflector/transliterate.rb,SeanLF,2022-11-26T15:41:58Z,2022-11-28T13:15:17Z
46559,46566,LoggerThreadSafeLevel only impact the receiving logger,"Fix: https://github.com/rails/rails/issues/46559  That's how it initially worked  but this was broken in https://github.com/rails/rails/pull/34055  That PR replaced an instance variable by a class variable  causing the level to be per thread  but to apply to all logger instances. ",closed,activesupport/lib/active_support/logger_thread_safe_level.rb; activesupport/test/logger_test.rb,casperisfine,2022-11-24T11:40:27Z,2022-11-24T11:49:30Z
46532,46634,Rescue `NameError` for association class name only,"This prevents converting a `NameError` from incidental code into a ""friendly"" `NameError` for the association model class.  For example  in a scenario like:    ```ruby   # app/models/post.rb   class Post < ActiveRecord::Base     belongs_to :author   end   ```    ```ruby   # app/models/author.rb   class Author < ActiveRecord::Base     validates_presence :name   end   ```  This changes the error message from:  > Missing model class Author for the Post#author association. You can > specify a different model class with the :class_name option.  to:  > undefined method 'validates_presence' for Author:Class > > Did you mean?  validates_presence_of  Fixes #46532. ",closed,activerecord/lib/active_record/reflection.rb; activerecord/test/cases/reflection_test.rb,jonathanhefner,2022-12-02T22:25:27Z,2022-12-02T22:44:25Z
46446,48177,"Revert ""Merge pull request #46444 from eileencodes/revert-forgetting-…","…assignment-changes""  This reverts commit 586436d370126322a1470c10c1fde73cf8dc8875  reversing changes made to 866e053732636e64685a72e22d76e7988d06a000.  This is an unrevert of https://github.com/rails/rails/pull/46282. I should have reverted the revert sooner but it kept falling off my radar.  Closes #46446  cc/ @jonathanhefner ",closed,activemodel/lib/active_model/attribute.rb,eileencodes,2023-05-09T15:20:55Z,2023-05-09T17:29:28Z
46392,46613,Fix: Strict Loading error after initializing association owner with primary key,"Fixes https://github.com/rails/rails/issues/46392  See inline comments for explanation of the change.",closed,activerecord/lib/active_record/associations/collection_association.rb; activerecord/test/cases/associations/join_model_test.rb; activerecord/test/cases/associations_test.rb; activerecord/test/cases/strict_loading_test.rb,ghiculescu,2022-11-29T20:55:20Z,2022-11-30T19:05:05Z
46391,46397,Document ActiveModel#validation_context [skip ci],"Background:  To run validations except in a certain context  we need to either  1. explicitly pass all validation contexts to the `on` option 2. access undocumented `validation_context`  Option 1 is error-prone. Additionally  adding the opposite behavior of `on` was rejected https://github.com/rails/rails/pull/30710.  Solution:  Document `ActiveModel#validation_context` to make it clear that the API is public.  Close https://github.com/rails/rails/issues/46391.",closed,activemodel/lib/active_model/validations.rb,shouichi,2022-11-01T06:05:26Z,2022-12-01T23:48:26Z
46371,46375,Map through subtype in `PostgreSQL::OID::Array`,"This changes `PostgreSQL::OID::Array#map` to invoke `subtype.map` for each element of the array.  When `subtype` is a scalar  `subtype.map` (as implemented by `ActiveModel::Type::Value#map`) will simply call the block with the element.  When `subtype` is a non-scalar  such as a `PostgreSQL::OID::Range`  `subtype.map` ensures that the nested scalar values are properly mapped.  Partially reverts #45348  as an alternative fix. Fixes #46371. Closes #46372.  ---  /cc @fatkodima I've added you as a co-author since I borrowed your test from #46372. ",closed,activerecord/lib/active_record/attribute_methods/time_zone_conversion.rb; activerecord/lib/active_record/connection_adapters/postgresql/oid/array.rb; activerecord/test/cases/adapters/postgresql/range_test.rb,jonathanhefner,2022-10-29T02:52:37Z,2022-10-29T20:51:12Z
46363,46383,Ensure `reload` sets correct owner for each association (ActiveRecord::Persistence),"### Motivation / Background  Fixes #46363 which was caused by https://github.com/rails/rails/pull/41112  Currently calling `reload` re-calculates the association cache based on the object freshly loaded from the database. The fresh object gets assigned as `owner` for each association in the association cache. That object however is not the same as `self` (even though they both point to the same record). Under some specific circumstances (using `has_one/has_many through` associations and transactions with `after_commit` callbacks) this might lead to losing the effects of assignments done inside the callback.  This commit fixes it by making `reload` point to `self` as `owner` for each association in the association cache.  I think this is safe because as far as I can see in https://github.com/rails/rails/blob/main/activerecord/lib/active_record/associations.rb#L320 it always passes `self` when creating a new association.  ### Detail  This Pull Request changes `ActiveRecord::Persistence#reload` method.  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. * [x] CI is passing.  ",closed,activerecord/lib/active_record/associations/association.rb; activerecord/lib/active_record/persistence.rb; activerecord/test/cases/persistence/reload_association_cache_test.rb; activerecord/test/models/editor.rb; activerecord/test/models/editorship.rb; activerecord/test/models/publication.rb; activerecord/test/schema/schema.rb,dmytro-savochkin,2022-10-29T23:48:31Z,2024-01-15T20:48:26Z
46350,46358,Add missing configs to new_framework_defaults_7_0,"<!-- Thanks for contributing to Rails!  Please do not make *Draft* pull requests  as they still send notifications to everyone watching the Rails repo.  Create a pull request when it is ready for review and feedback from the Rails team :).  If your pull request affects documentation or any non-code changes  guidelines for those changes are [available here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)  About this template  The following template aims to help contributors write a good description for their pull requests. We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added)  motivation behind the changes  and complete the checklist below before opening a pull request.  Feel free to discard it if you need to (e.g. when you just fix a typo). -->  ### Motivation / Background  Following configs `config.action_dispatch.return_only_request_media_type_on_content_type`  `config.active_support.disable_to_s_conversion` and `config.active_storage.multiple_file_field_include_hidden` were missing from Rails 7.0 framework defaults <!-- Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important? If you are fixing a specific issue  include ""Fixes #ISSUE"" (replace with the issue number  remove the quotes) and the issue will be linked to this PR. -->  ### Detail  This Pull Request changes new framework default 7.0 and add missing configs in it.  Fixes #46350   ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [ ] Tests are added or updated if you fix a bug or add a feature. * [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. * [ ] CI is passing.  ",closed,railties/lib/rails/generators/rails/app/templates/config/initializers/new_framework_defaults_7_0.rb.tt,vsmay98,2022-10-27T07:52:41Z,2022-10-28T19:01:57Z
46301,46305,MemoryStore: preserve entry ttl when incrementing,"Fix: https://github.com/rails/rails/issues/46301  When incrementing in Memcached or Redis  we use `raw` values  so only the backing store TTL counts  and is preserved.  So for consistency we need to emulate this in MemoryStore by re-using the existing entry's `expires_at`. ",closed,activesupport/CHANGELOG.md; activesupport/lib/active_support/cache/memory_store.rb; activesupport/test/cache/stores/memory_store_test.rb,byroot,2022-10-22T10:34:08Z,2022-10-22T10:49:25Z
46301,49503,Backport to 7-0-stable: MemoryStore: preserve entry ttl when incrementing (and race condition fix),"### Motivation / Background  Backports the fix from https://github.com/rails/rails/pull/46305  ### Detail  Calling `Rails.cache.increment` drops the existing TTL  which is an issue on the current release of Rails  7.0.  ### Additional information  Some of the changes introduced in [the original PR](https://github.com/rails/rails/pull/46305) were discarded  such as the `normalize_` methods  as well as the change that originated in [that PR](https://github.com/rails/rails/pull/45068) that sets a value if none exists.  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,activesupport/CHANGELOG.md; activesupport/lib/active_support/cache/memory_store.rb; activesupport/test/cache/stores/memory_store_test.rb,pjambet,2023-10-05T19:56:25Z,2023-10-09T07:25:40Z
46297,46300,Fix ingress controllers' ability to accept non UTF-8 encoded emails,"### Motivation / Background  Since most of the ingress controllers receive raw MIME data in POST body  it is impossible to guaratee that these are in UTF-8 as email comes in all possible encodings.  Fixes #46297  ### Detail  This patch disables force transcoding to UTF-8 by ActionController params processing for params that contain RAW MIME email bodies.  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. * [x] CI is passing.  ",closed,actionmailbox/CHANGELOG.md; actionmailbox/app/controllers/action_mailbox/ingresses/mailgun/inbound_emails_controller.rb; actionmailbox/app/controllers/action_mailbox/ingresses/postmark/inbound_emails_controller.rb; actionmailbox/app/controllers/action_mailbox/ingresses/sendgrid/inbound_emails_controller.rb; actionmailbox/test/controllers/ingresses/mailgun/inbound_emails_controller_test.rb; actionmailbox/test/controllers/ingresses/postmark/inbound_emails_controller_test.rb; actionmailbox/test/controllers/ingresses/relay/inbound_emails_controller_test.rb; actionmailbox/test/controllers/ingresses/sendgrid/inbound_emails_controller_test.rb; actionmailbox/test/fixtures/files/invalid_utf.eml,honzasterba,2022-10-21T18:10:03Z,2023-01-20T22:31:21Z
46285,46287,Fix a bug where using groups and counts with long table names would return incorrect results.," <!-- Thanks for contributing to Rails!  Please do not make *Draft* pull requests  as they still send notifications to everyone watching the Rails repo.  Create a pull request when it is ready for review and feedback from the Rails team :).  If your pull request affects documentation or any non-code changes  guidelines for those changes are [available here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)  About this template  The following template aims to help contributors write a good description for their pull requests. We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added)  motivation behind the changes  and complete the checklist below before opening a pull request.  Feel free to discard it if you need to (e.g. when you just fix a typo). -->  ### Motivation / Background  Calculation results are buggy when using group by and count when table names are long.  Fixed https://github.com/rails/rails/issues/46285  ### Detail  Fixed a bug that caused the alias name of ""group by"" to be too long and the first half of the name would be the same in both cases if it was cut by max identifier length.  ### Additional information  <!-- Provide additional information such as benchmarks  reference to other repositories or alternative solutions. -->  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. * [ ] CI is passing.  ",closed,activerecord/CHANGELOG.md; activerecord/lib/active_record/relation/calculations.rb; activerecord/test/cases/calculations_test.rb; activerecord/test/models/too_long_table_name.rb; activerecord/test/schema/schema.rb,Dooor,2022-10-20T06:01:39Z,2022-10-20T09:34:45Z
46263,47170,Mention RAILS_STRICT_WARNINGS in contributing guide,"Closes #46263  Combines #46272  #46431  and #47168 into a single PR  Thanks for the patches @aviralsomani  @akmhmgc  and @Aryanryn09! ",closed,guides/source/contributing_to_ruby_on_rails.md,zzak,2023-01-28T22:45:05Z,2023-01-28T22:48:52Z
46244,46269,Fix #46244 Remove innerHTML usage to avoid self-XSS,"### Motivation / Background  This Pull Request has been created because of #46244 . Fixes #46244   ### Detail  I replaced innerHTML usages with `innerText`. Problematic input is now displayed and not evaluated. To test it  use the suggested https://github.com/rails/rails/issues/46244#issuecomment-1280502274 input. There should be no alert box and the displayed `<tr>`s are not broken but display the input.",closed,actionpack/lib/action_dispatch/middleware/templates/routes/_table.html.erb,codergeek121,2022-10-18T20:05:00Z,2022-10-22T09:55:12Z
46239,46238,Pass validation_context to validates_associated,"<!-- About this template  The following template aims to help contributors write a good description for their pull requests. We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added)  motivation behind the changes  and complete the checklist below before opening a pull request.  Feel free to discard it if you need to (e.g. when you just fix a typo). -->  ### Motivation / Background  <!-- Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important? -->  This Pull Request has been created because https://github.com/rails/rails/issues/46239  ### Detail  The docs imply that when specified the `on` option of `validates_associated` should be respected by the validated association. Prior to this change the validation context used will simply be the default behavior as if no `on` option were specified. With this change  the validation_context of the parent record is passed to the `valid?` check.  ### Additional information  <!-- Provide additional information such as benchmarks  reference to other repositories or alternative solutions. -->  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] There are no typos in commit messages and comments. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Feature branch is up-to-date with `main` (if not - rebase it). * [x] Pull request only contains one commit for bug fixes and small features. If it's a larger feature  multiple commits are permitted but must be descriptive. * [x] Tests are added if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. * [x] PR is not in a draft state. * [x] CI is passing.  <!-- Note: Please avoid making *Draft* pull requests  as they still send notifications to everyone watching the Rails repo. Create a pull request when it is ready for review and feedback from the Rails team :).  If your pull request affects documentation or any non-code changes  guidelines for those changes are [available here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)  Thanks for contributing to Rails! --> ",closed,activerecord/CHANGELOG.md; activerecord/lib/active_record/autosave_association.rb; activerecord/lib/active_record/validations.rb; activerecord/lib/active_record/validations/associated.rb; activerecord/test/cases/validations/association_validation_test.rb,austenmadden,2022-10-13T20:28:38Z,2024-01-03T19:44:54Z
46196,46203,Fix `index_exists?` when column is an array,"When `column` is passed as an array and the column does not exist  then `index_exists?` check would fail to return early which would cause `index_name_for_remove` to raise an error instead of ignoring the missing column. This change ensures that `defined_for` checks the column options in addition to the column argument.  Fixes #46196  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] There are no typos in commit messages and comments. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Feature branch is up-to-date with `main` (if not - rebase it). * [x] Pull request only contains one commit for bug fixes and small features. If it's a larger feature  multiple commits are permitted but must be descriptive. * [ x Tests are added if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. * [x] PR is not in a draft state. * [x] CI is passing.",closed,activerecord/lib/active_record/connection_adapters/abstract/schema_definitions.rb; activerecord/test/cases/migration/index_test.rb,eileencodes,2022-10-06T15:40:45Z,2022-10-06T20:52:27Z
46184,46304,Assets Precompile in Rails Guide is NOT showing the steps for Sprockets 4,"### Motivation / Background  Tackling #46184. As khoan mentions  https://guides.rubyonrails.org/asset_pipeline.html#precompiling-assets documents Sprockets 3 setup whereas Sprockets 4 uses manifest.js to configure precompile list as per https://github.com/rails/sprockets/blob/main/UPGRADING.md#manifestjs.  Fixes #46184  ### Detail  This Pull Request changes this file https://github.com/rails/rails/blob/main/guides/source/asset_pipeline.md and differentiates sprockets version 3 and 4 setup   ",closed,guides/source/asset_pipeline.md,matiassalles99,2022-10-22T02:58:19Z,2022-10-24T05:56:53Z
46182,46186,Remove private `transaction(joinable:)` parameter from RDoc,"Fix: https://github.com/rails/rails/issues/46182  This argument is only for internal use  like transactional fixtures or the `--sandbox` console flag. ",closed,activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb,casperisfine,2022-10-04T07:30:28Z,2022-10-04T07:56:50Z
46179,46180,Set default query tags format for upcoming Rails releases,"<!-- About this template  The following template aims to help contributors write a good description for their pull requests. We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added)  motivation behind the changes  and complete the checklist below before opening a pull request.  Feel free to discard it if you need to (e.g. when you just fix a typo). -->  ### Motivation / Background  This PR codifies the default formatter for Query Log tags  based on the released version.  This PR fixes: https://github.com/rails/rails/issues/46179  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] There are no typos in commit messages and comments. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Feature branch is up-to-date with `main` (if not - rebase it). * [x] Pull request only contains one commit for bug fixes and small features. If it's a larger feature  multiple commits are permitted but must be descriptive. * [x] Tests are added if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. * [x] PR is not in a draft state. * [x] CI is passing.  <!-- Note: Please avoid making *Draft* pull requests  as they still send notifications to everyone watching the Rails repo. Create a pull request when it is ready for review and feedback from the Rails team :).  If your pull request affects documentation or any non-code changes  guidelines for those changes are [available here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)  Thanks for contributing to Rails! --> ",closed,guides/source/configuring.md; railties/lib/rails/application/configuration.rb; railties/lib/rails/generators/rails/app/templates/config/initializers/new_framework_defaults_7_1.rb.tt; railties/test/application/query_logs_test.rb,modulitos,2022-10-03T06:12:54Z,2022-10-05T18:36:22Z
46179,46310,Clarify activerecord changelog for sqlcommenter,"### Motivation / Background  This is a minor fix to clarify a changelog entry I had made earlier. When we changed the default values for `config.active_record.query_log_tags_format` from `:legacy` to `:sqlcommenter` (in PR https://github.com/rails/rails/pull/46180)  I should've updated the changelog entry to reflect that as well. Updating it now to avoid confusion.  This change is a followup to this issue: https://github.com/rails/rails/issues/46179.  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. * [x] CI is passing.  ",closed,activerecord/CHANGELOG.md,modulitos,2022-10-23T05:09:36Z,2022-10-23T10:10:02Z
46118,46136,Update the 6_0 defaults file to include zeitwerk the new autoloader,"<!-- About this template  The following template aims to help contributors write a good description for their pull requests. We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added)  motivation behind the changes  and complete the checklist below before opening a pull request.  Feel free to discard it if you need to (e.g. when you just fix a typo). -->  ### Motivation / Background  This Pull Request has been created to update the new_framework_defaults for rails 6-0 to include zeitwerk mode.  When using rails 5-0 and upgrading to rails 6. It's important to make that transition easy for users  so they can keep the 5-1 defaults and opt into zeitwerk. I'm targeting rails 6-0 branch for this commit.   ### Additional information  Fixes https://github.com/rails/rails/issues/46118  Anyone that's upgrading will to need to point to the rails 6-0 upstream branch.  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] There are no typos in commit messages and comments. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Feature branch is up-to-date with `main` (if not - rebase it). * [x] Pull request only contains one commit for bug fixes and small features. If it's a larger feature  multiple commits are permitted but must be descriptive. * [ ] Tests are added if you fix a bug or add a feature. * [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. * [x] PR is not in a draft state. * [ ] CI is passing.  <!-- Note: Please avoid making *Draft* pull requests  as they still send notifications to everyone watching the Rails repo. Create a pull request when it is ready for review and feedback from the Rails team :).  If your pull request affects documentation or any non-code changes  guidelines for those changes are [available here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)  Thanks for contributing to Rails! --> ",closed,railties/lib/rails/generators/rails/app/templates/config/initializers/new_framework_defaults_6_0.rb.tt,hahmed,2022-09-26T21:40:33Z,2022-09-27T19:15:14Z
46113,46119,Always provide a fallback renderer for Action Text,"Follow-up to #45144.  This ensures that a renderer is always available for Action Text  even when `ActionController::Base` was not previously loaded.  Fixes #46113.  As with #45144  this still avoids loading `ActionController::Base` unnecessarily when rendering mail after Action Text has been loaded.  **Before:**  ``` $ bin/rails r 'Benchmark.memory { |x| x.report(""load""){ MyBlankMailer.blank_email.body } }' Calculating -------------------------------------                 load     4.466M memsize (     1.205M retained)                         29.202k objects (    11.943k retained)                         50.000  strings (    50.000  retained) ```  **After:**  ``` $ bin/rails r 'Benchmark.memory { |x| x.report(""load""){ MyBlankMailer.blank_email.body } }' Calculating -------------------------------------                 load     4.462M memsize (     1.205M retained)                         29.141k objects (    11.940k retained)                         50.000  strings (    50.000  retained) ```  ---  /cc @clouvet I've added you as a co-author since you were digging into #46113. ",closed,actiontext/lib/action_text/engine.rb; actiontext/lib/action_text/rendering.rb,jonathanhefner,2022-09-23T19:39:15Z,2022-09-23T20:07:36Z
46113,46129,Add `rake test:isolated` for Action Text,"### Motivation / Background  This commit implements `rake test:isolated` for Action Text. While many modules have `rake test:isolated`  Action Text does not. This could find #46113 in advance.  ### Detail  - Usage ```ruby cd actiontext bundle exec rake test:isolated ```  ### Additional information  It detects #46113 by reverting the merge commit via #46119  ```ruby $ git revert -m 1 4e7f876  $ bundle exec rake test:isolated /home/yahonda/.rbenv/versions/3.1.2/bin/ruby -w -Ilib -Itest test/integration/controller_render_test.rb ... snip ...  E  Error: ActionText::ControllerRenderTest#test_renders_as_HTML_when_the_request_format_is_not_HTML: NoMethodError: undefined method `render_to_string' for nil:NilClass          (renderer || default_renderer).render_to_string(*args  &block)                                       ^^^^^^^^^^^^^^^^^     test/integration/controller_render_test.rb:19:in `block in <class:ControllerRenderTest>'  bin/test test/integration/controller_render_test.rb:17 ```  To run isolated tests at Rails CI  https://github.com/rails/buildkite-config also needs to be updated.  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [ ] There are no typos in commit messages and comments. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Feature branch is up-to-date with `main` (if not - rebase it). * [x] Pull request only contains one commit for bug fixes and small features. If it's a larger feature  multiple commits are permitted but must be descriptive. * [ ] Tests are added if you fix a bug or add a feature. * [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. * [x] PR is not in a draft state. * [x] CI is passing.  <!-- Note: Please avoid making *Draft* pull requests  as they still send notifications to everyone watching the Rails repo. Create a pull request when it is ready for review and feedback from the Rails team :).  If your pull request affects documentation or any non-code changes  guidelines for those changes are [available here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)  Thanks for contributing to Rails! --> ",closed,actiontext/Rakefile,yahonda,2022-09-26T11:47:36Z,2023-02-28T06:10:39Z
46103,46279,Fix double logging in `ActiveRecord::QueryLogs`,"Fixes https://github.com/rails/rails/issues/46103  An issue exists if you set `config.active_record.query_log_tags` to an array that includes `:controller`  `:action`  or `:job`; the relevant item will get duplicated in the log line. This occured because the relevant railties would add the item to `config.active_record.query_log_tags` again during setup. This PR fixes that by only adding those items to the config if they aren't already set.  The issue proposed more documentation to work around this  but I think it's a bug and should be fixed directly.  <!-- Thanks for contributing to Rails!  Please do not make *Draft* pull requests  as they still send notifications to everyone watching the Rails repo.  Create a pull request when it is ready for review and feedback from the Rails team :).  If your pull request affects documentation or any non-code changes  guidelines for those changes are [available here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)  About this template  The following template aims to help contributors write a good description for their pull requests. We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added)  motivation behind the changes  and complete the checklist below before opening a pull request.  Feel free to discard it if you need to (e.g. when you just fix a typo). -->   ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. * [x] CI is passing.  ",closed,actionpack/CHANGELOG.md; actionpack/lib/action_controller/railtie.rb; activejob/CHANGELOG.md; activejob/lib/active_job/railtie.rb; railties/test/application/query_logs_test.rb,ghiculescu,2022-10-19T20:36:10Z,2022-10-22T23:22:42Z
46103,46265,Update Active Record Query Logs docs,"Fixes https://github.com/rails/rails/issues/46103 and some things I found along the way. The major changes: - Explicitly show how to enable the functionality - Show how to properly configure custom tags and in which files to prevent the problems listed in the aforementioned issue - Add missing `namespaced_controller` default tag - Remove mention of ActiveSupport::ExecutionContext since that is nodoc'ed internal API since https://github.com/rails/rails/pull/43598  instead show the [ActiveSupport::CurrentAttributes](https://api.rubyonrails.org/classes/ActiveSupport/CurrentAttributes.html) example of a current account - Mention the SQLCommenter format  Also added a section in the 'Debugging Rails Applications' guide for discoverability.  cc @skipkayhil   ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] There are no typos in commit messages and comments. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Feature branch is up-to-date with `main` (if not - rebase it). * [x] Pull request only contains one commit for bug fixes and small features. If it's a larger feature  multiple commits are permitted but must be descriptive. * [x] Tests are added if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. * [x] PR is not in a draft state. * [x] CI is passing.",closed,activerecord/lib/active_record/query_logs.rb; guides/source/debugging_rails_applications.md,bdewater,2022-10-18T16:17:58Z,2022-11-16T20:36:53Z
46103,46738,Backport double logging fix in `ActiveRecord::QueryLog` to 7-0-stable,"### Motivation / Background  Backports https://github.com/rails/rails/pull/46279 and https://github.com/rails/rails/pull/46642 to `7-0-stable`.  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,actionpack/CHANGELOG.md; actionpack/lib/action_controller/railtie.rb; activejob/CHANGELOG.md; activejob/lib/active_job/railtie.rb; railties/test/application/query_logs_test.rb,bdewater,2022-12-15T14:32:36Z,2023-01-03T17:47:15Z
46100,46102,ActiveSupport::Reloader should not report exception,"Since it always delegate to an actual executor that does report them already  this cause exceptions to be reported twice.  Fix: https://github.com/rails/rails/issues/46100  cc @nvasilevski ",closed,activesupport/lib/active_support/execution_wrapper.rb; activesupport/lib/active_support/reloader.rb; activesupport/lib/active_support/testing/error_reporter_assertions.rb; activesupport/test/reloader_test.rb,casperisfine,2022-09-22T14:53:50Z,2022-09-22T16:45:38Z
46044,46048,Dup and freeze complex types when making query attributes,"This avoids problems when complex data structures are mutated _after_ being handed to ActiveRecord for processing.  For example false hits in the query cache.  Possible fix for #46044 ",closed,activemodel/lib/active_model/type/helpers/mutable.rb; activemodel/lib/active_model/type/value.rb; activerecord/CHANGELOG.md; activerecord/lib/active_record/relation/predicate_builder.rb; activerecord/test/cases/query_cache_test.rb,tenderlove,2022-09-15T21:43:56Z,2022-09-19T08:37:06Z
46044,48730,Eagerly cast serialized query attributes,"Fix: https://github.com/rails/rails/issues/48652 Ref: https://github.com/rails/rails/pull/46048 Ref: https://github.com/rails/rails/issues/46044 Ref: https://github.com/rails/rails/pull/34303 Ref: https://github.com/rails/rails/pull/39160 Close: https://github.com/rails/rails/pull/48705  This deep_dup was introduced to prevent the value stored in the query cache to be later mutated.  The problem is that `ActiveRecord::Base#dup` will return a copy of the record but with the primary key set to nil. One could argue that `#dup` shouldn't behave this way  but I think this ship has sailed (or has it?).  My initial fix was to instead always call `type.cast` eagerly so that we'd dup serialized types in a more correct way. However there is a test that explictly ensure this doesn't happen: https://github.com/rails/rails/pull/39160  The reason isn't 100% clear to me  but if I get it correctly  it's to avoid a potentially costly operation upfront.  So instead we only eagerly cast serialized attributes only  so protect against future mutations.  Mutable types are still deep duped. ",closed,activemodel/lib/active_model/type/helpers/mutable.rb; activemodel/lib/active_model/type/value.rb; activerecord/lib/active_record/relation/predicate_builder.rb; activerecord/lib/active_record/relation/query_attribute.rb; activerecord/lib/active_record/type/serialized.rb; activerecord/test/cases/query_cache_test.rb,casperisfine,2023-07-13T09:03:40Z,2023-07-13T09:58:34Z
45994,46553,Make AbstractAdapter#lock thread local by default,"Fix: https://github.com/rails/rails/issues/45994  A semi-common issue since Ruby 3.0.2 is that using a fiber inside a transaction cause a deadlock:  ```ruby Post.transaction do  enum =  Enumerator.new do |y|    y.yield Post.first # stuck  end  enum.next end ```  This is because in https://bugs.ruby-lang.org/issues/17827 Ruby changed Monitor to be owned by the calling Fiber rather than Thread.  And since the Active Record connection pool is per Thread  we end up in a situation where a Fiber tries to acquire a lock owned by another fiber with no change to ever resolve.  In https://github.com/rails/rails/pull/46519 We've made that lock optional as it's only needed for system tests.  Now this PR introduce an alternative lock implementation that behave like Monitor used to up to Ruby 2.7  and we use this one if `ActiveSupport::IsolatedExecutionState.context` is a Thread.  If it's a Fiber  we continue to use the implementation derived from the stdlib that is Fiber based.  Co-Authored-By: @wildmaples  FYI @eileencodes @matthewd @rafaelfranca @ngan @simi  ",closed,activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb; activerecord/lib/active_record/connection_adapters/abstract_adapter.rb; activerecord/test/cases/connection_pool_test.rb; activesupport/lib/active_support/concurrency/load_interlock_aware_monitor.rb; activesupport/test/concurrency/load_interlock_aware_monitor_test.rb,casperisfine,2022-11-22T17:29:19Z,2022-12-01T15:10:53Z
45994,46661,Use a single lock for all connections,"Followup: https://github.com/rails/rails/pull/46519 Followup: https://github.com/rails/rails/pull/46553 Fix: https://github.com/rails/rails/issues/45994  When using multiple database  `clear_query_caches_for_current_thread` goes over all connections pool and have to acquire locks one by one to clear each query cache.  If two threads do this in a different order they might deadlock.  By using a single lock for all connections we avoid this problem entirely and properly prevent the puma thread from competing with the main thread.  As for previous PRs  it would be cleaner to have this lock around a Rack middleware  and to release it when calling Capybara primitives like `visit`. But we need a good chokepoint in Capybara for that  I need to explore that upstream.  @eileencodes @matthewd @kuahyeow",closed,activerecord/lib/active_record/connection_adapters/abstract_adapter.rb,casperisfine,2022-12-07T08:39:21Z,2022-12-09T07:27:34Z
45983,45995,Ruby 3.2 `FileUtils.rm_f` raises `Errno::EISDIR` to remove directories,"### Motivation / Background  This pull request addresses the following error reported at #45983   ### Detail  This pull request addresses the following error.  ```ruby % cd rails/railties % rm ../Gemfile.lock % bundle install $ bin/test test/application/test_runner_test.rb -n test_load_fixtures_when_running_test_suites  E  Error: ApplicationTests::TestRunnerTest#test_load_fixtures_when_running_test_suites: Errno::EISDIR: Is a directory @ apply2files - test/models     /home/yahonda/.rbenv/versions/3.2.0-preview2/lib/ruby/3.2.0+2/fileutils.rb:2300:in `unlink'     /home/yahonda/.rbenv/versions/3.2.0-preview2/lib/ruby/3.2.0+2/fileutils.rb:2300:in `block in remove_file'     /home/yahonda/.rbenv/versions/3.2.0-preview2/lib/ruby/3.2.0+2/fileutils.rb:2305:in `platform_support'     /home/yahonda/.rbenv/versions/3.2.0-preview2/lib/ruby/3.2.0+2/fileutils.rb:2299:in `remove_file'     /home/yahonda/.rbenv/versions/3.2.0-preview2/lib/ruby/3.2.0+2/fileutils.rb:1449:in `remove_file'     /home/yahonda/.rbenv/versions/3.2.0-preview2/lib/ruby/3.2.0+2/fileutils.rb:1189:in `block in rm'     /home/yahonda/.rbenv/versions/3.2.0-preview2/lib/ruby/3.2.0+2/fileutils.rb:1188:in `each'     /home/yahonda/.rbenv/versions/3.2.0-preview2/lib/ruby/3.2.0+2/fileutils.rb:1188:in `rm'     /home/yahonda/.rbenv/versions/3.2.0-preview2/lib/ruby/3.2.0+2/fileutils.rb:1211:in `rm_f'     /home/yahonda/src/github.com/rails/rails/railties/test/application/test_runner_test.rb:254:in `block (2 levels) in test_load_fixtures_when_running_test_suites'     /home/yahonda/src/github.com/rails/rails/railties/test/application/test_runner_test.rb:254:in `chdir'     /home/yahonda/src/github.com/rails/rails/railties/test/application/test_runner_test.rb:254:in `block in test_load_fixtures_when_running_test_suites'     /home/yahonda/src/github.com/rails/rails/railties/test/application/test_runner_test.rb:250:in `each'     /home/yahonda/src/github.com/rails/rails/railties/test/application/test_runner_test.rb:250:in `test_load_fixtures_when_running_test_suites'  bin/test test/application/test_runner_test.rb:246  Finished in 2.319535s  0.4311 runs/s  0.8622 assertions/s. 1 runs  2 assertions  0 failures  1 errors  0 skips $ ruby -v ruby 3.2.0preview2 (2022-09-09 master 35cfc9a3bb) [x86_64-linux] ```  Fix #45983  ### Additional information  * Ruby 3.2.0.preview2 raises `Errno::EISDIR` if `FileUtils.rm_f` fails to remove directories  ```ruby $ ruby -v ruby 3.2.0preview2 (2022-09-09 master 35cfc9a3bb) [x86_64-linux] $ mkdir foo $ ruby -rfileutils -e 'FileUtils.rm_f(""foo"")' /home/yahonda/.rbenv/versions/3.2.0-preview2/lib/ruby/3.2.0+2/fileutils.rb:2300:in `unlink': Is a directory @ apply2files - foo (Errno::EISDIR) 	from /home/yahonda/.rbenv/versions/3.2.0-preview2/lib/ruby/3.2.0+2/fileutils.rb:2300:in `block in remove_file' 	from /home/yahonda/.rbenv/versions/3.2.0-preview2/lib/ruby/3.2.0+2/fileutils.rb:2305:in `platform_support' 	from /home/yahonda/.rbenv/versions/3.2.0-preview2/lib/ruby/3.2.0+2/fileutils.rb:2299:in `remove_file' 	from /home/yahonda/.rbenv/versions/3.2.0-preview2/lib/ruby/3.2.0+2/fileutils.rb:1449:in `remove_file' 	from /home/yahonda/.rbenv/versions/3.2.0-preview2/lib/ruby/3.2.0+2/fileutils.rb:1189:in `block in rm' 	from /home/yahonda/.rbenv/versions/3.2.0-preview2/lib/ruby/3.2.0+2/fileutils.rb:1188:in `each' 	from /home/yahonda/.rbenv/versions/3.2.0-preview2/lib/ruby/3.2.0+2/fileutils.rb:1188:in `rm' 	from /home/yahonda/.rbenv/versions/3.2.0-preview2/lib/ruby/3.2.0+2/fileutils.rb:1211:in `rm_f' 	from -e:1:in `<main>' $ ls -ld foo/ drwxrwxr-x 2 yahonda yahonda 4096 Sep 10 23:00 foo/ ```  * Ruby 3.1 does not raise any exceptions even if `FileUtils.rm_f` fails to remove directories  ```ruby $ ruby -v ruby 3.1.2p20 (2022-04-12 revision 4491bb740a) [x86_64-linux] $ mkdir foo $ ruby -rfileutils -e 'FileUtils.rm_f(""foo"")' $ ls -ld foo/ drwxrwxr-x 2 yahonda yahonda 4096 Sep 10 23:01 foo/ $ ```  * Ruby 3.2.0.preview2 `FileUtils.rm_r` successfuly removes directories  ```ruby $ ruby -v ruby 3.2.0preview2 (2022-09-09 master 35cfc9a3bb) [x86_64-linux] $ mkdir foo $ ruby -rfileutils -e 'FileUtils.rm_r(""foo"")' $ ls -ld foo ls: cannot access 'foo': No such file or directory ```  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [ ] There are no typos in commit messages and comments. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Feature branch is up-to-date with `main` (if not - rebase it). * [x] Pull request only contains one commit for bug fixes and small features. If it's a larger feature  multiple commits are permitted but must be descriptive. * [ ] Tests are added if you fix a bug or add a feature. * [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. * [x] PR is not in a draft state. * [x] CI is passing.  <!-- Note: Please avoid making *Draft* pull requests  as they still send notifications to everyone watching the Rails repo. Create a pull request when it is ready for review and feedback from the Rails team :).  If your pull request affects documentation or any non-code changes  guidelines for those changes are [available here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)  Thanks for contributing to Rails! --> ",closed,railties/test/application/test_runner_test.rb,yahonda,2022-09-10T14:15:54Z,2022-09-10T14:43:42Z
45913,45914,Lock redis version to v4 until #45913 is resolved,"### Summary  This pull request locks redis version to v4 until #45913 is resolved.  Refer to https://github.com/rails/rails/issues/45913 https://github.com/redis/redis-rb/issues/1142  ### Other Information ",closed,Gemfile; Gemfile.lock,yahonda,2022-08-31T06:44:39Z,2022-08-31T07:22:30Z
45913,45953,Update redis and resque,"Fix: https://github.com/rails/rails/issues/45913  With the recent release of resque  we should be good to upgrade on CI. ",closed,Gemfile; Gemfile.lock; activejob/test/support/integration/adapters/resque.rb; activejob/test/support/integration/adapters/sidekiq.rb,byroot,2022-09-06T20:26:09Z,2022-09-07T17:35:34Z
45899,45900,Lock que version to v1 until #45899 is resolved,"### Summary  This pull request locks que version to v1 until #45899 is resolved Refer to https://github.com/rails/rails/issues/45899 for the background. ",closed,Gemfile; Gemfile.lock,yahonda,2022-08-29T05:53:02Z,2022-08-29T06:13:57Z
45899,46005,Remove QueAdapter from Active Job,"### Motivation / Background  Que and Rails (Active Job QueAdapter) have applied changes each other to support Ruby 3 keyword arguments and options provided as top level keywords  etc via these commits:  https://github.com/rails/rails/pull/44734 https://github.com/rails/rails/pull/44248 https://github.com/que-rb/que/commit/d9244b9074df17f61fe7564b93bbb6865f49ef20 via https://github.com/que-rb/que/pull/319  Finally  we've found it is quite difficult to maintain them. Going forward Active Job Que adapter can be included in the future version of que gem itself. Refer to https://github.com/rails/rails/issues/45899 the background for this change.  Active Job Que adapter can be included in the future version of que gem itself.  ### Detail  This Pull Request removes QueAdapter from Active Job.  ### Additional information  <!-- Provide additional information such as benchmarks  reference to other repositories or alternative solutions. -->  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [ ] There are no typos in commit messages and comments. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Feature branch is up-to-date with `main` (if not - rebase it). * [x] Pull request only contains one commit for bug fixes and small features. If it's a larger feature  multiple commits are permitted but must be descriptive. * [ ] Tests are added if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. * [x] PR is not in a draft state. * [x] CI is passing.  <!-- Note: Please avoid making *Draft* pull requests  as they still send notifications to everyone watching the Rails repo. Create a pull request when it is ready for review and feedback from the Rails team :).  If your pull request affects documentation or any non-code changes  guidelines for those changes are [available here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)  Thanks for contributing to Rails! --> ",closed,Gemfile; Gemfile.lock; activejob/CHANGELOG.md; activejob/Rakefile; activejob/lib/active_job/queue_adapters/que_adapter.rb; activejob/test/adapters/que.rb; activejob/test/integration/queuing_test.rb; activejob/test/support/integration/adapters/que.rb; activejob/test/support/que/inline.rb,yahonda,2022-09-12T13:29:27Z,2022-09-12T23:18:13Z
45868,45872,Fixes #45868 by Using #to_hash to serialize `AS::HWIA` for stored attributes,"### Summary  Fixes #45868  Originally we were calling `#to_h` to serialize `ActiveSupport::HashWithIndifferentAccess` but it was serializing only top-level hash keys.  By Using `#to_hash` to serialize `ActiveSupport::HashWithIndifferentAccess` it will also handle/convert nested objects. ",closed,activerecord/lib/active_record/store.rb; activerecord/test/cases/store_test.rb,the-spectator,2022-08-23T05:42:01Z,2022-08-24T19:32:13Z
45777,45789,Add ActionView::OutputBuffer#concat back,"Fix: https://github.com/rails/rails/issues/45777  The method is being used by HAML  it's easy to add it back. ",closed,actionview/lib/action_view/buffers.rb,casperisfine,2022-08-08T07:04:59Z,2022-08-08T07:05:44Z
45767,45773,Only setup shared pools if we have a connection,"Previously `setup_shared_connection_pool` was called anytime `setup_fixtures` saw a future connection established. Sometimes those connections are `nil` but we were setting up the shared pools before determining that.  This change moves the `setup_shared_connection_pool` into the check for if we have a connection. The tests that were dealing with these settings were originally set to not use transacitons. But without this we can't test the change here so I've updated that as well.  This is an alternate fix to #45769. I realized after opening the PR it wasn't quite right to skip if we don't have a writing pool config  because the question is how were we ending up with that anyway? Well the answer was that we were calling the shared setup in the wrong place.  Fixes #45767",closed,activerecord/lib/active_record/test_fixtures.rb; activerecord/test/cases/connection_adapters/connection_handler_test.rb,eileencodes,2022-08-05T16:45:05Z,2022-08-05T17:07:53Z
45736,48409,Test virtual stored columns on create for Postgres,"### Motivation / Background  PR #48241 had the nice bonus of resolving issue #45736 even though that was not the original goal. This pull request codifies the example from #45736 into the test suite.  ### Checklist  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.   Closes: #45736 Paging: @nvasilevski   ",closed,activerecord/test/cases/persistence_test.rb; activerecord/test/schema/postgresql_specific_schema.rb,abaldwin88,2023-06-06T19:17:48Z,2023-06-06T22:26:15Z
45681,45688,Fix default `SameSite` for session cookies,"Follow-up to #45501.  The Rack base class that `CookieStore` inherits from [always sets `:same_site`][1].  Thus  `options.key?(:same_site)` always returns true for session cookies  preventing a default value from being set.  It would be possible to change Rack to conditionally set `:same_site`  but  from Rack's perspective  it has no reason to not set `:same_site`  because it treats a `nil` value the same as no value.  Therefore  this commit specifies a default `:same_site` in `CookieStore`  which simply defers to `request.cookies_same_site_protection` as `CookieJar` does.  Fixes #45681.  [1]: https://github.com/rack/rack/blob/2.2.4/lib/rack/session/abstract/id.rb#L398-L402 ",closed,actionpack/lib/action_dispatch/middleware/cookies.rb; actionpack/lib/action_dispatch/middleware/session/cookie_store.rb; actionpack/test/dispatch/session/cookie_store_test.rb; railties/test/application/configuration_test.rb,jonathanhefner,2022-07-28T21:02:25Z,2022-07-29T20:46:01Z
45658,45662,Mention `Arel.sql` in `update_all` docs [docs],"This is needed when a string is provided  if you want to avoid type casting.  Fixes https://github.com/rails/rails/issues/45658 ",closed,activerecord/lib/active_record/relation.rb,ghiculescu,2022-07-25T20:14:37Z,2022-07-26T05:14:42Z
45585,45591,ActiveRecord::Store encode store as a regular Hash,"Fix: https://github.com/rails/rails/issues/45585  There's no benefit in serializing it as HWIA  it requires to allow that type for YAML safe_load and takes more space.  We can cast it back to a regular hash before serialization.  cc @rafaelfranca @tenderlove ",closed,activerecord/CHANGELOG.md; activerecord/lib/active_record/store.rb; activerecord/test/cases/store_test.rb,casperisfine,2022-07-13T16:15:02Z,2022-07-13T16:52:38Z
45567,45579,Touch model records after ActiveStorage::Blob is analyzed,"### Summary  This fixes a race condition where a record can be requested and have a cache entry built  before the initial `analyze_later` completes  which will not be invalidated until something else updates the record.  1. Upload attachment (this will create an ActiveStorage::Blob     ActiveStorage::Attachment  and touch the model) 2. Enqueue analyze job 3. Request record 4. Build a cache for that record 5. Analyze the attachment. 6. Request the record again 7. Serve a cache that doesn't include data from the analyzers  because    the cache was built before it got analyzed  and the updated_at    hasn't changed.  This also invalidates cache entries when a blob is re-analyzed  which is helpful if a bug is fixed in an analyzer or a new analyzer is added.  Fixes #45567",closed,activestorage/CHANGELOG.md; activestorage/app/models/active_storage/blob.rb; activestorage/test/models/blob_test.rb,natematykiewicz,2022-07-12T22:02:37Z,2022-07-26T16:34:19Z
45489,45490,Anchor the Action Cable server's route,"Fixes https://github.com/rails/rails/issues/45489  - Adds `anchor: true` to the Action Cable server mount  so that it only strictly matches `/cable` rather than anything that starts with that. - Uses `reverse_merge` instead of `merge` in `Mapper#mount`  so that you can override these options if you need to.  I tested against https://github.com/andrewmcodes/rails-cable-route-bug-reproduction and this resolves the issue for me. @andrewmcodes I'd appreciate if you could test that too.  cc @matthewd ",closed,actioncable/CHANGELOG.md; actioncable/lib/action_cable/engine.rb; actionpack/lib/action_dispatch/routing/mapper.rb; actionpack/test/dispatch/mapper_test.rb,ghiculescu,2022-06-29T16:43:49Z,2022-06-29T18:44:15Z
45483,47436,Don't double-encode nested `field_id` and `field_name` index,"### Motivation / Background  Closes https://github.com/rails/rails/issues/45483 Closes https://github.com/rails/rails/pull/45523  To quote #45483:  > `field_name` is adding an extra index parameter  the extra `[0]` in > `parent[children_attributes][0][0][grandchildren_attributes][]`  ### Detail  To resolve that issue  this commit reads its default `field_id` and `field_name` method's `index:` option directly from the `@options`. Prior to this commit  that value was read from the `@index` instance variable.  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,actionview/CHANGELOG.md; actionview/lib/action_view/helpers/form_helper.rb; actionview/test/template/form_helper_test.rb,seanpdoyle,2023-02-20T07:32:03Z,2023-07-02T21:34:25Z
45467,45477,Lock rack-test version to v1 until #45467 is resolved,"### Summary  This pull request locks rack-test version to v1 until #45467 is resolved  Action Pack CI has been failing since rack-test v2.0.0. Refer to https://github.com/rails/rails/pull/45177 ",closed,Gemfile; Gemfile.lock,yahonda,2022-06-28T00:48:34Z,2022-06-28T05:53:10Z
45416,45460,Fix code cache namespacing for proxied attribute methods,"Fix: https://github.com/rails/rails/issues/45416  The suffix need to be included in the namespace as it is used to generate the code. ",closed,activemodel/lib/active_model/attribute_methods.rb; activemodel/test/cases/attribute_methods_test.rb,casperisfine,2022-06-25T07:04:17Z,2022-06-25T07:17:40Z
45408,45440,Fix CollectionProxy#load_async,"Fix: https://github.com/rails/rails/issues/45408  Since `CollectionProxy` inherits from `Relation`  `load_async` would schedule the query and store in it an instance variable but would never use it.  Ideally we should make the `Association` classes async aware so that that you can indeed schedule an association to be loaded  but that's quite a big refactoring  and would be hard to backport to 7-0-stable.  So this is a more focused fix. We delegate `load_async` to `scope` which means we return an async `Relation` that can later be used.  However the association isn't marked as loaded  so if you use the association later  you'll trigger a second query anyway.  I'll try to address this in a followup that won't be backported.  I'll add a CHANGELOG entry in the backport commit.",closed,activerecord/lib/active_record/associations/collection_proxy.rb; activerecord/lib/active_record/connection_adapters/sqlite3_adapter.rb; activerecord/test/cases/relation/load_async_test.rb,casperisfine,2022-06-23T09:49:36Z,2022-06-23T12:11:18Z
45390,48353,Set default_shard from connects_to hash,"If an application is using sharding  they may not want to use `default` as the `default_shard`. Unfortunately Rails expects there to be a shard named `default` for certain actions internally. This leads to some errors on boot and the application is left manually setting `default_shard=` in their model or updating their shards in `connects_to` to name `shard_one` to `default`. Neither are a great solution  especially if Rails can do this for you. Changes to Active Record are:  * Simplify `connects_to` by merging `database` into `shards` kwarg so we can do a single loop through provided options. * Set the `self.default_shard` to the first keys in the shards kwarg. * Add a test for this behavior * Update existing test that wasn't testing this to use `default`. I could have left this test but it really messes with connections in the other tests and since this isn't testing shard behavior specifically  I updated it to use `default` as the default shard name.  This is a slight change in behavior from existing applications but arguably this is fixing a bug because without this an application won't boot. I originally thought that this would require a huge refactoring to fix but realized that it makes a lot of sense to take the first shard as they default. They should all have the same schema so we can assume it's fine to take the first one.  Fixes: #45390",closed,activerecord/CHANGELOG.md; activerecord/lib/active_record/connection_handling.rb; activerecord/test/cases/connection_adapters/connection_handlers_sharding_db_test.rb; activerecord/test/cases/connection_pool_test.rb; guides/source/active_record_multiple_databases.md,eileencodes,2023-05-31T16:12:13Z,2023-05-31T19:29:57Z
45389,47351,Add missing test for timestamp on before_save,"<!-- Thanks for contributing to Rails!  Please do not make *Draft* pull requests  as they still send notifications to everyone watching the Rails repo.  Create a pull request when it is ready for review and feedback from the Rails team :).  If your pull request affects documentation or any non-code changes  guidelines for those changes are [available here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)  About this template  The following template aims to help contributors write a good description for their pull requests. We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added)  motivation behind the changes  and complete the checklist below before opening a pull request.  Feel free to discard it if you need to (e.g. when you just fix a typo). -->  ### Motivation / Background  <!-- Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important? If you are fixing a specific issue  include ""Fixes #ISSUE"" (replace with the issue number  remove the quotes) and the issue will be linked to this PR. -->  Related to #45389   This Pull Request has been created to guard against the omission of touching the `updated_at` timestamp in the scenario where attributes are changed by `before` callbacks  but no attributes are changed outside of the callbacks.  ### Detail  This Pull Request adds a regression test for for the `before_save` callback. The missing regression test was identified during debugging of the `before_update` callback. The behaviour of the `before_update` callback does not touch the updated at timestamp and this will be addressed in a followup PR.  ### Additional information  - Adds a single test case.  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,activerecord/test/cases/timestamp_test.rb,markhallen,2023-02-10T10:13:24Z,2023-02-10T15:37:40Z
45389,47767,Fix #45389 | `updated_at` not updating in `before_update` callback,"<!-- Thanks for contributing to Rails!  Please do not make *Draft* pull requests  as they still send notifications to everyone watching the Rails repo.  Create a pull request when it is ready for review and feedback from the Rails team :).  If your pull request affects documentation or any non-code changes  guidelines for those changes are [available here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)  About this template  The following template aims to help contributors write a good description for their pull requests. We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added)  motivation behind the changes  and complete the checklist below before opening a pull request.  Feel free to discard it if you need to (e.g. when you just fix a typo). -->  ### Motivation / Background  <!-- Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important? If you are fixing a specific issue  include ""Fixes #ISSUE"" (replace with the issue number  remove the quotes) and the issue will be linked to this PR. -->  Fixes #45389.  As documented in the issue linked above  it would be expected that mutations made within `update` callbacks also update the `updated_at` timestamp  especially since this behaviour already occurs with `save` callbacks.  ### Detail  This Pull Request ensures that timestamps are **rewritten** once all `update` callbacks have run so that mutations made within them (if any) are recognised as updates  updating the `updated_at` timestamp as a result.  I initially considered just changing the ordering of when timestamps are set to be after all callbacks have been completed  but that would introduce a regression with the changes made [in this commit](https://github.com/rails/rails/commit/dddbccb25a709e1897326e2a25d37da83bbfd717) seeing as timestamps always need to be available inside callbacks.  I've also improved coverage for some related tests where timestamps are expected to exist within callbacks. These now test create  update and save callbacks (one type each) and not just a single create callback. I did this because I failed the only test that existed when working on my solution and thought it'd be valuable to cover all 3 of these callback types to ensure no regressions are intorduced.  ### Additional information  <!-- Provide additional information such as benchmarks  reference to other repositories or alternative solutions. -->  Shoutout to @markhallen for their debugging efforts and producing a failing test which (which I've stolen for this PR).  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,activerecord/lib/active_record/callbacks.rb; activerecord/lib/active_record/timestamp.rb; activerecord/test/cases/timestamp_test.rb,joshuay03,2023-03-25T06:06:01Z,2023-04-27T14:14:56Z
45339,45345,Fix #45339 attachments for new record within transaction,"### Summary  First attempt to fix #45339 by not using the `change.attachables` on the `#attach` method.  That change was introduced in https://github.com/rails/rails/commit/836eb915b14f01eca8a5ea655e4f30b6a8a7ce38 when fixing #36806 however when reverting the change  the test that was introduced along with it  still passes (except when append on assign).  ~We added a new failing test just in case but seems that the bug already existed even before #42300 . So it might be worth tackling it separately.~  cc @georgeclaghorn ",closed,activestorage/lib/active_storage/attached/many.rb; activestorage/test/models/attached/many_test.rb,santib,2022-06-13T19:41:19Z,2022-06-17T22:42:26Z
45289,45293,Correctly read the `cache_format_version` setting on boot,"### Summary  Fixes https://github.com/rails/rails/issues/45289  ### Other Information  I'm not sure if it's an antipattern to read from the config of specific modules in `railties/lib/rails/application/bootstrap.rb`. But we know for sure Active Support has loaded by then (I think)  and this seems like the only way to ensure that this config is used correctly.",closed,activesupport/lib/active_support/cache.rb; railties/lib/rails/application/bootstrap.rb; railties/test/application/configuration_test.rb,ghiculescu,2022-06-07T21:06:28Z,2022-06-08T18:55:16Z
45183,45198,Fix with_options bug when first argument is a Proc,"An ArgumentError was being raised when methods were called with (proc  options) inside a `with_options` block:  ```ruby def my_method(arg1  **kwargs)   [arg1  kwargs] end  # this would raise instead of merging options with_options(hello: ""world"") do   my_method(proc {}  {fizz: ""buzz""}) end ```  Fixes #45183",closed,activesupport/lib/active_support/option_merger.rb; activesupport/test/option_merger_test.rb,dirceu,2022-05-28T19:02:43Z,2022-05-28T20:33:38Z
45162,45368,Move db and shard selector initalizer to Railties,"In #45162 it was discovered that the multi_db generator that was created for 7.0 doesn't work correctly because that file is loaded _after_ the initializer in active record is run. I tried moving everything to an after_initialize but the middleware stack is frozen at that point. I also attempted to fix this in #45353 but it just didn't feel right to have to deprecate this behavior that _should_ work.  I then realized that most of the middleware in Rails is installed in the middleware stack file in railties. If I move the middleware installation to this file  everything works as necessary.  The only caveat is we need to check if `config` responds to `active_record` but I think that should be fine - we already do that in the framework defaults configuration.  Fixes #45162",closed,activerecord/lib/active_record/railtie.rb; railties/lib/rails/application/default_middleware_stack.rb; railties/test/application/middleware_test.rb,eileencodes,2022-06-15T15:30:01Z,2022-06-15T17:27:07Z
45158,45178,Allow setting db with use_postgresql tests,"If more than one test is using `use_postgresql` for it's tests and both need to create `db:create` those tests will fail often due to them running in parallel. I tried turning off parallelization for these tests and they still ran in separate processes. Ultimately though  turning off parallelization means we don't get to test parallelization. Instead I've added the ability to set a `database_name` so that in files that require dropping/creating the same db  we can set up a new db for those.  Fixes #45114 Fixes #45158",closed,railties/test/application/rake/dbs_test.rb; railties/test/application/rake/multi_dbs_test.rb; railties/test/isolation/abstract_unit.rb,eileencodes,2022-05-25T20:28:23Z,2022-05-26T15:46:16Z
45139,46180,Set default query tags format for upcoming Rails releases,"<!-- About this template  The following template aims to help contributors write a good description for their pull requests. We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added)  motivation behind the changes  and complete the checklist below before opening a pull request.  Feel free to discard it if you need to (e.g. when you just fix a typo). -->  ### Motivation / Background  This PR codifies the default formatter for Query Log tags  based on the released version.  This PR fixes: https://github.com/rails/rails/issues/46179  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] There are no typos in commit messages and comments. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Feature branch is up-to-date with `main` (if not - rebase it). * [x] Pull request only contains one commit for bug fixes and small features. If it's a larger feature  multiple commits are permitted but must be descriptive. * [x] Tests are added if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. * [x] PR is not in a draft state. * [x] CI is passing.  <!-- Note: Please avoid making *Draft* pull requests  as they still send notifications to everyone watching the Rails repo. Create a pull request when it is ready for review and feedback from the Rails team :).  If your pull request affects documentation or any non-code changes  guidelines for those changes are [available here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)  Thanks for contributing to Rails! --> ",closed,guides/source/configuring.md; railties/lib/rails/application/configuration.rb; railties/lib/rails/generators/rails/app/templates/config/initializers/new_framework_defaults_7_1.rb.tt; railties/test/application/query_logs_test.rb,modulitos,2022-10-03T06:12:54Z,2022-10-05T18:36:22Z
45121,45882,Stop gap solution for long output on test cases,"This patch just changes the inspect method on test case instances. Seeing test instance internals probably isn't helpful when an exception is raised (for example a `NoMethodError`).  This isn't as good as #45122  but should fix #45121  I don't think this is great  but should fix the immediate pain.  This does make me think we should have an API in Ruby for telling `inspect` what instance variables we would like it to use.  The implementation of `inspect` [simply loops over all instance variables](https://github.com/ruby/ruby/blob/0ad9cc16966c2e56f0fe7e5992edf76033d3a83f/object.c#L649)  but interestingly it doesn't call the `instance_variables` method to determine what IVs to inspect.  To me  it feels like these two objects should have different inspect output  but they don't:  ```ruby class Foo   def initialize     @foo = 1     @bar = 1   end end  class Bar < Foo   def instance_variables     [:@foo]   end end  p Foo.new p Bar.new ```  Anyone have any thoughts on this PR or the above thing?  I'm happy to file a redmine ticket wrt the inspect feature.",closed,activesupport/lib/active_support/test_case.rb,tenderlove,2022-08-24T17:05:04Z,2022-08-24T20:45:52Z
45114,45178,Allow setting db with use_postgresql tests,"If more than one test is using `use_postgresql` for it's tests and both need to create `db:create` those tests will fail often due to them running in parallel. I tried turning off parallelization for these tests and they still ran in separate processes. Ultimately though  turning off parallelization means we don't get to test parallelization. Instead I've added the ability to set a `database_name` so that in files that require dropping/creating the same db  we can set up a new db for those.  Fixes #45114 Fixes #45158",closed,railties/test/application/rake/dbs_test.rb; railties/test/application/rake/multi_dbs_test.rb; railties/test/isolation/abstract_unit.rb,eileencodes,2022-05-25T20:28:23Z,2022-05-26T15:46:16Z
45108,45109,Address QueryCacheTest#test_query_cache_does_not_allow_sql_key_mutation failure,"### Summary  This commit addresses this failure.  ```ruby $ cd activerecord $ ARCONN=postgresql bin/test test/cases/adapters/postgresql/composite_test.rb test/cases/query_cache_test.rb  -n ""/^(?:PostgresqlCompositeWithCustomOIDTest#(?:test_column)|QueryCacheTest#(?:test_query_cache_does_not_allow_sql_key_mutation))$/"" --seed 50299 Using postgresql Run options: -n ""/^(?:PostgresqlCompositeWithCustomOIDTest#(?:test_column)|QueryCacheTest#(?:test_query_cache_does_not_allow_sql_key_mutation))$/"" --seed 50299  .F  Failure: QueryCacheTest#test_query_cache_does_not_allow_sql_key_mutation [/home/yahonda/src/github.com/rails/rails/activerecord/test/cases/query_cache_test.rb:395]: 0 instead of 1 queries were executed.. Expected: 1   Actual: 0  bin/test test/cases/query_cache_test.rb:389  Finished in 0.096603s  20.7033 runs/s  72.4617 assertions/s. 2 runs  7 assertions  1 failures  0 errors  0 skips $ ```  Fix #45108 ",closed,activerecord/test/cases/query_cache_test.rb,yahonda,2022-05-16T15:39:47Z,2022-05-16T16:48:32Z
45092,45095,Improve `rails s` error message when no server could be found.,"Fix: https://github.com/rails/rails/issues/45092  Up until 3.0  `rails s` would always at least find webrick. But since it was removed in Ruby 3.0  it's now possible to end up with no available server at all.  In such case we should recommend adding puma to the Gemfile.  NB: I tried to add a test for this  but it's really complex as we have to remove puma from the test app Gemfile and bundle bundle install. Not sure it's worth it.",closed,railties/lib/rails/commands/server/server_command.rb,casperisfine,2022-05-14T13:45:06Z,2022-05-14T13:50:56Z
45055,46251,Fix `Time#change` and `#advance` around the end of DST,"Prior to this commit  when `Time#change` or `Time#advance` constructed a time inside the final stretch of Daylight Saving Time (DST)  the non-DST offset would always be chosen for local times:    ```ruby   ENV[""TZ""] = ""US/Eastern""    time = Time.local(2021  11  07  00  59  59) + 1   # => 2021-11-07 01:00:00 -0400   time.change(day: 07)   # => 2021-11-07 01:00:00 -0500   time.advance(seconds: 0)   # => 2021-11-07 01:00:00 -0500    time = Time.local(2021  11  06  01  00  00)   # => 2021-11-06 01:00:00 -0400   time.change(day: 07)   # => 2021-11-07 01:00:00 -0500   time.advance(days: 1)   # => 2021-11-07 01:00:00 -0500   ```  And the DST offset would always be chosen for times with a `TimeZone` object:    ```ruby   Time.zone = ""US/Eastern""    time = Time.new(2021  11  07  02  00  00  Time.zone) - 3600   # => 2021-11-07 01:00:00 -0500   time.change(day: 07)   # => 2021-11-07 01:00:00 -0400   time.advance(seconds: 0)   # => 2021-11-07 01:00:00 -0400    time = Time.new(2021  11  8  01  00  00  Time.zone)   # => 2021-11-08 01:00:00 -0500   time.change(day: 07)   # => 2021-11-07 01:00:00 -0400   time.advance(days: -1)   # => 2021-11-07 01:00:00 -0400   ```  This commit fixes `Time#change` and `Time#advance` to choose the offset that matches the original time's offset when possible:    ```ruby   ENV[""TZ""] = ""US/Eastern""    time = Time.local(2021  11  07  00  59  59) + 1   # => 2021-11-07 01:00:00 -0400   time.change(day: 07)   # => 2021-11-07 01:00:00 -0400   time.advance(seconds: 0)   # => 2021-11-07 01:00:00 -0400    time = Time.local(2021  11  06  01  00  00)   # => 2021-11-06 01:00:00 -0400   time.change(day: 07)   # => 2021-11-07 01:00:00 -0400   time.advance(days: 1)   # => 2021-11-07 01:00:00 -0400    Time.zone = ""US/Eastern""    time = Time.new(2021  11  07  02  00  00  Time.zone) - 3600   # => 2021-11-07 01:00:00 -0500   time.change(day: 07)   # => 2021-11-07 01:00:00 -0500   time.advance(seconds: 0)   # => 2021-11-07 01:00:00 -0500    time = Time.new(2021  11  8  01  00  00  Time.zone)   # => 2021-11-08 01:00:00 -0500   time.change(day: 07)   # => 2021-11-07 01:00:00 -0500   time.advance(days: -1)   # => 2021-11-07 01:00:00 -0500   ```  Fixes #45055. Closes #45556. Closes #46248.  ---  /cc @khall I've added you as co-author for your work on #46248. /cc @takp I've added you as co-author for your work on #45556. ",closed,activesupport/CHANGELOG.md; activesupport/lib/active_support/core_ext/time/calculations.rb; activesupport/test/core_ext/time_ext_test.rb,jonathanhefner,2022-10-15T20:26:14Z,2022-10-24T21:07:47Z
45034,45115,Fix using helpers in `content_security_policy` and `permissions_policy`,"Fixes https://github.com/rails/rails/issues/45034  Currently helpers that are generated using `helper_method` cannot be used in `content_security_policy` and `permissions_policy`  this is because the use of `yield` causes `self` to be set incorrectly. By using `instance_exec` we ensure the scoping is correct so that you can access the same methods you'd be able to if you wrote your own `before_action`.  cc @lavaturtle ",closed,actionpack/CHANGELOG.md; actionpack/lib/action_controller/metal/content_security_policy.rb; actionpack/lib/action_controller/metal/permissions_policy.rb; actionpack/test/dispatch/content_security_policy_test.rb; actionpack/test/dispatch/permissions_policy_test.rb,ghiculescu,2022-05-17T13:38:51Z,2022-05-18T20:51:36Z
45028,49010,select existing article status if any  in Getting Started Guide -- Fixes #45028 (mostly),"### Motivation / Background  In the Getting Started guide  in the dropdown for an article or comment's status  there is a bug.  Pre-selecting `public` will make _all_ articles seem `public ` even if their status is really something else -- even `nil`.  The `nil` case was reported in issue #45028  but it also applies to articles with other statuses.  Selecting `article.status || 'public'` instead will fix this  in _most_ cases.  Pre-existing articles with `nil` status will still show up as `public`  but if the form is submitted  they will indeed become `public`.  This commit makes that change  and adds text to explain why it is done.  Fixes #45028 (mostly)  This Pull Request has been created because I stumbled across the issue (while looking to see whether my other PR was redundant)  verified the problem  and thought of a quick and easy solution for the majority of cases.  :-)  (And yes  verified that the fix works  at least On My Machine  ;-) )  ### Checklist  * [Yes ] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [Yes] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [ N/A] Tests are added or updated if you fix a bug or add a feature. * [ N/A] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.",closed,guides/source/getting_started.md,davearonson,2023-08-23T01:14:53Z,2023-08-24T21:31:47Z
45014,45027,Fix tag helper regression,"Vue.js  alpinejs  and potentially other JS libraries support tags starting with `@` symbols. This was broken by the recent security release in https://github.com/rails/rails/commit/649516ce0feb699ae06a8c5e81df75d460cc9a85  I've only added `@` to the list even though there are potentially other safe characters. We can add more if necessary (and if safe).  Fixes: * #45014 * #44972   cc/ @tenderlove ",closed,actionview/test/template/tag_helper_test.rb; activesupport/lib/active_support/core_ext/string/output_safety.rb,eileencodes,2022-05-05T14:45:24Z,2022-05-05T18:46:19Z
45001,45475,Makes the  API documentation link relative,"This has been mentioned in #45001 and helps avoiding switching the api version unintentionally.  I'm not sure if there's a way to update the guides.rubyonrails.org links as well with the correct version number  since they refer to the guides and not the rdocs. ",closed,railties/RDOC_MAIN.rdoc,codergeek121,2022-06-27T20:43:30Z,2022-10-18T19:20:17Z
44972,45027,Fix tag helper regression,"Vue.js  alpinejs  and potentially other JS libraries support tags starting with `@` symbols. This was broken by the recent security release in https://github.com/rails/rails/commit/649516ce0feb699ae06a8c5e81df75d460cc9a85  I've only added `@` to the list even though there are potentially other safe characters. We can add more if necessary (and if safe).  Fixes: * #45014 * #44972   cc/ @tenderlove ",closed,actionview/test/template/tag_helper_test.rb; activesupport/lib/active_support/core_ext/string/output_safety.rb,eileencodes,2022-05-05T14:45:24Z,2022-05-05T18:46:19Z
44923,45078,Don't change the encoding of frozen parameters,"Fix: https://github.com/rails/rails/issues/44923  The fix may seem very ad hoc  but this methods assumes all params come from Rack  hence are mutable. So checking for frozen is a decent proxy for ignoring the router defaults.  One worry I have is that frozen strings can also come from controller tests.   cc @jason-o-matic",closed,actionpack/lib/action_dispatch/request/utils.rb; actionpack/test/dispatch/request_test.rb,casperisfine,2022-05-12T13:26:16Z,2022-05-14T12:48:22Z
44846,44850,All intermediate delegation methods should preserve kwargs flag,"Since https://github.com/ruby/ruby/commit/0456826180a0c9c3a5b33542ad4b4fc250c2f13d  `foo(*caller_args)` method call delegation no longer preserve kwargs flag.  Fixes #44846. ",closed,actionmailer/lib/action_mailer/base.rb; actionmailer/lib/action_mailer/rescuable.rb; actionpack/lib/abstract_controller/base.rb; actionpack/lib/abstract_controller/callbacks.rb; actionview/lib/action_view/rendering.rb; activemodel/lib/active_model/attribute_methods.rb; activerecord/lib/active_record/relation.rb,kamipo,2022-04-06T07:01:20Z,2022-04-06T07:10:42Z
44839,44845,Fix touch and update_column/s for readonly records,"The methods `touch`  `update_column`  and `update_columns` were not raising an error when the record was readonly.  Fixes #44839 ",closed,activerecord/lib/active_record/persistence.rb; activerecord/test/cases/readonly_test.rb,eileencodes,2022-04-05T14:54:26Z,2022-04-05T15:31:27Z
44460,45187,Dup options in `validates_with`,"Some validators  such as validators that inherit from `EachValidator`  mutate the options they receive.  This can cause problems when passing multiple validators and options to `validates_with`.  This can also be a problem if a validator deletes standard options such as `:if` and `:on`  because the validation callback would then not receive them.  This commit modifies `validates_with` to `dup` options before passing them to validators  thus preventing these issues.  Fixes #44460. Closes #44476.  ---  @dspaeth-lp I've tried to add you as a co-author due to your work on #44476  but GitHub doesn't seem to like the ""ä"" in your name -- see `=?UTF-8?q?Dieter=20Sp=C3=A4th?=` at https://patch-diff.githubusercontent.com/raw/rails/rails/pull/44476.patch. ",closed,activemodel/lib/active_model/validations/with.rb; activemodel/test/cases/validations/with_validation_test.rb,jonathanhefner,2022-05-26T20:09:44Z,2022-05-26T21:02:36Z
44325,45359,Update Command Line guide --database usage [ci-skip],"### Summary  The current Command Line guide has an advanced section describing specifying git as SCM and PostgreSQL as the database. This section is easily overlooked: https://github.com/rails/rails/issues/44325  By moving whole ""advanced"" section under the `rails new` section  it's easier to find. Also specifying the database is pretty common I guess and not an ""advanced"" topic.  All mentions of the SCM option have been removed  as it seems to no longer be an option and we always initialize with Git only.",closed,guides/source/command_line.md,p8,2022-06-14T20:22:50Z,2022-06-15T05:48:25Z
44314,45033,Support encrypted attributes on columns with default values,"This adds support for encrypted attributes defined on columns with default values.   Before  it was failing to read these columns because their contents were not encrypted  unless you enabled `config.active_record.encryption.support_unencrypted_data`. Now  it will encrypt those values at record-creation time.  Thanks to @fatkodima for exploring this problem in https://github.com/rails/rails/pull/44993 (added as Co author here).  Fixes #44314 #43664 Closes #44993 ",closed,activerecord/CHANGELOG.md; activerecord/lib/active_record/encryption/encryptable_record.rb; activerecord/lib/active_record/encryption/encrypted_attribute_type.rb; activerecord/test/cases/encryption/encryptable_record_test.rb; activerecord/test/schema/schema.rb,jorgemanrubia,2022-05-06T12:39:02Z,2022-05-09T12:13:53Z
44242,44244,Don't stream redirect controller responses,They don't need to be streamed and by including ActiveStorage::Streaming  they spin up new threads which can cause problems with connection pools as detailed in #44242  ### Summary  <!-- Provide a general description of the code changes in your pull request... were there any bugs you had fixed? If so  mention them. If these bugs have open GitHub issues  be sure to tag them here as well  to keep the conversation linked together. -->  ### Other Information  <!-- If there's anything else that's important and relevant to your pull request  mention that information here. This could include benchmarks  or other information.  If you are updating any of the CHANGELOG files or are asked to update the CHANGELOG files by reviewers  please add the CHANGELOG entry at the top of the file.  Finally  if your pull request affects documentation or any non-code changes  guidelines for those changes are [available here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)  Thanks for contributing to Rails! -->  <!-- Note: Please avoid making *Draft* pull requests  as they still send notifications to everyone watching the Rails repo. Create a pull request when it is ready for review and feedback from the Rails team :). --> ,closed,activestorage/CHANGELOG.md; activestorage/app/controllers/active_storage/base_controller.rb; activestorage/app/controllers/active_storage/blobs/proxy_controller.rb; activestorage/app/controllers/active_storage/representations/proxy_controller.rb,lukel97,2022-01-24T17:59:13Z,2022-01-26T12:14:45Z
43664,45033,Support encrypted attributes on columns with default values,"This adds support for encrypted attributes defined on columns with default values.   Before  it was failing to read these columns because their contents were not encrypted  unless you enabled `config.active_record.encryption.support_unencrypted_data`. Now  it will encrypt those values at record-creation time.  Thanks to @fatkodima for exploring this problem in https://github.com/rails/rails/pull/44993 (added as Co author here).  Fixes #44314 #43664 Closes #44993 ",closed,activerecord/CHANGELOG.md; activerecord/lib/active_record/encryption/encryptable_record.rb; activerecord/lib/active_record/encryption/encrypted_attribute_type.rb; activerecord/test/cases/encryption/encryptable_record_test.rb; activerecord/test/schema/schema.rb,jorgemanrubia,2022-05-06T12:39:02Z,2022-05-09T12:13:53Z
43312,43337,Fix `thread_mattr_accessor` `default` option behavior,"### Summary  This makes the value supplier to the `default` option of `thread_mattr_accessor` to be set in descendant classes as well as in any new Thread that starts.  Previously  the `default` value provided was set only at the moment of defining the attribute writer  which would cause the attribute to be uninitialized in descendants and in other threads.  For instance:      class Processor       thread_mattr_accessor :mode  default: :smart     end      class SubProcessor < Processor     end      SubProcessor.mode # => :smart     Thread.new do       Processor.mode # => :smart     end.join  when in the past  those two calls would have returned `nil`.  Fixes #43312  ### Other Information  This logic comes with a performance impact on the reader  here is the benchmark:      Warming up --------------------------------------             original   238.780k i/100ms              patched   162.765k i/100ms     Calculating -------------------------------------             original    2.376M (± 9.4%) i/s -  11.939M in 5.078355s              patched    1.635M (±16.4%) i/s -   7.813M in 5.008433s      Comparison:             original:  2375953.1 i/s              patched:  1634668.2 i/s - 1.45x  (± 0.00) slower  <!-- If there's anything else that's important and relevant to your pull request  mention that information here. This could include benchmarks  or other information.  If you are updating any of the CHANGELOG files or are asked to update the CHANGELOG files by reviewers  please add the CHANGELOG entry at the top of the file.  Finally  if your pull request affects documentation or any non-code changes  guidelines for those changes are [available here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)  Thanks for contributing to Rails! -->  <!-- Note: Please avoid making *Draft* pull requests  as they still send notifications to everyone watching the Rails repo. Create a pull request when it is ready for review and feedback from the Rails team :). --> ",closed,activesupport/CHANGELOG.md; activesupport/lib/active_support/core_ext/module/attribute_accessors_per_thread.rb; activesupport/test/core_ext/module/attribute_accessor_per_thread_test.rb,tdeo,2021-09-30T08:15:23Z,2022-08-25T17:09:20Z
42873,45450,Only remove connection for an existing pool if the config is different,"Previously Rails would always remove the connection if it found a matching class in the pool manager. Therefore if `ActiveRecord::Base.establish_connection` was called with the same config  each time it was called it would be clobbered  even though the config hasn't changed and the existing connection is prefectly fine. As far as I can tell from conversations and reading the history this functionality was added for ActiveRecord tests to be able to clobber the connection and use a new config  then re-establish the old connection. Essentially outside Rake tasks and AR tests  this functionality doesn't have a ton of value.  On top of not adding a ton of value  this has resulted in a few bugs. In Rails 6.0 I made it so that if you established a connection on `ApplicationRecord` Rails would treat that connection the same as `ActiveRecord::Base.` The reason for this is that the Railtie establishes a connection on boot to the first database  but then if you're using multiple databases you're calling `connects_to` in your `ApplicationRecord` or primary abstract class which essentially doubles your connections to the same database. To avoid opening 2 connections to the same database  Rails treats them the same.  However  because we have this code that removes existing connections  when an application boots  `ApplicationRecord` will clobber the connection that the Railtie established even though the connection configs are the same.  This removal of the connection caused bugs in migrations that load up a model connected to `ApplicationRecord` (ex `Post.first`) and then calls `execute(""SELECT 1"")` (obviously a simplified example). When `execute` runs the connection is different from the one opened to run the migration and essentially it is lost when the `remove_connection` code is called.  To fix this I've updated the code to only remove the connection if the database config is different. Ultimately I'd like to remove this code altogether but to do that we first need to stop using `Base.establish_connection` in the rake tasks and tests. This will fix the major bugs until I come up with a solution for the areas that currently need to call `establish_connection` on Base.  The added benefit of this change is that if your app is calling `establish_connection` multiple times with the same config  it is now 3x faster than the previous implementation because we can return the found pool instead of setting it up again. To benchmark this I duplicated the `establish_connection` method to use the new behavior with a new name.  Benchmark script:  ```ruby require ""active_record"" require ""logger"" require ""benchmark/ips""  config_hash = { ""development"" => { ""primary"" => { ""adapter"" => ""mysql2""  ""username"" => ""rails""  ""database"" => ""activerecord_unittest""}}} ActiveRecord::Base.configurations = config_hash  db_config = ActiveRecord::Base.configurations.configs_for(env_name: ""development""  name: ""primary"")  ActiveRecord::Base.connected_to(role: :writing  prevent_writes: true) do   Benchmark.ips do |x|     x.report ""establish_connection with remove"" do       ActiveRecord::Base.establish_connection(db_config)     end      x.report ""establish_connection without remove"" do       ActiveRecord::Base.establish_connection_no_remove(db_config)     end      x.compare!   end end ```  Benchmark results:       ``` Warming up -------------------------------------- establish_connection with remove                             4.677k i/100ms establish_connection without remove                         19.501k i/100ms Calculating ------------------------------------- establish_connection with remove                             41.252k (±11.3%) i/s -    205.788k in   5.075525s establish_connection without remove                         179.205k (± 6.9%) i/s -    897.046k in   5.029742s  Comparison: establish_connection without remove:   179205.1 i/s establish_connection with remove:    41252.3 i/s - 4.34x  (± 0.00) slower ```  Other changes:  1) sqlite3 now disconnects and reconnects the connection when `purge` is called. This is necessary now that a new connection isn't created everyt time `establish_connection` is called. Without this change to purge the new database is left in an inaccessible state causing a readonly error from the sqlite3 client. This wasn't happening in mysql or postgres because they were already reconnecting the db connection. 2) I added `remove_connection` to tests that use `ApplicationRecord`. This is required because `ApplicationRecord` or any class that is a `primary_abstract_class` will be treated the same as `ActiveRecord::Base`. This is fine in applications because they are shared connections  but in the AR test environment  we don't want those connnections to stick around (we want AR::Base back). 3) In the async tests I removed 2 calls to `establish_connection`. These were causing sqlite3 tests to leak the state of async_executor because it's stored on the connection. I'm not sure why these were calling `establish_connection` but it's not necessary and was leaking state when now that we are no longer removing the connection.  Fixes: #41855 Fixes: #41876 Fixes: #42873 Fixes: #43004  cc/ @matthewd as we talked about this today.",closed,activerecord/CHANGELOG.md; activerecord/lib/active_record/connection_adapters/abstract/connection_handler.rb; activerecord/lib/active_record/railties/databases.rake; activerecord/lib/active_record/tasks/sqlite_database_tasks.rb; activerecord/test/cases/connection_adapters/connection_handler_test.rb; activerecord/test/cases/connection_adapters/connection_swapping_nested_test.rb; activerecord/test/cases/primary_class_test.rb; activerecord/test/cases/relation/load_async_test.rb; railties/test/application/rake/migrations_test.rb,eileencodes,2022-06-23T19:41:16Z,2022-06-29T17:37:47Z
41855,45450,Only remove connection for an existing pool if the config is different,"Previously Rails would always remove the connection if it found a matching class in the pool manager. Therefore if `ActiveRecord::Base.establish_connection` was called with the same config  each time it was called it would be clobbered  even though the config hasn't changed and the existing connection is prefectly fine. As far as I can tell from conversations and reading the history this functionality was added for ActiveRecord tests to be able to clobber the connection and use a new config  then re-establish the old connection. Essentially outside Rake tasks and AR tests  this functionality doesn't have a ton of value.  On top of not adding a ton of value  this has resulted in a few bugs. In Rails 6.0 I made it so that if you established a connection on `ApplicationRecord` Rails would treat that connection the same as `ActiveRecord::Base.` The reason for this is that the Railtie establishes a connection on boot to the first database  but then if you're using multiple databases you're calling `connects_to` in your `ApplicationRecord` or primary abstract class which essentially doubles your connections to the same database. To avoid opening 2 connections to the same database  Rails treats them the same.  However  because we have this code that removes existing connections  when an application boots  `ApplicationRecord` will clobber the connection that the Railtie established even though the connection configs are the same.  This removal of the connection caused bugs in migrations that load up a model connected to `ApplicationRecord` (ex `Post.first`) and then calls `execute(""SELECT 1"")` (obviously a simplified example). When `execute` runs the connection is different from the one opened to run the migration and essentially it is lost when the `remove_connection` code is called.  To fix this I've updated the code to only remove the connection if the database config is different. Ultimately I'd like to remove this code altogether but to do that we first need to stop using `Base.establish_connection` in the rake tasks and tests. This will fix the major bugs until I come up with a solution for the areas that currently need to call `establish_connection` on Base.  The added benefit of this change is that if your app is calling `establish_connection` multiple times with the same config  it is now 3x faster than the previous implementation because we can return the found pool instead of setting it up again. To benchmark this I duplicated the `establish_connection` method to use the new behavior with a new name.  Benchmark script:  ```ruby require ""active_record"" require ""logger"" require ""benchmark/ips""  config_hash = { ""development"" => { ""primary"" => { ""adapter"" => ""mysql2""  ""username"" => ""rails""  ""database"" => ""activerecord_unittest""}}} ActiveRecord::Base.configurations = config_hash  db_config = ActiveRecord::Base.configurations.configs_for(env_name: ""development""  name: ""primary"")  ActiveRecord::Base.connected_to(role: :writing  prevent_writes: true) do   Benchmark.ips do |x|     x.report ""establish_connection with remove"" do       ActiveRecord::Base.establish_connection(db_config)     end      x.report ""establish_connection without remove"" do       ActiveRecord::Base.establish_connection_no_remove(db_config)     end      x.compare!   end end ```  Benchmark results:       ``` Warming up -------------------------------------- establish_connection with remove                             4.677k i/100ms establish_connection without remove                         19.501k i/100ms Calculating ------------------------------------- establish_connection with remove                             41.252k (±11.3%) i/s -    205.788k in   5.075525s establish_connection without remove                         179.205k (± 6.9%) i/s -    897.046k in   5.029742s  Comparison: establish_connection without remove:   179205.1 i/s establish_connection with remove:    41252.3 i/s - 4.34x  (± 0.00) slower ```  Other changes:  1) sqlite3 now disconnects and reconnects the connection when `purge` is called. This is necessary now that a new connection isn't created everyt time `establish_connection` is called. Without this change to purge the new database is left in an inaccessible state causing a readonly error from the sqlite3 client. This wasn't happening in mysql or postgres because they were already reconnecting the db connection. 2) I added `remove_connection` to tests that use `ApplicationRecord`. This is required because `ApplicationRecord` or any class that is a `primary_abstract_class` will be treated the same as `ActiveRecord::Base`. This is fine in applications because they are shared connections  but in the AR test environment  we don't want those connnections to stick around (we want AR::Base back). 3) In the async tests I removed 2 calls to `establish_connection`. These were causing sqlite3 tests to leak the state of async_executor because it's stored on the connection. I'm not sure why these were calling `establish_connection` but it's not necessary and was leaking state when now that we are no longer removing the connection.  Fixes: #41855 Fixes: #41876 Fixes: #42873 Fixes: #43004  cc/ @matthewd as we talked about this today.",closed,activerecord/CHANGELOG.md; activerecord/lib/active_record/connection_adapters/abstract/connection_handler.rb; activerecord/lib/active_record/railties/databases.rake; activerecord/lib/active_record/tasks/sqlite_database_tasks.rb; activerecord/test/cases/connection_adapters/connection_handler_test.rb; activerecord/test/cases/connection_adapters/connection_swapping_nested_test.rb; activerecord/test/cases/primary_class_test.rb; activerecord/test/cases/relation/load_async_test.rb; railties/test/application/rake/migrations_test.rb,eileencodes,2022-06-23T19:41:16Z,2022-06-29T17:37:47Z
41830,47107,Use `config.credentials.*` in credentials commands,"This commit changes the credentials commands (e.g. `bin/rails credentials:edit`) to respect `config.credentials.content_path` and `config.credentials.key_path` when set in `config/application.rb`.  Before this commit:  * Unlike other `bin/rails` commands  `bin/rails credentials:edit` ignored `RAILS_ENV`  and would always edit `config/credentials.yml.enc`.  * `bin/rails credentials:edit --environment foo` would create and edit `config/credentials/foo.yml.enc`.  * If `config.credentials.content_path` or `config.credentials.key_path` was set  `bin/rails credentials:edit` could not be used.  Editing credentials required using `bin/rails encrypted:edit path/to/credentials --key path/to/key`.  After this commit:  * `bin/rails credentials:edit` will edit the credentials file that the app would load for the current `RAILS_ENV`.  * `bin/rails credentials:edit` respects `config.credentials.content_path` and `config.credentials.key_path` when set in `config/application.rb`. Using `RAILS_ENV`  environment-specific paths can be set  such as:      ```ruby     # config/application.rb     module MyCoolApp       class Application < Rails::Application         config.credentials.content_path = ""my_credentials/#{Rails.env}.yml.enc""          config.credentials.key_path = ""path/to/production.key"" if Rails.env.production?       end     end     ```  * `bin/rails credentials:edit --environment foo` will create `config/credentials/foo.yml.enc` _if_ `config.credentials.content_path` is not set for the `foo` environment.  It will then edit the credentials file that the app would load for the `foo` environment.  Note that the credentials commands do not run initializers.  Therefore  they will not  for example  attempt to connect to the database of the specified environment.  Fixes #37631. Fixes #41830. Fixes #46884. Closes #46904.  ---  I have a follow-up commit for supporting `config.credentials.content_path` and `config.credentials.key_path` in `config/environments/*.rb`.  /cc @ghiculescu I've added you as a co-author for your work on #46904.  ",closed,guides/source/configuring.md; railties/CHANGELOG.md; railties/lib/rails/application/configuration.rb; railties/lib/rails/commands/credentials/credentials_command.rb; railties/lib/rails/generators/rails/credentials/credentials_generator.rb; railties/test/commands/credentials_test.rb,jonathanhefner,2023-01-22T23:04:20Z,2023-01-25T22:27:52Z
41661,42300,Fix #41661 attaching multiple times within transaction,"### Summary  Fix #41661 . Similar to https://github.com/rails/rails/commit/836eb915b14f01eca8a5ea655e4f30b6a8a7ce38 when attaching multiple times within a transaction we need to check for `change&.attachables` instead of just `blobs`.  In the test I created a blob outside the transaction on purpose to make sure it won't get deleted because of the code change",closed,activestorage/CHANGELOG.md; activestorage/lib/active_storage/attached/changes/create_many.rb; activestorage/lib/active_storage/attached/model.rb; activestorage/test/models/attached/many_test.rb,santib,2021-05-27T01:28:08Z,2022-06-07T04:23:34Z
41651,42933,Don't skip some columns in `column_types` on Postgres,"Fixes https://github.com/rails/rails/issues/41651  by partially reverting https://github.com/rails/rails/pull/39097. I just reverted the line that @terracatta highlighted as problematic.  I ran the same benchmark as https://github.com/rails/rails/pull/39097 and it seems like this change does not cause a perf regression.  ```ruby  require ""bundler/inline""  gemfile(true) do   source ""https://rubygems.org""    git_source(:github) { |repo| ""https://github.com/#{repo}.git"" }    gem ""rails""  path: ""/Users/alex/code/rails"" # github: ""rails/rails""  branch: ""main""   gem ""sqlite3""   gem ""benchmark-ips"" end  require ""active_record""  ActiveRecord::Base.establish_connection(adapter: ""sqlite3""  database: "":memory:"")  ActiveRecord::Schema.define do   create_table :active_storage_blobs do |t|     t.string   :key           null: false     t.string   :filename      null: false     t.string   :content_type     t.text     :metadata     t.string   :service_name  null: false     t.bigint   :byte_size     null: false     t.string   :checksum      null: false     t.datetime :created_at    null: false      t.index [ :key ]  unique: true   end end  class ActiveStorageBlob < ActiveRecord::Base end  Benchmark.ips do |x|   x.report(""find_by"") { ActiveStorageBlob.find_by(id: 1) } end ```  This branch:  ``` Warming up --------------------------------------              find_by     1.940k i/100ms Calculating -------------------------------------              find_by     17.928k (± 4.8%) i/s -     91.180k in   5.098301s ```  Main:  ``` Warming up --------------------------------------              find_by     1.912k i/100ms Calculating -------------------------------------              find_by     17.961k (± 4.8%) i/s -     89.864k in   5.015252s ```  So it's basically the same. cc @terracatta @boblail ",closed,activerecord/lib/active_record/connection_adapters/postgresql/database_statements.rb; activerecord/test/cases/base_test.rb; activerecord/test/cases/calculations_test.rb,ghiculescu,2021-08-02T23:33:37Z,2022-09-16T21:04:12Z
41195,42650,Normalize virtual attributes on ActiveRecord::Persistence#becomes,"### Summary  When source and target classes have a different set of attributes adapts attributes such that the extra attributes from target are added.  Fixes #41195  Co-authored-by: SampsonCrowley <sampsonsprojects@gmail.com> Co-authored-by: Jonathan Hefner <jonathan@hefner.pro>  <!-- Provide a general description of the code changes in your pull request... were there any bugs you had fixed? If so  mention them. If these bugs have open GitHub issues  be sure to tag them here as well  to keep the conversation linked together. -->  <!-- If there's anything else that's important and relevant to your pull request  mention that information here. This could include benchmarks  or other information.  If you are updating any of the CHANGELOG files or are asked to update the CHANGELOG files by reviewers  please add the CHANGELOG entry at the top of the file.  Finally  if your pull request affects documentation or any non-code changes  guidelines for those changes are [available here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)  Thanks for contributing to Rails! --> ",closed,activemodel/lib/active_model/attribute_set.rb; activerecord/CHANGELOG.md; activerecord/lib/active_record/persistence.rb; activerecord/test/cases/persistence_test.rb; activerecord/test/models/company.rb,intrip,2021-06-30T12:30:49Z,2022-08-25T15:48:54Z
41176,54376,Clear AR connections in tests before forking for parallelization,"### Motivation / Background  Works around #41176 which seems to affect the mysql2 adapter built with the mysql8 client library on MacOS.  ### Detail  This PR introduces a before-fork hook into ActiveSupport::Testing::Parallelization  which is invoked immediately before spawning the worker processes.  This PR also implements a before-fork hook in ActiveRecord::TestDatabases to clear connections  to avoid the symptoms of poor fork-safety in the mysql2 8.0 client / mysql2 adapter.  We see this problem relatively often at 37s when running large test suites on MacOS development machines.  ### Additional information  This PR does not directly address the fork-safety issue in the mysql8 client library  but closing connections in a test process before forking doesn't have any obvoius negative impacts that I know of  and so my hope is something like this would be an acceptable tradeoff.  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [-] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,activerecord/CHANGELOG.md; activerecord/lib/active_record/test_databases.rb; activesupport/CHANGELOG.md; activesupport/lib/active_support/testing/parallelization.rb,flavorjones,2025-01-27T19:31:04Z,2025-01-29T13:47:12Z
39230,46178,Validate options when managing columns and tables in migration,"### Motivation / Background  This Pull Request has been created because invalid options used when managing columns and tables in migrations are silently ignored.   Previous attempt in https://github.com/rails/rails/pull/33347 Resolves https://github.com/rails/rails/issues/33284 Resolves https://github.com/rails/rails/issues/39230  ### Detail  This Pull Request adds a step to validate the options that are used when managing columns and tables in migrations. The intention is to only validate options for new migrations that are added. Invalid options used in old migrations are silently ignored like they always have been.  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] There are no typos in commit messages and comments. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [X] Feature branch is up-to-date with `main` (if not - rebase it). * [x] Pull request only contains one commit for bug fixes and small features. If it's a larger feature  multiple commits are permitted but must be descriptive. * [x] Tests are added if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. * [X] PR is not in a draft state. * [X] CI is passing. ",closed,activerecord/CHANGELOG.md; activerecord/lib/active_record/connection_adapters/abstract/schema_definitions.rb; activerecord/lib/active_record/connection_adapters/abstract/schema_statements.rb; activerecord/lib/active_record/connection_adapters/mysql/schema_definitions.rb; activerecord/lib/active_record/connection_adapters/mysql/schema_statements.rb; activerecord/lib/active_record/connection_adapters/postgresql/schema_definitions.rb; activerecord/lib/active_record/connection_adapters/sqlite3/schema_statements.rb; activerecord/lib/active_record/migration/compatibility.rb; activerecord/test/cases/migration/compatibility_test.rb; activerecord/test/cases/migration/invalid_options_test.rb,tgxworld,2022-10-03T02:12:18Z,2022-10-11T08:02:34Z
38698,48148,[Fix #38698] Fix nested Arrays when permitting arbitrary Hashes,"<!-- Thanks for contributing to Rails!  Please do not make *Draft* pull requests  as they still send notifications to everyone watching the Rails repo.  Create a pull request when it is ready for review and feedback from the Rails team :).  If your pull request affects documentation or any non-code changes  guidelines for those changes are [available here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)  About this template  The following template aims to help contributors write a good description for their pull requests. We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added)  motivation behind the changes  and complete the checklist below before opening a pull request.  Feel free to discard it if you need to (e.g. when you just fix a typo). -->  ### Motivation / Background  <!-- Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important? If you are fixing a specific issue  include ""Fixes #ISSUE"" (replace with the issue number  remove the quotes) and the issue will be linked to this PR. -->  Fixes #38698   ### Detail  This Pull Request fixes #38698 by allowing nested Arrays to pass through unchanged when permitting arbitrary hashes.  (i.e. `permit(data: {})`)  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,actionpack/lib/action_controller/metal/strong_parameters.rb; actionpack/test/controller/parameters/parameters_permit_test.rb,tindron,2023-05-06T05:34:56Z,2023-05-08T05:42:26Z
37793,52680,Dispatch direct-upload events on attachment uploads,"Closes #37793 Supersedes #37794  <!-- Thanks for contributing to Rails!  Please do not make *Draft* pull requests  as they still send notifications to everyone watching the Rails repo.  Create a pull request when it is ready for review and feedback from the Rails team :).  If your pull request affects documentation or any non-code changes  guidelines for those changes are [available here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)  About this template  The following template aims to help contributors write a good description for their pull requests. We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added)  the motivation behind the changes  and complete the checklist below before opening a pull request.  Feel free to discard it if you need to (e.g. when you just fix a typo). -->  ### Motivation / Background  <!-- Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important? If you are fixing a specific issue  include ""Fixes #ISSUE"" (replace with the issue number  remove the quotes) and the issue will be linked to this PR. -->  When using Action Text's rich textarea   it's possible to attach files to the editor. Previously  that action didn't dispatch any events  which made it hard to react to the file uploads. For instance  if an upload failed  there was no way to notify the user about it  or remove the attachment from the editor.   ### Detail  This commits adds new events - `direct-upload:start`  `direct-upload:progress`  and `direct-upload:end` - similar to how Active Storage's direct uploads work.  There was an initial work done by @bradrees at #37794  which I used as a base (and give credit) here.  I'm unsure what's the proper way to test this. I'm open to suggestions.  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [ ] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,actiontext/CHANGELOG.md; actiontext/app/assets/javascripts/actiontext.esm.js; actiontext/app/assets/javascripts/actiontext.js; actiontext/app/javascript/actiontext/attachment_upload.js; activestorage/app/assets/javascripts/activestorage.esm.js; activestorage/app/assets/javascripts/activestorage.js; activestorage/app/javascript/activestorage/index.js; guides/source/action_text_overview.md,MatheusRich,2024-08-22T16:38:19Z,2024-08-27T00:20:59Z
37779,48852,Allow escaping of literal colons in `ActionRecord::Sanitization#replace_named_bind_variables`,"**[ This PR replaces #37797 which atrophied over the years. ]**  Fixes https://github.com/rails/rails/issues/37779.  This PR simply allows the ability to escape literal colons in SQL when using named bind params. See the above issue for a detailed description of the problem.    <!-- Thanks for contributing to Rails!  Please do not make *Draft* pull requests  as they still send notifications to everyone watching the Rails repo.  Create a pull request when it is ready for review and feedback from the Rails team :).  If your pull request affects documentation or any non-code changes  guidelines for those changes are [available here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)  About this template  The following template aims to help contributors write a good description for their pull requests. We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added)  motivation behind the changes  and complete the checklist below before opening a pull request.  Feel free to discard it if you need to (e.g. when you just fix a typo). -->  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,activerecord/CHANGELOG.md; activerecord/lib/active_record/sanitization.rb; activerecord/test/cases/sanitize_test.rb,f3ndot,2023-07-30T11:58:24Z,2023-08-01T14:38:04Z
37631,47107,Use `config.credentials.*` in credentials commands,"This commit changes the credentials commands (e.g. `bin/rails credentials:edit`) to respect `config.credentials.content_path` and `config.credentials.key_path` when set in `config/application.rb`.  Before this commit:  * Unlike other `bin/rails` commands  `bin/rails credentials:edit` ignored `RAILS_ENV`  and would always edit `config/credentials.yml.enc`.  * `bin/rails credentials:edit --environment foo` would create and edit `config/credentials/foo.yml.enc`.  * If `config.credentials.content_path` or `config.credentials.key_path` was set  `bin/rails credentials:edit` could not be used.  Editing credentials required using `bin/rails encrypted:edit path/to/credentials --key path/to/key`.  After this commit:  * `bin/rails credentials:edit` will edit the credentials file that the app would load for the current `RAILS_ENV`.  * `bin/rails credentials:edit` respects `config.credentials.content_path` and `config.credentials.key_path` when set in `config/application.rb`. Using `RAILS_ENV`  environment-specific paths can be set  such as:      ```ruby     # config/application.rb     module MyCoolApp       class Application < Rails::Application         config.credentials.content_path = ""my_credentials/#{Rails.env}.yml.enc""          config.credentials.key_path = ""path/to/production.key"" if Rails.env.production?       end     end     ```  * `bin/rails credentials:edit --environment foo` will create `config/credentials/foo.yml.enc` _if_ `config.credentials.content_path` is not set for the `foo` environment.  It will then edit the credentials file that the app would load for the `foo` environment.  Note that the credentials commands do not run initializers.  Therefore  they will not  for example  attempt to connect to the database of the specified environment.  Fixes #37631. Fixes #41830. Fixes #46884. Closes #46904.  ---  I have a follow-up commit for supporting `config.credentials.content_path` and `config.credentials.key_path` in `config/environments/*.rb`.  /cc @ghiculescu I've added you as a co-author for your work on #46904.  ",closed,guides/source/configuring.md; railties/CHANGELOG.md; railties/lib/rails/application/configuration.rb; railties/lib/rails/commands/credentials/credentials_command.rb; railties/lib/rails/generators/rails/credentials/credentials_generator.rb; railties/test/commands/credentials_test.rb,jonathanhefner,2023-01-22T23:04:20Z,2023-01-25T22:27:52Z
37524,46097,Multi-database: better support pending migration checks,"Co-authored-by: Guo Xiang Tan <gxtan1990@gmail.com>  cc @tgxworld   <!-- About this template  The following template aims to help contributors write a good description for their pull requests. We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added)  motivation behind the changes  and complete the checklist below before opening a pull request.  Feel free to discard it if you need to (e.g. when you just fix a typo). -->  ### Motivation / Background  <!-- Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important? -->  Another attempt at fixing https://github.com/rails/rails/issues/37524  ### Detail    ### Additional information  <!-- Provide additional information such as benchmarks  reference to other repositories or alternative solutions. -->  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] There are no typos in commit messages and comments. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Feature branch is up-to-date with `main` (if not - rebase it). * [x] Pull request only contains one commit for bug fixes and small features. If it's a larger feature  multiple commits are permitted but must be descriptive. * [x] Tests are added if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. * [x] PR is not in a draft state. * [ ] CI is passing.  <!-- Note: Please avoid making *Draft* pull requests  as they still send notifications to everyone watching the Rails repo. Create a pull request when it is ready for review and feedback from the Rails team :).  If your pull request affects documentation or any non-code changes  guidelines for those changes are [available here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)  Thanks for contributing to Rails! -->  Closes https://github.com/rails/rails/issues/37524",closed,activerecord/lib/active_record/migration.rb; activerecord/test/cases/migration/pending_migrations_test.rb,hkdsun,2022-09-22T08:34:53Z,2022-10-14T19:51:29Z
34443,54040,Add config option for MD5 class to support FIPS compliance,"<!-- Thanks for contributing to Rails!  Please do not make *Draft* pull requests  as they still send notifications to everyone watching the Rails repo.  Create a pull request when it is ready for review and feedback from the Rails team :).  If your pull request affects documentation or any non-code changes  guidelines for those changes are [available here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)  About this template  The following template aims to help contributors write a good description for their pull requests. We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added)  the motivation behind the changes  and complete the checklist below before opening a pull request.  Feel free to discard it if you need to (e.g. when you just fix a typo). -->  ### Motivation / Background  <!-- Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important? If you are fixing a specific issue  include ""Fixes #ISSUE"" (replace with the issue number  remove the quotes) and the issue will be linked to this PR. -->  This Pull Request has been created because `OpenSSL::Digest::MD5` is not available when OpenSSL is running in FIPS mode #34443  Fix: #34443  ### Detail  This Pull Request abstracts usages of `OpenSSL::Digest::MD5` to `ActiveStorage.digest_class` which may be set by a new configuration option `config.active_storage.digest_class`. The default continues to be `OpenSSL::Digest::MD5`.  This allows an alternative implementation of MD5 to be used when it is not available in OpenSSL due to FIPS compliance mode.  ### Additional information  A longer term term solution may be a refactoring of `ActiveStorage::Service::*Service` classes to support each digest type supported by each cloud service and a way to configure the digest to use per service or instance of service.  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,activestorage/CHANGELOG.md; activestorage/app/models/active_storage/blob.rb; activestorage/lib/active_storage.rb; activestorage/lib/active_storage/downloader.rb; activestorage/lib/active_storage/engine.rb; activestorage/lib/active_storage/service/disk_service.rb; activestorage/test/controllers/direct_uploads_controller_test.rb; activestorage/test/controllers/disk_controller_test.rb; activestorage/test/models/attachment_test.rb; activestorage/test/models/blob_test.rb; activestorage/test/service/azure_storage_public_service_test.rb; activestorage/test/service/azure_storage_service_test.rb; activestorage/test/service/gcs_public_service_test.rb; activestorage/test/service/gcs_service_test.rb; activestorage/test/service/mirror_service_test.rb; activestorage/test/service/s3_public_service_test.rb; activestorage/test/service/s3_service_test.rb; activestorage/test/service/shared_service_tests.rb; activestorage/test/test_helper.rb; guides/source/configuring.md,mrpasquini,2024-12-23T21:55:18Z,2025-01-04T12:09:08Z
33284,46178,Validate options when managing columns and tables in migration,"### Motivation / Background  This Pull Request has been created because invalid options used when managing columns and tables in migrations are silently ignored.   Previous attempt in https://github.com/rails/rails/pull/33347 Resolves https://github.com/rails/rails/issues/33284 Resolves https://github.com/rails/rails/issues/39230  ### Detail  This Pull Request adds a step to validate the options that are used when managing columns and tables in migrations. The intention is to only validate options for new migrations that are added. Invalid options used in old migrations are silently ignored like they always have been.  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] There are no typos in commit messages and comments. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [X] Feature branch is up-to-date with `main` (if not - rebase it). * [x] Pull request only contains one commit for bug fixes and small features. If it's a larger feature  multiple commits are permitted but must be descriptive. * [x] Tests are added if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. * [X] PR is not in a draft state. * [X] CI is passing. ",closed,activerecord/CHANGELOG.md; activerecord/lib/active_record/connection_adapters/abstract/schema_definitions.rb; activerecord/lib/active_record/connection_adapters/abstract/schema_statements.rb; activerecord/lib/active_record/connection_adapters/mysql/schema_definitions.rb; activerecord/lib/active_record/connection_adapters/mysql/schema_statements.rb; activerecord/lib/active_record/connection_adapters/postgresql/schema_definitions.rb; activerecord/lib/active_record/connection_adapters/sqlite3/schema_statements.rb; activerecord/lib/active_record/migration/compatibility.rb; activerecord/test/cases/migration/compatibility_test.rb; activerecord/test/cases/migration/invalid_options_test.rb,tgxworld,2022-10-03T02:12:18Z,2022-10-11T08:02:34Z
33155,51114,[Fix #33155] Set through target for new records,"<!-- Thanks for contributing to Rails!  Please do not make *Draft* pull requests  as they still send notifications to everyone watching the Rails repo.  Create a pull request when it is ready for review and feedback from the Rails team :).  If your pull request affects documentation or any non-code changes  guidelines for those changes are [available here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)  About this template  The following template aims to help contributors write a good description for their pull requests. We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added)  motivation behind the changes  and complete the checklist below before opening a pull request.  Feel free to discard it if you need to (e.g. when you just fix a typo). -->  ### Motivation / Background  <!-- Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important? If you are fixing a specific issue  include ""Fixes #ISSUE"" (replace with the issue number  remove the quotes) and the issue will be linked to this PR. -->  Fixes #33155  ### Detail  Updates `#load_target` in `ActiveRecord::Associations::CollectionAssociation` and `ActiveRecord::Associations::Association` (which is inherited by `ActiveRecord::Associations::SingularAssociation`) to set the through association target using the middle record when the current record has not yet been persisted.  ### Additional information  <!-- Provide additional information such as benchmarks  reference to other repositories or alternative solutions. -->  There also seems to have been [another attempted patch](https://github.com/rails/rails/pull/38562) which didn't end up getting merged.  ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,activerecord/lib/active_record/associations/association.rb; activerecord/lib/active_record/associations/collection_association.rb; activerecord/test/cases/associations/has_many_through_associations_test.rb; activerecord/test/cases/associations/has_one_through_associations_test.rb,joshuay03,2024-02-17T09:15:40Z,2024-12-02T19:58:28Z
33155,54280,Revert has-many-through association changes + add regression test,"### Motivation / Background  This PR reverts commits related to has-many-through association behaviour changing. These changes are still causing issues with Shopify's Rails monolith 😞 (I've added a regression test to demonstrate the issue we're seeing).  We've decided it's simplest to roll the changes back for now  since it seems like there are still uncaught corner cases / other potential regressions to these changes. If we attempt these changes again  Shopify can probably help test this a bit more thoroughly on our CI.  More context around some of the original issues: https://github.com/rails/rails/issues/54176  This was addressed by https://github.com/rails/rails/pull/54238  but that is leading to other failures on our end.  ### Detail  Reverts the following PRs:  - https://github.com/rails/rails/pull/54238 - https://github.com/rails/rails/pull/54046 - https://github.com/rails/rails/pull/53957 - https://github.com/rails/rails/pull/53869 - https://github.com/rails/rails/pull/51114  Adds a regression test that fails without the changes above reverted.   ### Additional information  <!-- Provide additional information such as benchmarks  references to other repositories  or alternative solutions. -->  ### Checklist  Before submitting the PR make sure the following are checked:  * [X] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [X] Tests are added or updated if you fix a bug or add a feature. * [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.  cc @eileencodes @joshuay03  ",closed,activerecord/lib/active_record/associations/association.rb; activerecord/lib/active_record/associations/collection_association.rb; activerecord/lib/active_record/autosave_association.rb; activerecord/lib/active_record/reflection.rb; activerecord/test/cases/associations/has_many_through_associations_test.rb; activerecord/test/cases/associations/has_one_through_associations_test.rb; activerecord/test/cases/autosave_association_test.rb; activerecord/test/models/book.rb; activerecord/test/models/club.rb; activerecord/test/models/enrollment.rb; activerecord/test/models/family_tree.rb; activerecord/test/models/member.rb; activerecord/test/models/member_detail.rb; activerecord/test/models/membership.rb; activerecord/test/models/post.rb; activerecord/test/models/program.rb; activerecord/test/models/program_offering.rb; activerecord/test/models/rating.rb; activerecord/test/models/subscriber.rb; activerecord/test/schema/schema.rb,adrianna-chang-shopify,2025-01-17T13:49:31Z,2025-01-17T15:20:23Z
31680,54020,Action View: fix local variable access in layouts,"### Motivation / Background  Since circa Rails 5.1  layouts have not been able to access local variables. Now they can.  Fixes #31680   ### Detail  This was originally broken  reportedly  in Rails 5.1 in d6bac046 which dropped the `locals` keys from some of the layout lookup methods to optimize the template resolver cache.  In the meantime  the template resolver cache was discarded in Rails 7.0 in 4db7ae52  and was replaced by a FileSystemResolver cache that does not use the locals in the lookup key (because it's storing unbound templates).  So this fix is  essentially  to pass keys through the many layers of the layout resolver/renderer stack to make sure that when the unbound template is found and `#bind_locals` is called on it  it's bound with the proper set of local variable names.   ### Additional information  This is my first pull request related to Action View rendering. I'm not sure this is the best fix  so I'd appreciate any feedback and would be happy to try alternative approaches.   ### Checklist  Before submitting the PR make sure the following are checked:  * [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs. * [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` * [x] Tests are added or updated if you fix a bug or add a feature. * [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. ",closed,actionview/CHANGELOG.md; actionview/lib/action_view/layouts.rb; actionview/lib/action_view/renderer/template_renderer.rb; actionview/test/actionpack/abstract/layouts_test.rb,flavorjones,2024-12-21T19:00:04Z,2025-01-06T21:07:51Z
28322,53962,Fix `#to_query` to not include `=` for nil values,"Fix: https://github.com/rails/rails/issues/28322  This is more consistent with the behavior of `Rack::Utils.parse_nested_query`. ",closed,activesupport/CHANGELOG.md; activesupport/lib/active_support/core_ext/object/to_query.rb; activesupport/test/core_ext/object/to_query_test.rb,byroot,2024-12-15T15:13:47Z,2024-12-15T15:40:58Z
26420,53961,Handle new records in `#increment!`,"Fix: https://github.com/rails/rails/issues/26420  Back in Rails 4  calling `#increment!` on a new record would save it  but I don't think it's a good behavior  and it no longer has done so for many years now.  It's better to raise like `#update_columns`. ",closed,activerecord/lib/active_record/persistence.rb; activerecord/test/cases/persistence_test.rb,byroot,2024-12-15T14:47:15Z,2024-12-15T14:57:38Z
26045,41093,Make destroy async transactional,"Motivation:   - A active record rollback could occur while enqueuing a job in this     case the job would enqueue even though the database deletion     rolledback putting things in a funky state. So this adds some     functionality to ensure that deletions are not queued until after     the db transaction has been commited. Ideally a      `has_many destroy: :async` should handle this for the user.  Related Issues:   - Sort of related to https://github.com/rails/rails/issues/26045  Changes:   - add some syntatic sugar to transactions to make enqueueing a job a     little better experience  this really hooks into the after destroy     hook on the transaction.   - Setup async destroy on associations to not enqueue until after a     transaction has been committed.  ",closed,activerecord/lib/active_record/associations/association.rb; activerecord/lib/active_record/associations/builder/association.rb; activerecord/test/activejob/destroy_association_async_test.rb,gwincr11,2021-01-12T14:48:43Z,2021-02-02T00:11:26Z
18667,53959,Handle cyclic template dependencies,"Fix: https://github.com/rails/rails/issues/18667  Pretty straightforward  we keep track of nodes when walking the tree and stop the cycle there.",closed,actionview/lib/action_view/digestor.rb; actionview/test/fixtures/digestor/comments/_cycle_a.html.erb; actionview/test/fixtures/digestor/comments/_cycle_b.html.erb; actionview/test/fixtures/digestor/comments/cycle.html.erb; actionview/test/template/digestor_test.rb,byroot,2024-12-15T14:17:34Z,2024-12-15T14:29:00Z
17621,18612,Fix validations on child record when record parent has validate: false,"Fixes #17621. This 5 year old (or older) issue causes validations to fire when a parent record has `validate: false` option and a child record is saved. It's not the responsibility of the model to validate an associated object unless the object was created or modified by the parent.  Also cleaned up tests related to validations `assert_nothing_raised` is not benefiting us in these tests Corrected spelling of ""respects"" It's better to use `assert_not_operator` over `assert !r.valid`  Originally @tenderlove and I had put the definition of `should_validate?` in ActiveModel but I found later that `persisted?`  `changed?` and `marked_for_destruction?` are not defined in ActiveModel so those tests were failing. I moved that code completely into AR. If there is another suggestion to a better place for this method I'm open to suggestions.   P.S. I'm on vacation this week so I might be slow to respond if you have questions :sunny: :smile: ",closed,activemodel/lib/active_model/validator.rb; activerecord/CHANGELOG.md; activerecord/lib/active_record/validations/length.rb; activerecord/lib/active_record/validations/presence.rb; activerecord/lib/active_record/validations/uniqueness.rb; activerecord/test/cases/validations/association_validation_test.rb; activerecord/test/cases/validations/length_validation_test.rb; activerecord/test/cases/validations/presence_validation_test.rb; activerecord/test/cases/validations/uniqueness_validation_test.rb,eileencodes,2015-01-20T15:59:53Z,2015-02-02T00:58:29Z
17621,53951,Do not validate associated records that haven't changed,"Fix: https://github.com/rails/rails/issues/17621 Redo of: https://github.com/rails/rails/pull/18612  You should be able to create a reference to an invalid record as long as you don't modify it.  This was initially fixed in https://github.com/rails/rails/pull/18612 but was reverted in https://github.com/rails/rails/commit/2c02bc0a47777ad8cf98e1465c08b1a68151803e because it was causing other bugs.  Some tests were added as part of the revert to avoid future regressions. ",closed,activerecord/lib/active_record/autosave_association.rb; activerecord/test/cases/autosave_association_test.rb,byroot,2024-12-14T14:02:45Z,2024-12-14T15:13:57Z
13496,53950,Support joins in `update_all` for Postgresql and SQlite,"Fix: https://github.com/rails/rails/issues/13496  Both support UPDATE with JOIN but in a weird way. The first join has to be turned into a `FROM + WHERE`.  Also they doesn't support UPDATE with LIMIT/OFFSET nor with GROUP BY  so in such case there's really nothing we can do. ",closed,activerecord/CHANGELOG.md; activerecord/lib/active_record/relation.rb; activerecord/lib/arel/visitors/postgresql.rb; activerecord/lib/arel/visitors/sqlite.rb; activerecord/test/cases/relation/update_all_test.rb,byroot,2024-12-14T12:41:16Z,2025-02-06T10:54:17Z
