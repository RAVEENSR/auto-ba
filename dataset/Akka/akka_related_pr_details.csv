issueId,prId,prTitle,prDescription,prStatus,prFilePaths,prCreatorLoginId,prCreatedDate,prMergedDate
32667,32668,docs: Fix broken samples #32667,"<!--   Are there any relevant issues / PRs / mailing lists discussions?   Please reference them here - but don't use `fixes` notation. --> References #32667 ",closed,samples/akka-sample-cluster-scala/build.sbt; samples/akka-sample-distributed-data-scala/build.sbt; samples/akka-sample-fsm-scala/build.sbt; samples/akka-sample-kafka-to-sharding-scala/build.sbt; samples/akka-sample-kafka-to-sharding-scala/client/src/main/resources/application.conf; samples/akka-sample-kafka-to-sharding-scala/client/src/main/scala/client/ClientApp.scala; samples/akka-sample-kafka-to-sharding-scala/processor/src/main/scala/sample/sharding/kafka/Main.scala; samples/akka-sample-kafka-to-sharding-scala/project/plugins.sbt; samples/akka-sample-sharding-java/build.sbt; samples/akka-sample-sharding-java/killrweather-fog/pom.xml; samples/akka-sample-sharding-java/killrweather/pom.xml; samples/akka-sample-sharding-scala/build.sbt,johanandren,2025-02-24T08:24:43Z,2025-02-24T11:09:20Z
32475,32476,Split eventsourced remember entity updates into batched StateChange events based on `max-updates-per-write` config,Resolves #32475 ,closed,akka-cluster-sharding/src/main/scala/akka/cluster/sharding/internal/EventSourcedRememberEntitiesShardStore.scala; akka-cluster-sharding/src/test/scala/akka/cluster/sharding/internal/RememberEntitiesShardStoreSpec.scala,nathanmbrown,2024-08-10T17:06:49Z,2024-08-13T08:12:33Z
32380,32382,perf: Use spliterator directly in Source.fromJavaStream #32380,"Refs #32380  Very slight optimization with one less iterator wrapper per stream. Stronger motivation is perhaps that it interacts more directly with the given BaseStream ",closed,akka-stream-tests/src/test/scala/akka/stream/scaladsl/StreamConvertersSpec.scala; akka-stream/src/main/scala/akka/stream/impl/JavaStreamSource.scala,johanandren,2024-04-16T11:24:19Z,2024-04-17T09:32:28Z
32372,32402,fix: NotInfluenceReceiveTimeout does not apply to adapte typed responses,Refs #32372,closed,akka-actor-typed-tests/src/test/scala/akka/actor/typed/ReceiveTimeoutSpec.scala; akka-actor/src/main/scala/akka/actor/ActorRef.scala; akka-actor/src/main/scala/akka/actor/dungeon/ReceiveTimeout.scala,johanandren,2024-04-22T12:32:20Z,2024-04-24T15:49:49Z
32272,32274,fix: Overload issue in ByteStringBuilder ,References #32272,closed,akka-actor-tests/src/test/scala/akka/util/ByteStringSpec.scala; akka-actor/src/main/scala-2.13/akka/util/ByteString.scala; akka-actor/src/main/scala-3/akka/util/ByteString.scala,johanandren,2024-01-02T10:11:09Z,2024-01-02T10:57:54Z
32271,32275,chore: Require positive delay #32271,"0 delay kicks of a spin loop that may even block actor system termination  References #32271 ",closed,akka-actor/src/main/scala/akka/actor/LightArrayRevolverScheduler.scala; akka-actor/src/main/scala/akka/actor/Scheduler.scala,johanandren,2024-01-02T10:43:16Z,2024-01-22T12:01:54Z
32182,32190,chore: Temporary disable RemoteConnectionSpec for Aeron  #32182,It's on my todo list to look closer at the test failure in #32182 but more important things pop up all the time. Disable for now so that not nightlies are failing all the time.,closed,akka-remote/src/test/scala/akka/remote/artery/RemoteConnectionSpec.scala,patriknw,2023-10-19T12:55:01Z,2023-10-19T13:38:55Z
32182,32196,chore: Really disable RemoteConnectionSpec for Aeron  #32182,,closed,akka-remote/src/test/scala/akka/remote/artery/RemoteConnectionSpec.scala,patriknw,2023-10-20T13:13:16Z,2023-10-20T13:49:37Z
32182,32206,test: Harden RemoteConnectionSpec  #32182,"* failed with Aeron transport (also locally)  References #32182 ",closed,akka-remote/src/test/scala/akka/remote/artery/RemoteConnectionSpec.scala,patriknw,2023-10-23T14:12:45Z,2023-10-23T15:58:04Z
32172,32173,fix: misleading shard handoff timeout message (#32172),"Refs #32172  changed misleading message and moved all the logic for calculating timeouts to HandOffStopper.  timers.cancel(StopTimeoutWarning) is there to avoid unnecessary warning  for small timeouts",closed,akka-cluster-sharding/src/main/scala/akka/cluster/sharding/Shard.scala; akka-cluster-sharding/src/main/scala/akka/cluster/sharding/ShardRegion.scala,lychko,2023-10-12T20:11:59Z,2023-10-18T08:49:09Z
32172,32181,chore: better shard handoff timeout message (#32172) (#32173),"References #32172 ",closed,akka-cluster-sharding/src/main/scala/akka/cluster/sharding/Shard.scala; akka-cluster-sharding/src/main/scala/akka/cluster/sharding/ShardRegion.scala,johanandren,2023-10-18T09:29:10Z,2023-10-18T11:22:05Z
32169,32177,test: Timeouts in RemoteConnectionSpec  #32169," References #32169 ",closed,akka-remote/src/test/scala/akka/remote/artery/RemoteConnectionSpec.scala,patriknw,2023-10-16T09:26:18Z,2023-10-16T14:42:02Z
32128,32127,chore: Drop JDK 8,Draft because I haven't verified everything yet.,closed,.github/workflows/nightly-builds.yml; akka-actor-tests/src/test/scala/akka/actor/FSMActorSpec.scala; akka-actor-tests/src/test/scala/akka/actor/SupervisorSpec.scala; akka-actor-typed/src/main/scala/akka/actor/typed/internal/jfr/Events.scala; akka-actor-typed/src/main/scala/akka/actor/typed/internal/jfr/JFRActorFlightRecorder.scala; akka-cluster-sharding/src/main/scala/akka/cluster/sharding/internal/jfr/Events.scala; akka-cluster-sharding/src/main/scala/akka/cluster/sharding/internal/jfr/JFRShardingFlightRecorder.scala; akka-docs/src/main/paradox/project/migration-guide-2.8.x-2.9.x.md; akka-docs/src/main/paradox/stream/operators/Source/asSubscriber.md; akka-docs/src/main/paradox/stream/operators/Source/fromPublisher.md; akka-remote/src/main/scala/akka/remote/artery/jfr/Events.scala; akka-remote/src/main/scala/akka/remote/artery/jfr/JFRRemotingFlightRecorder.scala; akka-stream-tests/src/test/java-jdk9-only/akka/stream/javadsl/JavaFlowSupportCompileTest.java; akka-stream-tests/src/test/java/akka/stream/javadsl/JavaFlowSupportCompileTest.java; akka-stream-tests/src/test/scala/akka/stream/scaladsl/FlowPublisherSinkSpec.scala; akka-stream/src/main/java-jdk-9/akka/stream/javadsl/JavaFlowSupport.java; akka-stream/src/main/java/akka/stream/javadsl/JavaFlowSupport.java; akka-stream/src/main/scala/akka/stream/impl/JavaFlowAndRsConverters.scala; akka-stream/src/main/scala/akka/stream/scaladsl/JavaFlowSupport.scala; build.sbt; project/AkkaBuild.scala; project/CopyrightHeaderForJdk9.scala; project/Doc.scala; project/Jdk9.scala; project/Jdk9MiMa.scala; project/JdkOptions.scala; project/ProjectFileIgnoreSupport.scala; project/TestExtras.scala; project/project-info.conf,patriknw,2023-09-21T15:03:28Z,2023-09-27T10:22:12Z
32105,32123,test: Line numbers changed with Scala 3.3  #32105,,closed,akka-actor-tests/src/test/scala-3/akka/util/LineNumberSpec.scala; akka-actor/src/main/scala/akka/util/LineNumbers.scala,patriknw,2023-09-21T09:15:07Z,2023-09-21T10:34:58Z
32088,32091,[feat] str: Support for setting defaultAttributes on materializers,"References #32088  ",closed,akka-docs/src/main/paradox/stream/stream-flows-and-basics.md; akka-stream-tests/src/test/scala/akka/stream/MaterializerWithAttributesSpec.scala; akka-stream/src/main/mima-filters/2.9.0-M1.backwards.excludes/impl-start-materializer.excludes; akka-stream/src/main/scala/akka/stream/ActorMaterializer.scala; akka-stream/src/main/scala/akka/stream/Materializer.scala; akka-stream/src/main/scala/akka/stream/SystemMaterializer.scala; akka-stream/src/main/scala/akka/stream/impl/MaterializerGuardian.scala,leviramsey,2023-09-06T19:21:20Z,2023-09-11T16:07:30Z
32080,32245,doc: Rewrite RES tagging  #32080,Refs #32080,closed,akka-docs/src/main/paradox/typed/replicated-eventsourcing-db-transport.md; akka-docs/src/main/paradox/typed/replicated-eventsourcing.md,patriknw,2023-12-05T10:54:20Z,2023-12-05T13:28:29Z
32015,32016,fix: discard ReceiveTimeout when timeout message is null #32015,"References https://github.com/akka/akka/issues/32015  Approach here is to check if receive message is null and if so stop processing.  Test case may be brittle as it relies on documented behavior but without more advanced knowledge of the project and attempting to test nondeterminism I do not at this time have a better test solution. I welcome suggestions and criticism to make the test case better.",closed,akka-actor-typed-tests/src/test/scala/akka/actor/typed/internal/adpater/ActorAdapterSpec.scala; akka-actor-typed/src/main/scala/akka/actor/typed/internal/adapter/ActorAdapter.scala,lolboxen,2023-07-20T19:16:57Z,2023-07-26T09:15:14Z
31979,31981,test: harden EventsBySliceFirehoseSpec  #31979,"References https://github.com/akka/akka/issues/31979 ",closed,akka-persistence-query/src/test/scala/akka/persistence/query/typed/internal/EventsBySliceFirehoseSpec.scala,patriknw,2023-06-22T13:32:02Z,2023-06-22T14:07:18Z
31862,32082,fix: additional mailbox selector method on Props,"<!--   Are there any relevant issues / PRs / mailing lists discussions?   Please reference them here - but don't use `fixes` notation. --> References #31862  Returning an empty mailbox is not a problem in PropsAdapter. ",closed,akka-actor-typed-tests/src/test/scala/akka/actor/typed/scaladsl/DispatcherSelectorSpec.scala; akka-actor-typed/src/main/resources/reference.conf; akka-actor-typed/src/main/scala/akka/actor/typed/Props.scala; akka-actor/src/main/resources/reference.conf; akka-cluster-sharding-typed/src/main/resources/reference.conf; akka-cluster-sharding/src/main/resources/reference.conf,Roiocam,2023-09-01T10:37:46Z,2023-09-12T14:01:23Z
31814,32107,fix: keep message while backoff stash buffer unstash exception (#31814),"<!--   Are there any relevant issues / PRs / mailing lists discussions?   Please reference them here - but don't use `fixes` notation. --> References #31814  Keep message while unStash exception on backoff SupervisorStrategy.   ",closed,akka-actor-typed-tests/src/test/scala/akka/actor/typed/SupervisionSpec.scala; akka-actor-typed/src/main/scala/akka/actor/typed/internal/Supervision.scala,Roiocam,2023-09-19T07:31:11Z,2023-10-06T15:05:50Z
31801,31802,fix: Less error logging  more retrying in ddata rememer entities,"References #31801   * DDataRememberEntitiesShardStore: Retry a couple of times if reading the shards times out/fails and only log at warning until finally giving up  * DDataRememberEntitiesCoordinatorStore: Already was retrying indefinitely  so only log at warning  ",closed,akka-cluster-sharding/src/main/scala/akka/cluster/sharding/internal/DDataRememberEntitiesCoordinatorStore.scala; akka-cluster-sharding/src/main/scala/akka/cluster/sharding/internal/DDataRememberEntitiesShardStore.scala,johanandren,2022-12-20T20:13:57Z,2022-12-22T09:38:52Z
31796,31809,fix: EventSourcedBehaviorRetentionSpec fail,"References #31796  The changes in #31785 means that retention deletes can be skipped if one is already in progress. The test expected that the retention/deletes they are always run and fired off events that should trigger 3 deletes at once  if the deletes complete or not before the next retention is triggered depends on how fast the machine is (hint ci is slow)  This fix runs the events in batches verifying each delete before triggering the next making it deterministic again.  Verified by sneaking strategic Thread.sleeps into the testkit snapshot store operations.",closed,akka-persistence-typed-tests/src/test/scala/akka/persistence/typed/scaladsl/EventSourcedBehaviorRetentionSpec.scala,johanandren,2023-01-05T15:03:03Z,2023-01-06T14:31:25Z
31785,31786,fix: Only one retention cycle in progress at a time  #31785,"On top of https://github.com/akka/akka/pull/31784 but otherwise ready for review.  * Keep track of retention steps  including detailed debug logging. * If retention is in progress when a new retention is triggered it will skip that retention cycle. * Had to include that as mutable state in BehaviorSetup rather than in the RunningState because the background tasks of deleting events and snapshots can't easily update the RunningState. * Also changed so that snapshot deletion always use 0 as lower sequence number.   * This is important because otherwise some snapshots may be left behind when retention is skipped. That could probably already happen in failure scenarios previously.  The retention process for SnapshotCountRetentionCriteria looks like this: 1. Save snapshot after persisting events when shouldSnapshotAfterPersist returned SnapshotWithRetention. 2. Delete events (when deleteEventsOnSnapshot=true)  runs in background. 3. Delete snapshots (when isOnlyOneSnapshot=false)  runs in background.  <!--   Are there any relevant issues / PRs / mailing lists discussions?   Please reference them here - but don't use `fixes` notation. --> References #31785 ",closed,akka-persistence-typed-tests/src/test/scala/akka/persistence/typed/scaladsl/EventSourcedBehaviorRetentionSpec.scala; akka-persistence-typed-tests/src/test/scala/akka/persistence/typed/scaladsl/EventSourcedBehaviorWatchSpec.scala; akka-persistence-typed/src/main/scala/akka/persistence/typed/internal/BehaviorSetup.scala; akka-persistence-typed/src/main/scala/akka/persistence/typed/internal/EventSourcedBehaviorImpl.scala; akka-persistence-typed/src/main/scala/akka/persistence/typed/internal/ExternalInteractions.scala; akka-persistence-typed/src/main/scala/akka/persistence/typed/internal/RetentionCriteriaImpl.scala; akka-persistence-typed/src/main/scala/akka/persistence/typed/internal/Running.scala; akka-persistence-typed/src/test/scala/akka/persistence/typed/internal/RetentionCriteriaSpec.scala,patriknw,2022-12-09T07:48:02Z,2022-12-14T11:19:55Z
31778,31787,chore: port conflict in AeronStream tests  #31778,"<!--   Are there any relevant issues / PRs / mailing lists discussions?   Please reference them here - but don't use `fixes` notation. --> References https://github.com/akka/akka/issues/31778 ",closed,akka-remote-tests/src/multi-jvm/scala/akka/remote/artery/aeron/AeronStreamConcistencySpec.scala; akka-remote-tests/src/multi-jvm/scala/akka/remote/artery/aeron/AeronStreamLatencySpec.scala; akka-remote-tests/src/multi-jvm/scala/akka/remote/artery/aeron/AeronStreamMaxThroughputSpec.scala,patriknw,2022-12-09T15:11:40Z,2022-12-09T16:24:36Z
31764,31765,chore: Remove deprecated Classic Remoting  #31764," References #31764 ",closed,.github/workflows/nightly-builds.yml; akka-actor-typed-tests/src/test/scala/akka/actor/typed/internal/ActorRefSerializationSpec.scala; akka-actor/src/main/scala/akka/actor/ActorSystem.scala; akka-bench-jmh/src/main/scala/akka/cluster/ddata/ORSetSerializationBenchmark.scala; akka-bench-jmh/src/main/scala/akka/remote/artery/CodecBenchmark.scala; akka-cluster-metrics/src/multi-jvm/scala/akka/cluster/metrics/sample/StatsSampleSpec.scala; akka-cluster-metrics/src/test/scala/akka/cluster/metrics/TestUtil.scala; akka-cluster-metrics/src/test/scala/akka/cluster/metrics/WeightedRouteesSpec.scala; akka-cluster-metrics/src/test/scala/akka/cluster/metrics/protobuf/MessageSerializerSpec.scala; akka-cluster-sharding-typed/src/multi-jvm/scala/akka/cluster/sharding/typed/ClusterShardingPreparingForShutdownSpec.scala; akka-cluster-sharding-typed/src/test/java/akka/cluster/sharding/typed/ReplicatedShardingTest.java; akka-cluster-sharding-typed/src/test/java/akka/cluster/sharding/typed/javadsl/ClusterShardingPersistenceTest.java; akka-cluster-sharding-typed/src/test/java/jdocs/akka/cluster/sharding/typed/AccountExampleTest.java; akka-cluster-sharding-typed/src/test/java/jdocs/akka/cluster/sharding/typed/HelloWorldEventSourcedEntityExampleTest.java; akka-cluster-sharding-typed/src/test/scala/akka/cluster/sharding/typed/JoinConfigCompatCheckerClusterShardingSpec.scala; akka-cluster-sharding-typed/src/test/scala/akka/cluster/sharding/typed/ReplicatedShardingSpec.scala; akka-cluster-sharding-typed/src/test/scala/akka/cluster/sharding/typed/delivery/DurableShardingSpec.scala; akka-cluster-sharding-typed/src/test/scala/akka/cluster/sharding/typed/delivery/ReliableDeliveryShardingSpec.scala; akka-cluster-sharding-typed/src/test/scala/akka/cluster/sharding/typed/scaladsl/ClusterShardingPersistenceSpec.scala; akka-cluster-sharding-typed/src/test/scala/akka/cluster/sharding/typed/scaladsl/ClusterShardingSpec.scala; akka-cluster-sharding-typed/src/test/scala/akka/cluster/sharding/typed/scaladsl/ShardedDaemonProcessSpec.scala; akka-cluster-sharding-typed/src/test/scala/docs/akka/cluster/sharding/typed/AccountExampleSpec.scala; akka-cluster-sharding-typed/src/test/scala/docs/akka/cluster/sharding/typed/HelloWorldEventSourcedEntityExampleSpec.scala; akka-cluster-sharding/src/multi-jvm/scala/akka/cluster/sbr/GremlinController.scala; akka-cluster-sharding/src/multi-jvm/scala/akka/cluster/sbr/SplitBrainResolverIntegrationSpec.scala; akka-cluster-sharding/src/multi-jvm/scala/akka/cluster/sharding/ClusterShardCoordinatorDowning2Spec.scala; akka-cluster-sharding/src/multi-jvm/scala/akka/cluster/sharding/ClusterShardCoordinatorDowningSpec.scala; akka-cluster-sharding/src/multi-jvm/scala/akka/cluster/sharding/ClusterShardingFailureSpec.scala; akka-cluster-sharding/src/multi-jvm/scala/akka/cluster/sharding/ClusterShardingSingleShardPerEntitySpec.scala; akka-cluster-sharding/src/multi-jvm/scala/akka/cluster/sharding/MultiDcClusterShardingSpec.scala,patriknw,2022-11-25T11:13:54Z,2022-11-29T10:50:01Z
31760,31767,chore: fix jdk8 compilation errors in doc sampes,"* the updated java formatter changed the order of the imports in a way that didn't work with JDK 8  https://github.com/akka/akka/issues/31760",closed,akka-actor-typed-tests/src/test/java/jdocs/akka/typed/AggregatorTest.java; akka-actor-typed-tests/src/test/java/jdocs/akka/typed/InteractionPatternsTest.java; akka-cluster-sharding-typed/src/test/java/akka/cluster/sharding/typed/ReplicatedShardingTest.java; akka-persistence-typed-tests/src/test/java/jdocs/akka/persistence/typed/ReplicatedAuctionExampleTest.java,patriknw,2022-11-28T14:50:20Z,2022-11-29T08:07:39Z
31752,31753,Run DurableStateBehavior delete effect in same way as persist  #31752,"* Should not run as background tasks for Durable State.  References #31752 ",closed,akka-persistence-typed-tests/src/test/scala/akka/persistence/typed/state/scaladsl/DurableStateBehaviorReplySpec.scala; akka-persistence-typed-tests/src/test/scala/akka/persistence/typed/state/scaladsl/DurableStateBehaviorSpec.scala; akka-persistence-typed/src/main/scala/akka/persistence/typed/state/internal/DurableStateStoreInteractions.scala; akka-persistence-typed/src/main/scala/akka/persistence/typed/state/internal/Running.scala,patriknw,2022-11-21T11:36:13Z,2022-11-21T14:14:46Z
31724,31727,Auto-select SRV lookup for the name lookup if entry looks like a srv name,Refs #31724,closed,akka-discovery/src/main/scala/akka/discovery/ServiceDiscovery.scala,johanandren,2022-11-11T16:54:13Z,2022-12-13T09:11:36Z
31715,31716,Release lease on shard stop,"References #31715 ",closed,akka-cluster-sharding/src/main/scala/akka/cluster/sharding/Shard.scala,johanandren,2022-11-02T11:02:09Z,2022-11-16T11:03:05Z
31698,31702,Use cos_containerd image in multi-node tests  #31698,"Error message: Creation of node pools using node images based on Docker container runtimes is not supported in GKE v1.23. This is to prepare for the removal of Dockershim in Kubernetes v1.24. We recommend that you migrate to image types based on Containerd  <!--   Are there any relevant issues / PRs / mailing lists discussions?   Please reference them here - but don't use `fixes` notation. --> References #31698 ",closed,kubernetes/create-cluster-gke.sh,patriknw,2022-10-27T07:21:02Z,2022-10-27T11:26:35Z
31689,31719,Add color to LogCapturing #31689,"References #31689  As this is my first time  I am happy for any feedback.",closed,akka-actor-testkit-typed/src/main/scala/akka/actor/testkit/typed/javadsl/LogCapturing.scala; akka-actor-testkit-typed/src/main/scala/akka/actor/testkit/typed/scaladsl/LogCapturing.scala,jackyscript,2022-11-05T21:47:59Z,2022-11-15T13:10:24Z
31674,31690,Fix RecipeAdhocSource test  #31674,"* started failing because of the new stream timeout classes  References #31674 ",closed,akka-docs/src/test/java/jdocs/stream/javadsl/cookbook/RecipeAdhocSourceTest.java; akka-docs/src/test/scala/docs/stream/cookbook/RecipeAdhocSource.scala,patriknw,2022-10-19T06:47:17Z,2022-10-19T07:36:03Z
31670,31857,Remove the deprecation of Flow#recoverWith,Removes @deprecated annotations from Flow#recoverWith at javadsl and scaladsl as required by the issue #31670,closed,akka-stream/src/main/scala/akka/stream/javadsl/Flow.scala; akka-stream/src/main/scala/akka/stream/javadsl/Source.scala; akka-stream/src/main/scala/akka/stream/javadsl/SubFlow.scala; akka-stream/src/main/scala/akka/stream/javadsl/SubSource.scala; akka-stream/src/main/scala/akka/stream/scaladsl/Flow.scala,RichardMarto,2023-02-28T23:41:17Z,2023-03-02T16:18:21Z
31641,31687,docs: Fix some api doc links #31641,"References #31641  Fixes all but the AbstractOnMessageBehavior which I think was because it wasn't in a published set of API docs when the checker ran.",closed,akka-docs/src/main/paradox/typed/actors.md; akka-docs/src/main/paradox/typed/cluster-sharding.md,johanandren,2022-10-18T12:58:33Z,2022-10-18T14:11:34Z
31637,31889,fix: starting Sharding with separate Coordinator role  #31637,"* this feature was completely broken * note that the ddata replicator is used for both   DDataShardCoordinator and DDataRememberEntities   - the DDataShardCoordinator replicator can be on the same role as the coordinator   - for remmeber entities it's both the CoordinatorStore and the ShardStore  to not complicate     that too much I used a replicator without role for remember entities when those two roles     are different  Original contribution in https://github.com/akka/akka/pull/31487  References #31637 ",closed,akka-cluster-sharding/src/main/resources/reference.conf; akka-cluster-sharding/src/main/scala/akka/cluster/sharding/ClusterSharding.scala; akka-cluster-sharding/src/main/scala/akka/cluster/sharding/ClusterShardingSettings.scala; akka-cluster-sharding/src/main/scala/akka/cluster/sharding/ShardCoordinator.scala; akka-cluster-sharding/src/main/scala/akka/cluster/sharding/ShardRegion.scala; akka-cluster-sharding/src/main/scala/akka/cluster/sharding/internal/DDataRememberEntitiesShardStore.scala; akka-cluster-sharding/src/multi-jvm/scala/akka/cluster/sharding/ClusterShardingCoordinatorRoleSpec.scala; akka-distributed-data/src/main/scala/akka/cluster/ddata/Replicator.scala,patriknw,2023-03-16T16:43:40Z,2023-03-22T09:19:31Z
31623,31703,Fix flaky EventSourcedBehaviorRetentionSpec  #31623,"* deletes are performed in the background and next event triggering next snapshot may complete before the snapshot delete was completed  References #31623 ",closed,akka-persistence-testkit/src/main/scala/akka/persistence/testkit/PersistenceTestKitPlugin.scala; akka-persistence-typed-tests/src/test/scala/akka/persistence/typed/scaladsl/EventSourcedBehaviorRetentionSpec.scala,patriknw,2022-10-27T09:16:53Z,2022-10-27T10:50:07Z
31623,31758,chore: Harden EventSourcedBehaviorRetentionSpec  #31623,"* the order of the signals are not guaranteed because snapshots and deletes are background tasks * there are several future composition steps along the way that may reorder those signals * the logs show that the operations were executed in the right order  <!--   Are there any relevant issues / PRs / mailing lists discussions?   Please reference them here - but don't use `fixes` notation. --> References #31623 ",closed,akka-persistence-typed-tests/src/test/scala/akka/persistence/typed/scaladsl/EventSourcedBehaviorRetentionSpec.scala,patriknw,2022-11-23T16:00:29Z,2022-11-28T11:42:47Z
31593,31825,fix: Support slf4j 2.0.6 and logback 1.4.5  #31593,"* slf4j 2.0 changed the API of getMarker (they say it was internal) * we don't want to enforce an update to later slf4j and break downstream projects that still are on slf4j 1.7 * solution here is to support both by using reflection of the getMarker/getMarkers methods * only usage is in StubbedActorContext  i.e. BehaviorTestKit  I have run tests with both versions.  <!--   Are there any relevant issues / PRs / mailing lists discussions?   Please reference them here - but don't use `fixes` notation. --> References #31593 ",closed,akka-actor-testkit-typed/src/main/scala/akka/actor/testkit/typed/internal/StubbedActorContext.scala; akka-actor-testkit-typed/src/test/scala/akka/actor/testkit/typed/scaladsl/BehaviorTestKitSpec.scala,patriknw,2023-01-26T15:06:39Z,2023-01-26T15:30:22Z
31589,31633,Slight optimization of SupervisedGraphStage ,"Potentially avoids one option alloc per element.  References #31589  ",closed,akka-stream/src/main/mima-filters/2.7.0.backwards.excludes/31589-supervised-grapshtagelogic.backwards.excludes; akka-stream/src/main/scala/akka/stream/impl/fusing/Ops.scala,johanandren,2022-09-28T15:04:56Z,2022-10-07T09:47:31Z
31586,31588,Fix broken link in stream customize ,"References #31586 ",closed,akka-docs/src/main/paradox/stream/stream-customize.md,johanandren,2022-09-14T09:58:41Z,2022-09-16T06:19:25Z
31585,31591,=str Update MapWithResourceSpec to request 1 to fix #31585.,"fix https://github.com/akka/akka/issues/31585 as @johanandren suggested.",closed,akka-stream-tests/src/test/scala/akka/stream/scaladsl/MapWithResourceSpec.scala,He-Pin,2022-09-14T18:36:38Z,2022-09-15T10:12:20Z
31569,31600,Fix maximumObjectLength check in JsonFraming  #31569,"References #31569 ",closed,akka-stream-tests/src/test/scala/akka/stream/scaladsl/JsonFramingSpec.scala; akka-stream/src/main/scala/akka/stream/impl/JsonObjectParser.scala,patriknw,2022-09-16T12:50:54Z,2022-09-23T08:34:22Z
31530,31883,fix: reduce UnRegister loop  #31530,"I'm not sure (yet) if this is fixing the reported issue or if it's fixing the symptom of it. Anyway  this can't hurt.  <!--   Are there any relevant issues / PRs / mailing lists discussions?   Please reference them here - but don't use `fixes` notation. --> References #31530 ",closed,akka-stream/src/main/scala/akka/stream/scaladsl/Hub.scala,patriknw,2023-03-15T15:39:54Z,2023-03-16T09:33:54Z
31505,31507,Re-use command and event handler instances in Java EventSourcedBehavior,"Refs #31505  Has a slight risk that someone based their command handling on some transient state in the behavior class  but all our examples are written as if the command and event handler factory methods are called only once.",closed,akka-persistence-typed/src/main/scala/akka/persistence/typed/javadsl/EventSourcedBehavior.scala,johanandren,2022-08-26T06:49:36Z,2022-08-29T12:22:38Z
31493,31808,fix: EventSourcedBehaviorStashSpec failure fixes ,"References #31493  Could repeat the two different failures (and one more) by delaying completion of the in-mem journal writes some 20ms",closed,akka-persistence-typed-tests/src/test/scala/akka/persistence/typed/scaladsl/EventSourcedBehaviorStashSpec.scala,johanandren,2023-01-05T14:37:17Z,2023-01-09T08:20:26Z
31463,31620,=str Make SingleConsumerMultiProducer the default mailbox for stream.,"<!--   Are there any relevant issues / PRs / mailing lists discussions?   Please reference them here - but don't use `fixes` notation. --> References https://github.com/akka/akka/issues/31463 Test it locally  just a little faster ``` [info] Benchmark                                                                (mailbox)  (parallelism)   Mode  Cnt       Score       Error  Units [info] StreamMailboxBenchmark.mapAsyncUnordered                akka.actor.default-mailbox             12  thrpt    5  667962.091 锟斤拷 17476.736  ops/s [info] StreamMailboxBenchmark.mapAsyncUnordered  akka.stream.materializer.default-mailbox             12  thrpt    5  683336.943 锟斤拷 23024.154  ops/s ```  and  ```scala [info] StreamMailboxBenchmark.mapAsyncUnordered                akka.actor.default-mailbox              4  thrpt   20  646113.594 锟斤拷 4001.453  ops/s [info] StreamMailboxBenchmark.mapAsyncUnordered  akka.stream.materializer.default-mailbox              4  thrpt   20  692772.475 锟斤拷 2404.489  ops/s ```",closed,akka-stream/src/main/resources/reference.conf; akka-stream/src/main/scala/akka/stream/impl/ActorMaterializerImpl.scala; akka-stream/src/main/scala/akka/stream/impl/PhasedFusingActorMaterializer.scala,He-Pin,2022-09-25T07:24:58Z,2022-10-11T14:16:22Z
31461,31462,Avoid ClassCastException for nested restartWithBackoff  #31461,"* When nesting two (or more) restartWithBackoff there can be a   ClassCastException when the internal ResetRestartCount is passed   in to the user Behavior. * Reason is that a new instance of RestartSupervisor is created from a first exception via the interceptor.   The ResetRestartCount is still scheduled and will not have a matching owner. * Changed ResetRestartCount and ScheduledRestart to signals instead. Signal types are open so   it should be fine to add a new signal (that can't be handled). * It's probably not often this will happen  but we have seen it.  References #31461 ",closed,akka-actor-typed-tests/src/test/scala/akka/actor/typed/SupervisionSpec.scala; akka-actor-typed/src/main/scala/akka/actor/typed/internal/Supervision.scala,patriknw,2022-07-07T12:51:06Z,2022-07-08T08:58:44Z
31438,31524,Change exception handling in SourceRefImpl,References #31438 ,closed,akka-stream/src/main/scala/akka/stream/impl/streamref/SourceRefImpl.scala,Captain1653,2022-08-31T08:24:22Z,2022-09-01T10:36:29Z
31431,31436,re-introduce removed parameter,To avoid breaking internal binary compatibility between 2.6.19 and 2.6.20  fixes #31431,closed,akka-stream/src/main/scala/akka/stream/impl/PhasedFusingActorMaterializer.scala,raboof,2022-06-13T15:16:43Z,2022-06-14T07:22:50Z
31422,31425,chore: Unsafe.java source in scala source tree ,"References #31422 ",closed,akka-actor/src/main/java/akka/util/Unsafe.java; akka-actor/src/main/scala/akka/util/Unsafe.java,johanandren,2022-05-31T11:51:09Z,2022-06-05T16:24:22Z
31419,31433,fix(stream): in TlsActor flush data to user only after handshake has finished,"Refs #31419   Tentative fix. I haven't been able to reproduce it in the tests yet...",closed,akka-stream/src/main/scala/akka/stream/impl/io/TLSActor.scala,jrudolph,2022-06-09T13:03:19Z,2023-02-06T15:11:32Z
31368,31369,Unstash commands after handling GetState in EventSourcedBehavior,Refs #31368,closed,akka-persistence-typed-tests/src/test/scala/akka/persistence/typed/scaladsl/EventSourcedBehaviorStashSpec.scala; akka-persistence-typed/src/main/scala/akka/persistence/typed/internal/Running.scala,jrudolph,2022-04-26T10:41:10Z,2022-04-27T07:20:48Z
31366,31812,fix: Failures in tests verifying stream io dispatcher use #31366,"References #31366  Avoid creating a materializer in tests that wants to check dispatcher as a custom materializer is not covered by the stream stopping between test cases in StreamSpec  Also cleans up some code in StreamSpec that wasn't working since a while back.  (This still doesn't explain #31584 which already was on the system materializer)  ",closed,akka-stream-testkit/src/test/scala/akka/stream/testkit/StreamSpec.scala; akka-stream-tests/src/test/scala/akka/stream/io/FileSinkSpec.scala; akka-stream-tests/src/test/scala/akka/stream/io/FileSourceSpec.scala; akka-stream-tests/src/test/scala/akka/stream/scaladsl/UnfoldResourceAsyncSourceSpec.scala,johanandren,2023-01-09T11:11:01Z,2023-01-10T07:55:46Z
31308,31314,Added support for context propagation to ActorFlow #31308,"This merge request adds support for context propagation in `ActorFlow` by expanding the API with: - `askWithContext` - `askWithStatusAndContext`  References #31308   ",closed,akka-docs/src/main/paradox/stream/operators/ActorFlow/askWithContext.md; akka-docs/src/main/paradox/stream/operators/ActorFlow/askWithStatusAndContext.md; akka-docs/src/main/paradox/stream/operators/index.md; akka-stream-typed/src/main/scala/akka/stream/typed/javadsl/ActorFlow.scala; akka-stream-typed/src/main/scala/akka/stream/typed/scaladsl/ActorFlow.scala; akka-stream-typed/src/test/java/docs/javadsl/ActorFlowCompileTest.java; akka-stream-typed/src/test/scala/docs/scaladsl/ActorFlowSpec.scala,nivox,2022-04-04T14:55:25Z,2022-05-04T14:50:56Z
31271,31864,fix: ClusterShardingHealthCheck should not stall Kubernetes rolling update  #31271,"* The health check is disabled (always returns success true) after a duration of failing checks after the Cluster member is up. Otherwise  it would stall a Kubernetes rolling update when adding a new entity type in the new version.  References #31271 ",closed,akka-cluster-sharding/src/main/resources/reference.conf; akka-cluster-sharding/src/main/scala/akka/cluster/sharding/ClusterShardingHealthCheck.scala; akka-cluster-sharding/src/test/scala/akka/cluster/sharding/ClusterShardingHealthCheckSpec.scala; akka-docs/src/main/paradox/typed/cluster-sharding.md,patriknw,2023-03-07T14:41:36Z,2023-03-08T07:22:28Z
31266,31384,=str fix Scala 3 signature for Tcp() / AkkaSSLConfig(),"This was broken for some reason in #30324 / 3a3e643e074d2e57e320b8efb38bb7fba440e4b3 and not covered by tests.  Fixes #31266  Can later be fixed in https://github.com/akka/akka-http/pull/4079",closed,akka-stream-tests/src/test/scala/akka/stream/io/TcpSpec.scala; akka-stream/src/main/mima-filters/2.6.19.backwards.excludes/31266-simplify-tcp-apply.excludes; akka-stream/src/main/scala-2.12/akka/stream/impl/ImplicitExtensionIdApply.scala; akka-stream/src/main/scala-2.13/akka/stream/impl/ImplicitExtensionIdApply.scala; akka-stream/src/main/scala-3/akka/stream/impl/ImplicitExtensionIdApply.scala; akka-stream/src/main/scala/akka/stream/scaladsl/Tcp.scala; akka-stream/src/main/scala/com/typesafe/sslconfig/akka/AkkaSSLConfig.scala,jrudolph,2022-05-05T11:51:10Z,2022-08-12T13:02:07Z
31263,31370,Harden ReliableDeliveryShardingSpec  #31263,"Similar to https://github.com/akka/akka/pull/31234  References #31263 ",closed,akka-cluster-sharding-typed/src/test/java/jdocs/akka/cluster/sharding/typed/AccountExampleDocTest.java; akka-cluster-sharding-typed/src/test/scala/akka/cluster/sharding/typed/delivery/ReliableDeliveryShardingSpec.scala,patriknw,2022-04-27T12:39:09Z,2022-04-28T05:38:59Z
31263,31707,Harden ReliableDeliveryShardingSpec  #31263,"* Missing Confirmed and therefore the expected message was not delivered  References #31263 ",closed,akka-actor-typed/src/main/scala/akka/actor/typed/delivery/internal/ConsumerControllerImpl.scala; akka-cluster-sharding-typed/src/test/scala/akka/cluster/sharding/typed/delivery/ReliableDeliveryShardingSpec.scala,patriknw,2022-10-28T11:42:14Z,2022-10-31T10:20:17Z
31250,31709,Harden RemoteFailureSpec  #31250,"* Reduced to 3 remote ActorSystems  in case it was too heavy to run 6 in CI * Adding a first message identification check (at least easier to diagnose)  <!--   Are there any relevant issues / PRs / mailing lists discussions?   Please reference them here - but don't use `fixes` notation. --> References #31250 ",closed,akka-remote/src/test/scala/akka/remote/artery/RemoteFailureSpec.scala,patriknw,2022-10-28T12:40:45Z,2022-10-31T10:19:12Z
31221,31224,Fix race condition in RememberEntitiesAndStartEntitySpec,"References #31221 ",closed,akka-cluster-sharding/src/test/scala/akka/cluster/sharding/RememberEntitiesAndStartEntitySpec.scala,johanandren,2022-03-09T13:49:12Z,2022-03-09T14:42:56Z
31221,31708,Harden RememberEntitiesAndStartEntitySpec  #31221,"* short inner timeout  otherwise it will not retry  <!--   Are there any relevant issues / PRs / mailing lists discussions?   Please reference them here - but don't use `fixes` notation. --> References #31221 ",closed,akka-cluster-sharding/src/test/scala/akka/cluster/sharding/RememberEntitiesAndStartEntitySpec.scala,patriknw,2022-10-28T12:16:03Z,2022-10-31T10:19:36Z
31132,31135,Don't test publishLocal with JDK 17  #31132,"* JDK 17 builds are failing with ConcurrentModificationExceptions for the osgiBundle task  References #31132 ",closed,.github/workflows/nightly-builds.yml,patriknw,2022-02-18T06:55:53Z,2022-02-18T08:16:30Z
31132,31136,Don't test publishLocal with JDK 17 - fix syntax error  #31132,"Fix mistake from https://github.com/akka/akka/pull/31135  References #31132 ",closed,.github/workflows/nightly-builds.yml,patriknw,2022-02-18T08:23:19Z,2022-02-18T09:42:57Z
31097,31595,Update Jackson to 2.13.4  #31097,"Refs #31097  Release notes https://github.com/FasterXML/jackson/wiki/Jackson-Release-2.12 https://github.com/FasterXML/jackson/wiki/Jackson-Release-2.13",closed,akka-docs/src/main/paradox/project/migration-guide-2.6.x-2.7.x.md; akka-serialization-jackson/src/main/scala/akka/serialization/jackson/JacksonObjectMapperProvider.scala; project/Dependencies.scala,patriknw,2022-09-15T12:00:37Z,2022-09-16T10:35:52Z
31095,32050,fix: DownSelfQuarantinedByRemote should not be triggered by harmless quarantine  #31095,"* the harmless flag was taken into account in the immediate Quarantined message but it was always sent for later attempts from InboundQuarantineCheck  References #31095 ",closed,akka-cluster/src/multi-jvm/scala/akka/cluster/DowningWhenOtherHasQuarantinedThisActorSystemSpec.scala; akka-remote/src/main/mima-filters/2.8.4.backwards.excludes/issue-31095-quarantine-harmless.excludes; akka-remote/src/main/scala/akka/remote/artery/ArteryTransport.scala; akka-remote/src/main/scala/akka/remote/artery/Association.scala; akka-remote/src/main/scala/akka/remote/artery/InboundQuarantineCheck.scala; akka-remote/src/test/scala/akka/remote/artery/TestContext.scala,patriknw,2023-08-17T14:38:02Z,2023-08-18T07:29:28Z
31095,32117,fix: DownSelfQuarantinedByRemote should not be triggered by harmless quarantine  #31095 (backport),"Backport of https://github.com/akka/akka/pull/32050  * the harmless flag was taken into account in the immediate Quarantined message but it was always sent for later attempts from InboundQuarantineCheck * mima filters  (cherry picked from commit 8011e8e2de56502771336140a1c1dd84d3b97de6) ",closed,akka-cluster/src/multi-jvm/scala/akka/cluster/DowningWhenOtherHasQuarantinedThisActorSystemSpec.scala; akka-remote/src/main/mima-filters/2.8.4.backwards.excludes/issue-31095-quarantine-harmless.excludes; akka-remote/src/main/scala/akka/remote/artery/ArteryTransport.scala; akka-remote/src/main/scala/akka/remote/artery/Association.scala; akka-remote/src/main/scala/akka/remote/artery/InboundQuarantineCheck.scala; akka-remote/src/test/scala/akka/remote/artery/TestContext.scala,patriknw,2023-09-20T11:16:27Z,2023-09-20T12:32:43Z
31087,31685,Document add-opens flags for Java 17  #31087,"References #31087 ",closed,akka-docs/src/main/paradox/persistence.md; akka-docs/src/main/paradox/remoting-artery.md; akka-docs/src/main/paradox/typed/cluster-sharding.md; akka-docs/src/main/paradox/typed/distributed-data.md,patriknw,2022-10-18T09:53:51Z,2022-10-18T10:55:07Z
31068,32106,Remove broken link (#31068),"References #31068  ",closed,akka-docs/src/main/paradox/typed/choosing-cluster.md,Captain1653,2023-09-18T16:51:40Z,2023-09-19T07:03:49Z
31058,31598,Change default persistence plugin-dispatcher  #31058,Refs #31058,closed,akka-docs/src/main/paradox/persistence-journals.md; akka-docs/src/main/paradox/project/migration-guide-2.6.x-2.7.x.md; akka-docs/src/test/scala/docs/persistence/PersistencePluginDocSpec.scala; akka-persistence/src/main/resources/reference.conf,patriknw,2022-09-16T06:26:01Z,2022-09-20T07:48:08Z
31053,32261,feat: TTL for typed pub/sub topic actors,"Related to #31053   A topic actor can now shut itself down after a period of inactivity - the inactivity counter starts from when from when the subscriber list becomes empty  or the last local message was published. ",closed,akka-actor-typed-tests/src/test/scala/akka/actor/typed/pubsub/LocalPubSubSpec.scala; akka-actor-typed/src/main/scala/akka/actor/typed/internal/pubsub/TopicImpl.scala; akka-actor-typed/src/main/scala/akka/actor/typed/pubsub/Topic.scala,johanandren,2023-12-15T13:24:11Z,2023-12-20T11:49:08Z
31053,32262,feat: System wide typed pub sub topic registry,"On top of #32261   References #31053 ",closed,akka-actor-typed-tests/src/test/java/jdocs/akka/typed/pubsub/PubSubExample.java; akka-actor-typed-tests/src/test/scala/akka/actor/typed/pubsub/LocalTopicSpec.scala; akka-actor-typed-tests/src/test/scala/akka/actor/typed/pubsub/PubSubSpec.scala; akka-actor-typed-tests/src/test/scala/docs/akka/typed/pubsub/PubSubExample.scala; akka-actor-typed/src/main/scala/akka/actor/typed/internal/pubsub/TopicImpl.scala; akka-actor-typed/src/main/scala/akka/actor/typed/pubsub/PubSub.scala; akka-actor-typed/src/main/scala/akka/actor/typed/pubsub/Topic.scala; akka-docs/src/main/paradox/typed/distributed-pub-sub.md,johanandren,2023-12-15T16:36:12Z,2024-01-23T12:53:29Z
30446,31529,Delete effect in durable state  #30446,"Cont from https://github.com/akka/akka/pull/31099  I have merged `main` into the PR branch.  Refs https://github.com/akka/akka/issues/30446",closed,akka-cluster-sharding-typed/src/test/scala/docs/akka/cluster/sharding/typed/DurableStateStoreQueryUsageCompileOnlySpec.scala; akka-docs/src/main/paradox/durable-state/persistence-query.md; akka-docs/src/main/paradox/typed/durable-state/persistence.md; akka-persistence-query/src/main/scala/akka/persistence/query/DurableStateChange.scala; akka-persistence-query/src/main/scala/akka/persistence/query/javadsl/DurableStateStoreQuery.scala; akka-persistence-query/src/main/scala/akka/persistence/query/scaladsl/DurableStateStoreQuery.scala; akka-persistence-query/src/main/scala/akka/persistence/query/typed/javadsl/DurableStateStoreBySliceQuery.scala; akka-persistence-query/src/main/scala/akka/persistence/query/typed/scaladsl/DurableStateStoreBySliceQuery.scala; akka-persistence-testkit/src/main/scala/akka/persistence/testkit/state/javadsl/PersistenceTestKitDurableStateStore.scala; akka-persistence-testkit/src/main/scala/akka/persistence/testkit/state/scaladsl/PersistenceTestKitDurableStateStore.scala; akka-persistence-typed-tests/src/test/scala/akka/persistence/typed/state/scaladsl/DurableStateBehaviorReplySpec.scala; akka-persistence-typed/src/main/scala/akka/persistence/typed/state/internal/DurableStateBehaviorImpl.scala; akka-persistence-typed/src/main/scala/akka/persistence/typed/state/internal/DurableStateStoreInteractions.scala; akka-persistence-typed/src/main/scala/akka/persistence/typed/state/internal/EffectImpl.scala; akka-persistence-typed/src/main/scala/akka/persistence/typed/state/internal/Recovering.scala; akka-persistence-typed/src/main/scala/akka/persistence/typed/state/internal/Running.scala; akka-persistence-typed/src/main/scala/akka/persistence/typed/state/scaladsl/Effect.scala; akka-persistence-typed/src/test/scala/docs/akka/persistence/typed/DurableStatePersistentBehaviorCompileOnly.scala; akka-persistence/src/main/mima-filters/2.6.19.backwards.excludes/30446-deleteObject.excludes; akka-persistence/src/main/scala/akka/persistence/state/javadsl/DurableStateUpdateStore.scala; akka-persistence/src/main/scala/akka/persistence/state/scaladsl/DurableStateUpdateStore.scala,patriknw,2022-09-02T06:20:03Z,2022-09-02T06:56:35Z
30245,31833,chore: Drop SerialVersionUID remover plugin sources,"We left them around after we stopped using it in the build  References #30245",closed,plugins/serialversion-remover-plugin/src/main/scala/akka/Plugin.scala,johanandren,2023-02-07T10:46:12Z,2023-02-08T12:50:52Z
30205,31872,fix: GroupBy incorrectly failing for element on closed substream ,"References #30205 ",closed,akka-stream-tests/src/test/scala/akka/stream/scaladsl/FlowGroupBySpec.scala; akka-stream/src/main/scala/akka/stream/impl/fusing/StreamOfStreams.scala,johanandren,2023-03-08T13:04:21Z,2023-03-10T15:23:20Z
30201,31832,fix: finalizeStage being called multiple times for the same stage,"Reproducer and fix.  For some reason I can't reproduce unless using the typed testkit so reproducer/test coverage is in akka-stream-typed.  References #30201  ",closed,akka-stream-typed/src/test/scala/akka/stream/typed/scaladsl/Bug30201ReproducerSpec.scala; akka-stream/src/main/scala/akka/stream/impl/fusing/GraphInterpreter.scala,johanandren,2023-02-06T16:39:14Z,2023-02-16T13:00:22Z
30002,31874,chore: Use ClusterShuttingDown in ddata Replicator,"* I don't think this will fix any issue but I noted it when investigating #30002 * ClusterShuttingDown will be received before all MemberRemoved. Better to stop immediataly. * Theoretically there could be a RemovedNodePruning tick inbetween the MemberRemoved messages. ",closed,akka-distributed-data/src/main/scala/akka/cluster/ddata/Replicator.scala,patriknw,2023-03-08T15:08:41Z,2023-03-10T11:44:58Z
29951,31420,Rename method typed.javadsl.FishingOutcomes.continue  due to compilation error in Java (#29951),"References #29951   I didn't find any mentions of the method in the docs. Did I miss something?  ",closed,akka-actor-testkit-typed/src/main/mima-filters/2.6.19.backwards.excludes/rename-fishing-outcomes-continue-java.excludes; akka-actor-testkit-typed/src/main/scala/akka/actor/testkit/typed/javadsl/TestProbe.scala,Captain1653,2022-05-24T18:50:57Z,2022-05-30T07:27:21Z
29933,32137,fix: Avoid StackOverflowError when stash contains many read-only commands  #29933,"References #29933  I'll do the same for Durable State but let's review the approach first. ",closed,akka-persistence-typed-tests/src/test/scala/akka/persistence/typed/scaladsl/EventSourcedStashOverflowSpec.scala; akka-persistence-typed-tests/src/test/scala/akka/persistence/typed/state/scaladsl/DurableStateStashOverflowSpec.scala; akka-persistence-typed/src/main/scala/akka/persistence/typed/internal/EventSourcedBehaviorImpl.scala; akka-persistence-typed/src/main/scala/akka/persistence/typed/internal/ReplayingEvents.scala; akka-persistence-typed/src/main/scala/akka/persistence/typed/internal/ReplayingSnapshot.scala; akka-persistence-typed/src/main/scala/akka/persistence/typed/internal/Running.scala; akka-persistence-typed/src/main/scala/akka/persistence/typed/internal/StashManagement.scala; akka-persistence-typed/src/main/scala/akka/persistence/typed/state/internal/DurableStateBehaviorImpl.scala; akka-persistence-typed/src/main/scala/akka/persistence/typed/state/internal/Recovering.scala; akka-persistence-typed/src/main/scala/akka/persistence/typed/state/internal/Running.scala; akka-persistence-typed/src/main/scala/akka/persistence/typed/state/internal/StashManagement.scala,patriknw,2023-09-28T09:41:54Z,2023-10-04T11:37:34Z
29922,30043,stream: add assertion against JDK bug to avoid spin loop in TlsActor,"Refs #29922  I haven't been able yet to make the exact behavior reproducible in isolation. The shared reproducer in the ticket runs it in a loop until the condition happens.",closed,akka-stream/src/main/scala/akka/stream/impl/io/TLSActor.scala,jrudolph,2021-02-17T11:57:15Z,2021-03-10T07:49:15Z
29922,30577,[backport] stream: add assertion against JDK bug to avoid spin loop in TlsActor #30043,Backport https://github.com/akka/akka/pull/30043,closed,akka-stream/src/main/scala/akka/stream/impl/io/TLSActor.scala,sebastian-alfers,2021-08-26T10:09:56Z,2021-08-26T14:02:11Z
29922,31321,stream: try to guard against unlimited looping in TlsActor.doUnwrap,"Similar as before in `doWrap` we check if we have made any progress before looping.  Refs #29922",closed,akka-stream/src/main/scala/akka/stream/impl/io/TLSActor.scala,jrudolph,2022-04-07T10:16:56Z,2022-04-14T08:44:05Z
29850,31596,Deprecate old api in streams testkit  #29850,"References #29850  Deprecated the `probe` methods in favour of apply and create. Many but rather mechanical changes in tests.",closed,akka-docs/src/test/java/jdocs/actor/ActorDocTest.java; akka-docs/src/test/java/jdocs/stream/operators/SourceOrFlow.java; akka-docs/src/test/scala/docs/stream/RateTransformationDocSpec.scala; akka-docs/src/test/scala/docs/stream/StreamTestKitDocSpec.scala; akka-persistence-query/src/test/scala/akka/persistence/query/journal/leveldb/AllPersistenceIdsSpec.scala; akka-persistence-query/src/test/scala/akka/persistence/query/journal/leveldb/EventsByPersistenceIdSpec.scala; akka-persistence-query/src/test/scala/akka/persistence/query/journal/leveldb/EventsByTagSpec.scala; akka-persistence-testkit/src/test/scala/akka/persistence/testkit/query/EventsByPersistenceIdSpec.scala; akka-remote/src/test/scala/akka/remote/artery/DuplicateFlushSpec.scala; akka-remote/src/test/scala/akka/remote/artery/DuplicateHandshakeSpec.scala; akka-remote/src/test/scala/akka/remote/artery/InboundControlJunctionSpec.scala; akka-remote/src/test/scala/akka/remote/artery/InboundHandshakeSpec.scala; akka-remote/src/test/scala/akka/remote/artery/OutboundControlJunctionSpec.scala; akka-remote/src/test/scala/akka/remote/artery/OutboundHandshakeSpec.scala; akka-remote/src/test/scala/akka/remote/artery/SendQueueSpec.scala; akka-remote/src/test/scala/akka/remote/artery/SystemMessageAckerSpec.scala; akka-remote/src/test/scala/akka/remote/artery/SystemMessageDeliverySpec.scala; akka-stream-testkit/src/main/scala/akka/stream/testkit/javadsl/TestSink.scala; akka-stream-testkit/src/main/scala/akka/stream/testkit/javadsl/TestSource.scala; akka-stream-testkit/src/main/scala/akka/stream/testkit/scaladsl/TestSink.scala; akka-stream-testkit/src/main/scala/akka/stream/testkit/scaladsl/TestSource.scala; akka-stream-testkit/src/test/scala/akka/stream/testkit/StreamTestKitSpec.scala; akka-stream-tests/src/test/java/akka/stream/javadsl/FlowTest.java; akka-stream-tests/src/test/scala/akka/stream/impl/GraphStageLogicSpec.scala; akka-stream-tests/src/test/scala/akka/stream/io/FileSourceSpec.scala; akka-stream-tests/src/test/scala/akka/stream/io/InputStreamSinkSpec.scala; akka-stream-tests/src/test/scala/akka/stream/io/InputStreamSourceSpec.scala; akka-stream-tests/src/test/scala/akka/stream/io/OutputStreamSourceSpec.scala; akka-stream-tests/src/test/scala/akka/stream/scaladsl/ActorRefBackpressureSinkSpec.scala; akka-stream-tests/src/test/scala/akka/stream/scaladsl/ActorRefBackpressureSourceSpec.scala,patriknw,2022-09-15T13:18:14Z,2022-09-15T13:59:57Z
29795,32104,fix: typed actor dead letter address (#29795),"<!--   Are there any relevant issues / PRs / mailing lists discussions?   Please reference them here - but don't use `fixes` notation. -->  ## Motivation  Attach the necessary information before sending the message to DeadLetter to correctly display the destination in the DeadLetter.   References #29795  ## How does this PR fix work?  In classic Actors  when an Actor dies  its Mailbox is ""swap"" to a `deadLetterMailbox` Mailbox.   <img width=""638"" alt=""截屏2023-09-17 05 18 26"" src=""https://github.com/akka/akka/assets/26020358/b578b7fc-4dcf-47fd-a13b-881916706cfd"">  When an Actor sends a message to another ActorRef  it essentially enqueues the message to that Actor's mailbox.  When an Actor sends a message to a dead Actor  it means that the message would enqueue to the ""deadLetterMailbox"" the dead mailbox will transform the message into a DeadLetter event and then publish it to the EventBus. This is how DeadLetters work in classic Actors.   In Typed actor  it basiclly same  but the `sender` variable cannot be passed implicitly.  In the Ask pattern  there are some differences. When an Actor uses ask to request another Actor  it essentially creates a temporary PromiseActorRef to receive the response from the target Actor.  When the PromiseActorRef receives a `tell` call  it checks if the current Future has already completed and  if so  emits a DeadLetter event. This is done to ensure consistent behavior with the tell method (i.e.  sending DeadLetter events to the EventBus via DeadLetterActorRef).  However  the PromiseActorRef directly sends the message without transforming it into a DeadLetter event  resulting in distorted logs.  This PR converts the message into a DeadLetter event before sending it from PromiseActorRef to DeadLetterActorRef.",closed,akka-actor-typed-tests/src/test/scala/akka/actor/typed/AskSpec.scala; akka-actor/src/main/scala/akka/pattern/AskSupport.scala,Roiocam,2023-09-16T21:35:06Z,2023-09-18T10:15:08Z
29330,31198,actor: try to avoid ChannelReadable dead letter in TcpConnection,"Refs #29330  It is not completely clear that this state is the culprit but since we do not have any better idea  let's try this.",closed,akka-actor/src/main/scala/akka/io/TcpConnection.scala,jrudolph,2022-03-03T09:10:39Z,2022-03-03T11:58:12Z
29109,32100,docs: event stream typed document (#29109),"<!--   Are there any relevant issues / PRs / mailing lists discussions?   Please reference them here - but don't use `fixes` notation. --> References #29109 ",closed,akka-actor-typed-tests/src/test/java/akka/actor/typed/eventstream/LoggingDocTest.java; akka-actor-typed-tests/src/test/scala/akka/actor/typed/eventstream/LoggingDocSpec.scala; akka-docs/src/main/paradox/event-bus.md; akka-docs/src/main/paradox/general/message-delivery-reliability.md; akka-docs/src/main/paradox/index-utilities.md; akka-docs/src/main/paradox/typed/event-stream.md; akka-docs/src/main/paradox/typed/logging.md; akka-docs/src/test/java/jdocs/event/LoggingDocTest.java,Roiocam,2023-09-14T16:09:40Z,2023-10-10T07:15:10Z
28436,32087,Add clarification to docs between ActorContext and Behavior in Typed (#28436),"References #28436   I've copied the explanation and added some apidoc annotations.   Please  let me know if I should add or remove something. ",closed,akka-docs/src/main/paradox/typed/from-classic.md,Captain1653,2023-09-06T06:44:50Z,2023-09-15T13:59:52Z
28040,32084,Replace labels on the image: should be flatMapMerge  but was flatFlattenMerge #28040,"References #28040  I'm not an expert in graphics  but it can be something like that :) . ",closed,akka-docs/src/main/paradox/images/stream-substream-flatMapMerge.png,Captain1653,2023-09-05T07:30:09Z,2023-09-05T08:28:33Z
27960,32102,chore: Mark stream APIs stable,"* Cancellation strategies * RetryFlow * Materializer snapshots  References #27960 ",closed,akka-stream/src/main/scala/akka/stream/Attributes.scala; akka-stream/src/main/scala/akka/stream/javadsl/RetryFlow.scala; akka-stream/src/main/scala/akka/stream/scaladsl/RetryFlow.scala; akka-stream/src/main/scala/akka/stream/snapshot/MaterializerState.scala,johanandren,2023-09-15T13:58:23Z,2023-09-18T10:16:02Z
27683,31721,Expiry of CRDT entries  #27683,"- [x] reference docs  but otherwise ready for review  References #27683 ",closed,akka-cluster-typed/src/main/scala/akka/cluster/ddata/typed/internal/ReplicatorBehavior.scala; akka-cluster-typed/src/main/scala/akka/cluster/ddata/typed/javadsl/Replicator.scala; akka-cluster-typed/src/main/scala/akka/cluster/ddata/typed/scaladsl/Replicator.scala; akka-cluster-typed/src/main/scala/akka/cluster/ddata/typed/scaladsl/ReplicatorMessageAdapter.scala; akka-distributed-data/src/main/java/akka/cluster/ddata/protobuf/msg/ReplicatedDataMessages.java; akka-distributed-data/src/main/java/akka/cluster/ddata/protobuf/msg/ReplicatorMessages.java; akka-distributed-data/src/main/mima-filters/2.7.0.backwards.excludes/27683-crdt-expiry.excludes; akka-distributed-data/src/main/protobuf/ReplicatorMessages.proto; akka-distributed-data/src/main/resources/reference.conf; akka-distributed-data/src/main/scala/akka/cluster/ddata/DurableStore.scala; akka-distributed-data/src/main/scala/akka/cluster/ddata/Replicator.scala; akka-distributed-data/src/main/scala/akka/cluster/ddata/protobuf/ReplicatorMessageSerializer.scala; akka-distributed-data/src/multi-jvm/scala/akka/cluster/ddata/DurableDataSpec.scala; akka-distributed-data/src/multi-jvm/scala/akka/cluster/ddata/ExpirySpec.scala; akka-distributed-data/src/test/scala/akka/cluster/ddata/ReplicatorSettingsSpec.scala; akka-distributed-data/src/test/scala/akka/cluster/ddata/protobuf/ReplicatorMessageSerializerSpec.scala; akka-docs/src/main/paradox/typed/distributed-data.md,patriknw,2022-11-07T16:14:20Z,2022-11-10T12:33:02Z
27330,27331,Backport new serializers from 2.6,"This is not a trivial cherry-pick backport so would be good with review.  A few new serializers were added in 2.6.0-M5:  * BooleanSerializer * 4 new messages for Cluster Sharding queries in ClusterShardingMessageSerializer * ThrowableNotSerializableException in MiscMessageSerializer * TimeoutException in MiscMessageSerializer  Those were originally added in https://github.com/akka/akka/pull/27306 and https://github.com/akka/akka/pull/27285  Backported here for 2.5.24 to support deserialization in rolling update to 2.6.0. Those are not enabled for serialization (toBinary)  see issue #27330 for enabling in a later version  but that is not strictly needed.",closed,akka-actor-tests/src/test/scala/akka/serialization/PrimitivesSerializationSpec.scala; akka-actor/src/main/resources/reference.conf; akka-actor/src/main/scala/akka/serialization/PrimitiveSerializers.scala; akka-cluster-sharding/src/main/java/akka/cluster/sharding/protobuf/msg/ClusterShardingMessages.java; akka-cluster-sharding/src/main/protobuf/ClusterShardingMessages.proto; akka-cluster-sharding/src/main/scala/akka/cluster/sharding/ShardRegion.scala; akka-cluster-sharding/src/main/scala/akka/cluster/sharding/protobuf/ClusterShardingMessageSerializer.scala; akka-cluster-sharding/src/test/scala/akka/cluster/sharding/protobuf/ClusterShardingMessageSerializerSpec.scala; akka-remote/src/main/java/akka/remote/ArteryControlFormats.java; akka-remote/src/main/java/akka/remote/ContainerFormats.java; akka-remote/src/main/java/akka/remote/SystemMessageFormats.java; akka-remote/src/main/java/akka/remote/WireFormats.java; akka-remote/src/main/protobuf/ContainerFormats.proto; akka-remote/src/main/resources/reference.conf; akka-remote/src/main/scala/akka/remote/serialization/MiscMessageSerializer.scala; akka-remote/src/main/scala/akka/remote/serialization/ThrowableNotSerializableException.scala; akka-remote/src/test/java/akka/remote/ProtobufProtocol.java; akka-remote/src/test/scala/akka/remote/serialization/MiscMessageSerializerSpec.scala,patriknw,2019-07-11T11:37:25Z,2019-07-12T11:54:34Z
24912,24913,make akka.paterns PatternCS imports explicit in gracefulStop docs #24912,,closed,akka-docs/src/main/paradox/actors.md,kkolman,2018-04-16T17:44:55Z,2018-04-24T17:12:34Z
24465,25625,Protobuf serializers for ShardRegionStats,"Protobuf (de)serialization for: * GetShardRegionStast$ * ShardRegionStats  According to a description in https://github.com/akka/akka/issues/25348 issue those are only serializers. They are not turned on in a configuration.",closed,akka-cluster-sharding/src/main/java/akka/cluster/sharding/protobuf/msg/ClusterShardingMessages.java; akka-cluster-sharding/src/main/protobuf/ClusterShardingMessages.proto; akka-cluster-sharding/src/main/scala/akka/cluster/sharding/protobuf/ClusterShardingMessageSerializer.scala; akka-cluster-sharding/src/test/scala/akka/cluster/sharding/protobuf/ClusterShardingMessageSerializerSpec.scala,btomala,2018-09-14T20:06:08Z,2018-10-15T11:30:42Z
23951,24577,#23951 Fail materialized future of IO stages when stream fails,Fixes #23951,closed,akka-stream-tests/src/test/scala/akka/stream/io/FileSinkSpec.scala; akka-stream-tests/src/test/scala/akka/stream/io/OutputStreamSinkSpec.scala; akka-stream/src/main/scala/akka/stream/IOResult.scala; akka-stream/src/main/scala/akka/stream/impl/io/FileSubscriber.scala; akka-stream/src/main/scala/akka/stream/impl/io/OutputStreamSubscriber.scala,2m,2018-02-20T16:08:24Z,2018-02-21T12:41:17Z
23086,23085,Merged the document from java/stream/stages-overview and scala/stream…,"Reference #23052    - Merged Identical contents in java/stream/stages-overview.md and scala/stream/stages-overview.md  - Replaced content of java/stream/stages-overview.md with a symlink to scala/stream/stages-overview.md",closed,akka-docs/src/main/paradox/java/stream/stages-overview.md; akka-docs/src/main/paradox/java/stream/stream-composition.md; akka-docs/src/main/paradox/java/stream/stream-flows-and-basics.md; akka-docs/src/main/paradox/scala/stream/stages-overview.md; akka-docs/src/main/paradox/scala/stream/stream-composition.md; akka-docs/src/main/paradox/scala/stream/stream-flows-and-basics.md,atiqsayyed,2017-06-03T09:26:18Z,2017-06-07T17:24:13Z
21899,21915,No default OSGi private package to avoid publish build warnings,"Refs #21899   Disclaimer: I'm not very familiar with SBT and OSGi  so please let me know anything wrong here..  ### what I found  The below warning:  ``` [warn] bnd: Unused Private-Package instructions  no such package(s) on the class path: [com.typesafe.akka.distributed.data.experimental.*] ```  came from [bndtools/bnd -> Builder.java](https://github.com/bndtools/bnd/blob/1f3bafc331902bf16d47d083a36934b4960357b9/biz.aQute.bndlib/src/aQute/bnd/osgi/Builder.java#L569L571)  which was used in  [sbtOsgi plugin's SbtOsgi.scala](https://github.com/sbt/sbt-osgi/blob/16ad2f8910530d24977efb9dc6cee40cbe619ae7/src/main/scala/com/typesafe/sbt/osgi/SbtOsgi.scala#L75L82).  `SbtOsgi` sets the default private package as :  ```   def defaultOsgiSettings: Seq[Setting[_]] = {        ...       bundleSymbolicName <<= (organization  normalizedName)(Osgi.defaultBundleSymbolicName)         ...       privatePackage <<= bundleSymbolicName(name => List(name + "".*""))           //this becomes like ""com.typesafe.akka.distributed.data.experimental.*""          //or ""com.typesafe.akka.testkit.*""  etc ```  which is used in [akka's OSGi.scala]() as the default value for `OsgiKeys.privatePackage`  since it was not overriden.  This resulted in the unused (default) private packages.",closed,project/OSGi.scala,richardimaoka,2016-11-30T17:43:11Z,2016-12-13T12:37:41Z
